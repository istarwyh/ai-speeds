// 自动生成的客户端脚本包
// 构建时间: 2025-07-26T09:20:15.206Z
// 请勿手动修改此文件

export const bestPracticesClientScript = "var BestPracticesApp = (() => {\n  var __defProp = Object.defineProperty;\n  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\n  var __publicField = (obj, key, value) => {\n    __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n    return value;\n  };\n\n  // src/client/bestPractices/data/categoryConfig.ts\n  var categoryIcons = {\n    \"workflow\": \"\\u{1F504}\",\n    \"configuration\": \"\\u2699\\uFE0F\",\n    \"mcp-commands\": \"\\u{1F6E0}\\uFE0F\",\n    \"context\": \"\\u{1F4DD}\",\n    \"automation\": \"\\u{1F916}\",\n    \"concurrency\": \"\\u{1F465}\"\n  };\n  var difficultyColors = {\n    \"beginner\": \"#10b981\",\n    \"intermediate\": \"#f59e0b\",\n    \"advanced\": \"#ef4444\",\n    \"expert\": \"#8b5cf6\"\n  };\n  var difficultyLabels = {\n    \"beginner\": \"\\u521D\\u7EA7\",\n    \"intermediate\": \"\\u4E2D\\u7EA7\",\n    \"advanced\": \"\\u9AD8\\u7EA7\",\n    \"expert\": \"\\u4E13\\u5BB6\"\n  };\n\n  // src/client/bestPractices/renderers/CardRenderer.ts\n  var CardRenderer = class {\n    renderCards(cards) {\n      return cards.map((card) => this.renderCard(card)).join(\"\");\n    }\n    renderCard(card) {\n      const icon = categoryIcons[card.category] || \"\\u{1F4CB}\";\n      const difficultyColor = difficultyColors[card.difficulty];\n      const difficultyLabel = difficultyLabels[card.difficulty];\n      const sectionsHtml = this.renderSections(card.sections);\n      const tipsHtml = this.renderTips(card.tips);\n      const tagsHtml = this.renderTags(card.tags);\n      return `\n      <div class=\"practice-card overview-card\" data-card-id=\"${card.id}\">\n        <div class=\"overview-card__header\">\n          <div class=\"overview-card__title-section\">\n            <div class=\"overview-card__icon\">${icon}</div>\n            <h3 class=\"overview-card__title\">${card.title}</h3>\n          </div>\n          <div class=\"overview-card__meta\">\n            <span class=\"overview-card__difficulty\" style=\"--difficulty-color: ${difficultyColor}\">\n              ${difficultyLabel}\n            </span>\n            <span class=\"overview-card__read-time\">\\u{1F4D6} ${card.readTime}</span>\n          </div>\n        </div>\n        \n        <div class=\"overview-card__content\">\n          <p class=\"overview-card__description\">${card.description}</p>\n          <div class=\"overview-card__overview\">${card.overview}</div>\n          \n          <div class=\"overview-card__sections\">\n            <h4 class=\"overview-card__sections-title\">\\u4E3B\\u8981\\u5185\\u5BB9\\uFF1A</h4>\n            <ul class=\"overview-card__sections-list\">\n              ${sectionsHtml}\n            </ul>\n          </div>\n\n          ${tipsHtml ? `<div class=\"overview-card__tips\">${tipsHtml}</div>` : \"\"}\n          \n          <div class=\"overview-card__tags\">\n            ${tagsHtml}\n          </div>\n        </div>\n        \n        <div class=\"overview-card__footer\">\n          <button class=\"overview-card__action-btn\" data-card-id=\"${card.id}\">\n            \\u67E5\\u770B\\u8BE6\\u7EC6\\u5185\\u5BB9 \\u2192\n          </button>\n          <div class=\"overview-card__meta-info\">\n            <span class=\"overview-card__version\">v${card.version}</span>\n            <span class=\"overview-card__updated\">\\u66F4\\u65B0\\u4E8E ${card.lastUpdated}</span>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n    renderSections(sections) {\n      return sections.map((section) => `\n      <li class=\"overview-card__section-item\">\n        <span class=\"overview-card__section-title\">${section.title}</span>\n        <span class=\"overview-card__section-content\">${section.content}</span>\n      </li>\n    `).join(\"\");\n    }\n    renderTips(tips) {\n      if (!tips || tips.length === 0)\n        return \"\";\n      return tips.map((tip) => `\n      <div class=\"overview-card__tip overview-card__tip--${tip.type}\">\n        <strong class=\"overview-card__tip-title\">${tip.title}:</strong>\n        <span class=\"overview-card__tip-content\">${tip.content}</span>\n      </div>\n    `).join(\"\");\n    }\n    renderTags(tags) {\n      return tags.map((tag) => `\n      <span class=\"overview-card__tag\">${tag}</span>\n    `).join(\"\");\n    }\n  };\n\n  // src/client/bestPractices/renderers/ArticleRenderer.ts\n  var ArticleRenderer = class {\n    renderArticle(title, content) {\n      return `\n      <div class=\"practice-article\">\n        <div class=\"practice-article__header\">\n          <button class=\"practice-article__back-btn\" onclick=\"showOverviewCards()\">\n            \\u2190 \\u8FD4\\u56DE\\u6982\\u89C8\n          </button>\n          <h2 class=\"practice-article__title\">${title}</h2>\n        </div>\n        \n        <div class=\"practice-article__content\">\n          ${content}\n        </div>\n      </div>\n    `;\n    }\n    renderLoadingState() {\n      return `\n      <div class=\"practice-article\">\n        <div class=\"practice-article__header\">\n          <button class=\"practice-article__back-btn\" onclick=\"showOverviewCards()\">\n            \\u2190 \\u8FD4\\u56DE\\u6982\\u89C8\n          </button>\n          <h2 class=\"practice-article__title\">\\u52A0\\u8F7D\\u4E2D...</h2>\n        </div>\n        \n        <div class=\"practice-article__content\">\n          <div class=\"loading-spinner\">\n            <div class=\"spinner\"></div>\n            <p>\\u6B63\\u5728\\u52A0\\u8F7D\\u5185\\u5BB9...</p>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n    renderErrorState(error) {\n      return `\n      <div class=\"practice-article\">\n        <div class=\"practice-article__header\">\n          <button class=\"practice-article__back-btn\" onclick=\"showOverviewCards()\">\n            \\u2190 \\u8FD4\\u56DE\\u6982\\u89C8\n          </button>\n          <h2 class=\"practice-article__title\">\\u52A0\\u8F7D\\u5931\\u8D25</h2>\n        </div>\n        \n        <div class=\"practice-article__content\">\n          <div class=\"error-message\">\n            <p>\\u274C \\u65E0\\u6CD5\\u52A0\\u8F7D\\u5185\\u5BB9: ${error}</p>\n            <button onclick=\"location.reload()\" class=\"retry-btn\">\\u91CD\\u8BD5</button>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n  };\n\n  // src/client/bestPractices/services/MarkdownParser.ts\n  var MarkdownParser = class {\n    parse(markdown) {\n      let html = markdown;\n      html = this.escapeHtml(html);\n      html = this.parseHeaders(html);\n      html = this.parseCodeBlocks(html);\n      html = this.parseInlineCode(html);\n      html = this.parseLists(html);\n      html = this.parseParagraphs(html);\n      html = this.parseEmphasis(html);\n      return html;\n    }\n    escapeHtml(text) {\n      const div = document.createElement(\"div\");\n      div.textContent = text;\n      return div.innerHTML;\n    }\n    parseHeaders(html) {\n      return html.replace(/^(#{1,6})\\s+(.+)$/gm, (match, hashes, content) => {\n        const level = hashes.length;\n        return `<h${level} class=\"markdown-h${level}\">${content.trim()}</h${level}>`;\n      });\n    }\n    parseCodeBlocks(html) {\n      return html.replace(/```(\\w+)?\\n([\\s\\S]*?)```/g, (match, lang, code) => {\n        const language = lang || \"text\";\n        return `<pre class=\"code-block\"><code class=\"language-${language}\">${code.trim()}</code></pre>`;\n      });\n    }\n    parseInlineCode(html) {\n      return html.replace(/`([^`]+)`/g, '<code class=\"inline-code\">$1</code>');\n    }\n    parseLists(html) {\n      html = html.replace(/^[\\s]*[-*+]\\s+(.+)$/gm, \"<li>$1</li>\");\n      html = html.replace(/(<li>.*<\\/li>)/s, '<ul class=\"markdown-list\">$1</ul>');\n      html = html.replace(/^[\\s]*\\d+\\.\\s+(.+)$/gm, \"<li>$1</li>\");\n      return html;\n    }\n    parseParagraphs(html) {\n      const lines = html.split(\"\\n\");\n      const result = [];\n      let currentParagraph = [];\n      for (const line of lines) {\n        const trimmedLine = line.trim();\n        if (trimmedLine === \"\") {\n          if (currentParagraph.length > 0) {\n            const paragraphContent = currentParagraph.join(\" \").trim();\n            if (paragraphContent && !this.isHtmlTag(paragraphContent)) {\n              result.push(`<p class=\"markdown-paragraph\">${paragraphContent}</p>`);\n            } else {\n              result.push(paragraphContent);\n            }\n            currentParagraph = [];\n          }\n          result.push(\"\");\n        } else if (this.isHtmlTag(trimmedLine)) {\n          if (currentParagraph.length > 0) {\n            const paragraphContent = currentParagraph.join(\" \").trim();\n            result.push(`<p class=\"markdown-paragraph\">${paragraphContent}</p>`);\n            currentParagraph = [];\n          }\n          result.push(trimmedLine);\n        } else {\n          currentParagraph.push(trimmedLine);\n        }\n      }\n      if (currentParagraph.length > 0) {\n        const paragraphContent = currentParagraph.join(\" \").trim();\n        if (paragraphContent && !this.isHtmlTag(paragraphContent)) {\n          result.push(`<p class=\"markdown-paragraph\">${paragraphContent}</p>`);\n        } else {\n          result.push(paragraphContent);\n        }\n      }\n      return result.join(\"\\n\");\n    }\n    parseEmphasis(html) {\n      html = html.replace(/\\*\\*([^*]+)\\*\\*/g, \"<strong>$1</strong>\");\n      html = html.replace(/__([^_]+)__/g, \"<strong>$1</strong>\");\n      html = html.replace(/\\*([^*]+)\\*/g, \"<em>$1</em>\");\n      html = html.replace(/_([^_]+)_/g, \"<em>$1</em>\");\n      return html;\n    }\n    isHtmlTag(text) {\n      return /^<\\/?[a-zA-Z][^>]*>/.test(text.trim());\n    }\n  };\n\n  // src/client/bestPractices/services/ArticleService.ts\n  var ArticleService = class {\n    constructor() {\n      __publicField(this, \"markdownParser\");\n      __publicField(this, \"cache\", /* @__PURE__ */ new Map());\n      this.markdownParser = new MarkdownParser();\n    }\n    async getArticle(cardId) {\n      if (this.cache.has(cardId)) {\n        return this.cache.get(cardId);\n      }\n      try {\n        const markdownContent = await this.fetchMarkdownContent(cardId);\n        const htmlContent = this.markdownParser.parse(markdownContent);\n        const article = {\n          id: cardId,\n          title: this.getTitleFromCardId(cardId),\n          content: htmlContent\n        };\n        this.cache.set(cardId, article);\n        return article;\n      } catch (error) {\n        throw new Error(`\\u65E0\\u6CD5\\u52A0\\u8F7D\\u6587\\u7AE0 ${cardId}: ${error.message}`);\n      }\n    }\n    async fetchMarkdownContent(cardId) {\n      return this.getMockMarkdownContent(cardId);\n    }\n    getMockMarkdownContent(cardId) {\n      const mockContent = {\n        \"workflow-overview\": `\n# \\u6211\\u73B0\\u5728\\u7684\\u5DE5\\u4F5C\\u6D41\n\n## \\u6982\\u8FF0\n\\u57FA\\u4E8E Claude Code \\u7684\\u5B8C\\u6574\\u5F00\\u53D1\\u5DE5\\u4F5C\\u6D41\\uFF0C\\u4ECE\\u9700\\u6C42\\u5230\\u90E8\\u7F72\\u7684\\u5168\\u6D41\\u7A0B\\u6700\\u4F73\\u5B9E\\u8DF5\\u3002\n\n## \\u5DE5\\u4F5C\\u6D41\\u65F6\\u5E8F\\u56FE\n\n\\`\\`\\`mermaid\nsequenceDiagram\n    participant Dev as \\u5F00\\u53D1\\u8005\n    participant CC as Claude Code\n    participant Git as GitHub\n    participant CI as CI/CD\n    \n    Dev->>CC: \\u63D0\\u51FA\\u9700\\u6C42\n    CC->>CC: \\u5206\\u6790\\u9700\\u6C42\n    CC->>Git: \\u521B\\u5EFA\\u5206\\u652F\n    CC->>CC: \\u751F\\u6210\\u4EE3\\u7801\n    CC->>Git: \\u63D0\\u4EA4\\u4EE3\\u7801\n    CC->>Dev: \\u8BF7\\u6C42\\u5BA1\\u67E5\n    Dev->>CC: \\u63D0\\u4F9B\\u53CD\\u9988\n    CC->>Git: \\u4FEE\\u6539\\u4EE3\\u7801\n    CC->>Git: \\u5408\\u5E76\\u5230\\u4E3B\\u5206\\u652F\n    Git->>CI: \\u89E6\\u53D1\\u90E8\\u7F72\n\\`\\`\\`\n\n## \\u6838\\u5FC3\\u6B65\\u9AA4\n\n1. **\\u9700\\u6C42\\u5206\\u6790**: \\u660E\\u786E\\u529F\\u80FD\\u9700\\u6C42\\u548C\\u6280\\u672F\\u8981\\u6C42\n2. **\\u73AF\\u5883\\u51C6\\u5907**: \\u914D\\u7F6E\\u5F00\\u53D1\\u73AF\\u5883\\u548C\\u4F9D\\u8D56\n3. **\\u4EE3\\u7801\\u751F\\u6210**: \\u4F7F\\u7528 Claude Code \\u751F\\u6210\\u9AD8\\u8D28\\u91CF\\u4EE3\\u7801\n4. **\\u6D4B\\u8BD5\\u9A8C\\u8BC1**: \\u8FD0\\u884C\\u6D4B\\u8BD5\\u786E\\u4FDD\\u4EE3\\u7801\\u8D28\\u91CF\n5. **\\u4EE3\\u7801\\u5BA1\\u67E5**: \\u4EBA\\u5DE5\\u5BA1\\u67E5 AI \\u751F\\u6210\\u7684\\u4EE3\\u7801\n6. **\\u96C6\\u6210\\u6D4B\\u8BD5**: \\u786E\\u4FDD\\u65B0\\u529F\\u80FD\\u4E0E\\u73B0\\u6709\\u7CFB\\u7EDF\\u517C\\u5BB9\n7. **\\u90E8\\u7F72\\u4E0A\\u7EBF**: \\u81EA\\u52A8\\u5316\\u90E8\\u7F72\\u5230\\u751F\\u4EA7\\u73AF\\u5883\n8. **\\u76D1\\u63A7\\u53CD\\u9988**: \\u76D1\\u63A7\\u7CFB\\u7EDF\\u8FD0\\u884C\\u72B6\\u6001\n\n## \\u6700\\u4F73\\u5B9E\\u8DF5\n\n- \\u59CB\\u7EC8\\u4FDD\\u6301\\u4EE3\\u7801\\u5BA1\\u67E5\\u7684\\u4E60\\u60EF\n- \\u4F7F\\u7528 TDD \\u65B9\\u6CD5\\u786E\\u4FDD\\u4EE3\\u7801\\u8D28\\u91CF\n- \\u5B9A\\u671F\\u66F4\\u65B0\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\n- \\u5408\\u7406\\u4F7F\\u7528 MCP \\u670D\\u52A1\\u5668\\u6269\\u5C55\\u529F\\u80FD\n      `,\n        \"environment-config\": `\n# \\u81EA\\u5B9A\\u4E49\\u73AF\\u5883\\u914D\\u7F6E\n\n## CLAUDE.md \\u6587\\u4EF6\\u914D\\u7F6E\n\n\\u521B\\u5EFA\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\uFF0C\\u8BA9 Claude Code \\u66F4\\u597D\\u5730\\u7406\\u89E3\\u4F60\\u7684\\u9879\\u76EE\\uFF1A\n\n\\`\\`\\`markdown\n# \\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\n\n## \\u9879\\u76EE\\u6982\\u8FF0\n\\u8FD9\\u662F\\u4E00\\u4E2A TypeScript + React \\u9879\\u76EE...\n\n## \\u6280\\u672F\\u6808\n- Frontend: React, TypeScript, Tailwind CSS\n- Backend: Node.js, Express\n- Database: PostgreSQL\n- Deployment: Vercel\n\n## \\u4EE3\\u7801\\u89C4\\u8303\n- \\u4F7F\\u7528 ESLint + Prettier\n- \\u9075\\u5FAA\\u51FD\\u6570\\u5F0F\\u7F16\\u7A0B\\u539F\\u5219\n- \\u4F18\\u5148\\u4F7F\\u7528 TypeScript \\u7C7B\\u578B\\u5B89\\u5168\n\\`\\`\\`\n\n## \\u6743\\u9650\\u7BA1\\u7406\\u7B56\\u7565\n\n\\u914D\\u7F6E Claude Code \\u7684\\u64CD\\u4F5C\\u6743\\u9650\\uFF1A\n\n\\`\\`\\`bash\n# \\u5141\\u8BB8\\u6587\\u4EF6\\u64CD\\u4F5C\nclaude --allow-file-operations\n\n# \\u9650\\u5236\\u7F51\\u7EDC\\u8BBF\\u95EE\nclaude --no-network\n\n# \\u81EA\\u5B9A\\u4E49\\u6743\\u9650\\u914D\\u7F6E\nclaude --permissions-config ./permissions.json\n\\`\\`\\`\n\n## GitHub CLI \\u96C6\\u6210\n\n\\u65E0\\u7F1D\\u96C6\\u6210 GitHub \\u5DE5\\u4F5C\\u6D41\\uFF1A\n\n\\`\\`\\`bash\n# \\u5B89\\u88C5 GitHub CLI\nbrew install gh\n\n# \\u8BA4\\u8BC1\ngh auth login\n\n# \\u914D\\u7F6E Claude Code \\u4F7F\\u7528 GitHub CLI\nclaude config set github.cli true\n\\`\\`\\`\n      `\n        // 其他文章的模拟内容...\n      };\n      return mockContent[cardId] || `# ${cardId}\n\n\\u5185\\u5BB9\\u6B63\\u5728\\u5F00\\u53D1\\u4E2D...`;\n    }\n    getTitleFromCardId(cardId) {\n      const titles = {\n        \"workflow-overview\": \"\\u6211\\u73B0\\u5728\\u7684\\u5DE5\\u4F5C\\u6D41\",\n        \"environment-config\": \"\\u81EA\\u5B9A\\u4E49\\u73AF\\u5883\\u914D\\u7F6E\",\n        \"mcp-commands\": \"MCP \\u4E0E\\u5E38\\u7528\\u547D\\u4EE4\",\n        \"core-workflow\": \"\\u6838\\u5FC3\\u5DE5\\u4F5C\\u6D41\\u7A0B\",\n        \"context-management\": \"\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\",\n        \"automation-batch\": \"\\u81EA\\u52A8\\u5316\\u4E0E\\u6279\\u5904\\u7406\",\n        \"concurrent-claude\": \"\\u591A Claude \\u5E76\\u53D1\\u5E72\\u6D3B\"\n      };\n      return titles[cardId] || cardId;\n    }\n  };\n\n  // src/client/bestPractices/handlers/EventHandler.ts\n  var EventHandler = class {\n    constructor(containerId) {\n      __publicField(this, \"containerId\");\n      __publicField(this, \"boundClickHandler\");\n      __publicField(this, \"articleService\");\n      __publicField(this, \"articleRenderer\");\n      this.containerId = containerId;\n      this.boundClickHandler = this.handleCardClick.bind(this);\n      this.articleService = new ArticleService();\n      this.articleRenderer = new ArticleRenderer();\n    }\n    bindEventListeners() {\n      console.log(\"\\u5F00\\u59CB\\u7ED1\\u5B9A\\u4E8B\\u4EF6\\u76D1\\u542C\\u5668\");\n      const container = document.getElementById(this.containerId);\n      if (!container) {\n        console.error(`\\u672A\\u627E\\u5230\\u5BB9\\u5668\\u5143\\u7D20: ${this.containerId}`);\n        return;\n      }\n      console.log(\"\\u627E\\u5230\\u5BB9\\u5668\\u5143\\u7D20:\", container);\n      this.removeExistingListeners(container);\n      this.addEventListeners(container);\n      console.log(\"\\u4E8B\\u4EF6\\u59D4\\u6258\\u7ED1\\u5B9A\\u5B8C\\u6210\");\n    }\n    removeExistingListeners(container) {\n      container.removeEventListener(\"click\", this.boundClickHandler);\n    }\n    addEventListeners(container) {\n      container.addEventListener(\"click\", this.boundClickHandler);\n      container.addEventListener(\"click\", function(e) {\n        console.log(\"\\u5BB9\\u5668\\u6536\\u5230\\u70B9\\u51FB\\u4E8B\\u4EF6:\", {\n          target: e.target,\n          targetClass: e.target.className,\n          targetTag: e.target.tagName\n        });\n      }, true);\n    }\n    handleCardClick(e) {\n      const event = e;\n      const target = event.target;\n      console.log(\"handleCardClick\\u88AB\\u8C03\\u7528:\", target);\n      const button = target.closest(\".overview-card__action-btn\");\n      if (!button) {\n        console.log(\"\\u70B9\\u51FB\\u7684\\u4E0D\\u662F\\u64CD\\u4F5C\\u6309\\u94AE\");\n        return;\n      }\n      console.log(\"\\u627E\\u5230\\u64CD\\u4F5C\\u6309\\u94AE:\", button);\n      const cardId = button.getAttribute(\"data-card-id\");\n      if (!cardId) {\n        console.error(\"\\u6309\\u94AE\\u7F3A\\u5C11 data-card-id \\u5C5E\\u6027\");\n        return;\n      }\n      console.log(\"\\u51C6\\u5907\\u663E\\u793A\\u8BE6\\u7EC6\\u5185\\u5BB9:\", cardId);\n      this.showDetailedContent(cardId);\n    }\n    async showDetailedContent(cardId) {\n      const container = document.getElementById(this.containerId);\n      if (!container) {\n        console.error(`\\u672A\\u627E\\u5230\\u5BB9\\u5668\\u5143\\u7D20: ${this.containerId}`);\n        return;\n      }\n      try {\n        container.innerHTML = this.articleRenderer.renderLoadingState();\n        const article = await this.articleService.getArticle(cardId);\n        const articleHtml = this.articleRenderer.renderArticle(article.title, article.content);\n        container.innerHTML = articleHtml;\n        window.showOverviewCards = () => {\n          const manager = new window.BestPracticesManager();\n          manager.initialize();\n        };\n      } catch (error) {\n        console.error(\"\\u52A0\\u8F7D\\u6587\\u7AE0\\u5931\\u8D25:\", error);\n        const errorHtml = this.articleRenderer.renderErrorState(error.message);\n        container.innerHTML = errorHtml;\n      }\n    }\n  };\n\n  // src/client/bestPractices/handlers/NavigationHandler.ts\n  var NavigationHandler = class {\n    bindEventListeners() {\n      this.bindBreadcrumbNavigation();\n    }\n    bindBreadcrumbNavigation() {\n      document.addEventListener(\"click\", (e) => {\n        const target = e.target;\n        if (target.matches(\".breadcrumb-link\")) {\n          e.preventDefault();\n          const targetId = target.getAttribute(\"data-target\");\n          if (targetId) {\n            this.navigateToSection(targetId);\n          }\n        }\n      });\n    }\n    navigateToSection(sectionId) {\n      const element = document.getElementById(sectionId);\n      if (element) {\n        element.scrollIntoView({ behavior: \"smooth\" });\n      }\n    }\n  };\n\n  // src/client/bestPractices/data/cardsData.ts\n  var bestPracticesCards = [\n    {\n      id: \"workflow-overview\",\n      title: \"\\u6211\\u73B0\\u5728\\u7684\\u5DE5\\u4F5C\\u6D41\",\n      description: \"\\u57FA\\u4E8E Claude Code \\u7684\\u5B8C\\u6574\\u5F00\\u53D1\\u5DE5\\u4F5C\\u6D41\\uFF0C\\u4ECE\\u9700\\u6C42\\u5230\\u90E8\\u7F72\\u7684\\u5168\\u6D41\\u7A0B\\u6700\\u4F73\\u5B9E\\u8DF5\",\n      category: \"workflow\",\n      difficulty: \"intermediate\",\n      readTime: \"10 \\u5206\\u949F\",\n      tags: [\"workflow\", \"github\", \"tdd\", \"review\"],\n      overview: \"\\u5C55\\u793A\\u5982\\u4F55\\u4F7F\\u7528 Claude Code \\u6784\\u5EFA\\u9AD8\\u6548\\u7684\\u5F00\\u53D1\\u5DE5\\u4F5C\\u6D41\\uFF0C\\u5305\\u542B\\u65F6\\u5E8F\\u56FE\\u548C\\u8BE6\\u7EC6\\u7684\\u6D41\\u7A0B\\u6B65\\u9AA4\\u3002\",\n      sections: [\n        { title: \"\\u5DE5\\u4F5C\\u6D41\\u65F6\\u5E8F\\u56FE\", content: \"\\u5B8C\\u6574\\u7684\\u5F00\\u53D1\\u6D41\\u7A0B\\u53EF\\u89C6\\u5316\\u5C55\\u793A\", type: \"mermaid\" },\n        { title: \"\\u6838\\u5FC3\\u6B65\\u9AA4\", content: \"\\u4ECE\\u521B\\u5EFA\\u5DE5\\u4F5C\\u533A\\u5230\\u4EE3\\u7801\\u5BA1\\u67E5\\u76848\\u4E2A\\u5173\\u952E\\u6B65\\u9AA4\", type: \"list\" }\n      ],\n      tips: [{ type: \"success\", title: \"\\u6548\\u7387\\u63D0\\u5347\", content: \"\\u6574\\u4E2A\\u8FC7\\u7A0B\\u5F00\\u53D1\\u8005\\u53EA\\u9700\\u8981\\u63D0\\u51FA\\u9700\\u6C42\\u548CReview\\uFF0C\\u5927\\u5927\\u63D0\\u5347\\u5F00\\u53D1\\u6548\\u7387\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"environment-config\",\n      title: \"\\u81EA\\u5B9A\\u4E49\\u73AF\\u5883\\u914D\\u7F6E\",\n      description: \"\\u914D\\u7F6E CLAUDE.md \\u6587\\u4EF6\\u3001\\u6743\\u9650\\u7BA1\\u7406\\u548C GitHub CLI \\u96C6\\u6210\",\n      category: \"configuration\",\n      difficulty: \"beginner\",\n      readTime: \"8 \\u5206\\u949F\",\n      tags: [\"claude-md\", \"configuration\", \"github\", \"permissions\"],\n      overview: \"\\u5B66\\u4E60\\u5982\\u4F55\\u6B63\\u786E\\u914D\\u7F6E Claude Code \\u7684\\u5F00\\u53D1\\u73AF\\u5883\\uFF0C\\u5305\\u62EC\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\u3001\\u6743\\u9650\\u7B56\\u7565\\u548C\\u5DE5\\u5177\\u96C6\\u6210\\u3002\",\n      sections: [\n        { title: \"CLAUDE.md \\u6587\\u4EF6\\u914D\\u7F6E\", content: \"\\u521B\\u5EFA\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\uFF0C\\u81EA\\u52A8\\u6CE8\\u5165\\u4E0A\\u4E0B\\u6587\", type: \"code\" },\n        { title: \"\\u6743\\u9650\\u7BA1\\u7406\\u7B56\\u7565\", content: \"\\u5B89\\u5168\\u5730\\u7BA1\\u7406 Claude Code \\u7684\\u64CD\\u4F5C\\u6743\\u9650\", type: \"text\" },\n        { title: \"GitHub CLI \\u96C6\\u6210\", content: \"\\u65E0\\u7F1D\\u96C6\\u6210 GitHub \\u5DE5\\u4F5C\\u6D41\", type: \"code\" }\n      ],\n      tips: [{ type: \"info\", title: \"\\u6700\\u4F73\\u5B9E\\u8DF5\", content: \"CLAUDE.md \\u6587\\u4EF6\\u5E94\\u8BE5\\u653E\\u5728\\u9879\\u76EE\\u6839\\u76EE\\u5F55\\uFF0C\\u4F5C\\u4E3A\\u9879\\u76EE\\u7684\\u8BB0\\u5FC6\\u5E93\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"mcp-commands\",\n      title: \"MCP \\u4E0E\\u5E38\\u7528\\u547D\\u4EE4\",\n      description: \"MCP \\u670D\\u52A1\\u5668\\u96C6\\u6210\\u3001\\u5E38\\u7528\\u547D\\u4EE4\\u53C2\\u6570\\u548C\\u81EA\\u5B9A\\u4E49 Slash \\u547D\\u4EE4\",\n      category: \"mcp-commands\",\n      difficulty: \"intermediate\",\n      readTime: \"12 \\u5206\\u949F\",\n      tags: [\"mcp\", \"commands\", \"integration\", \"automation\"],\n      overview: \"\\u638C\\u63E1 MCP (Model Context Protocol) \\u670D\\u52A1\\u5668\\u7684\\u96C6\\u6210\\u548C\\u7BA1\\u7406\\uFF0C\\u4EE5\\u53CA\\u5982\\u4F55\\u521B\\u5EFA\\u548C\\u4F7F\\u7528\\u81EA\\u5B9A\\u4E49\\u547D\\u4EE4\\u3002\",\n      sections: [\n        { title: \"MCP \\u670D\\u52A1\\u5668\\u96C6\\u6210\", content: \"\\u914D\\u7F6E\\u548C\\u4F7F\\u7528 MCP \\u670D\\u52A1\\u5668\\u6269\\u5C55 Claude Code \\u529F\\u80FD\", type: \"code\" },\n        { title: \"\\u5E38\\u7528\\u547D\\u4EE4\\u53C2\\u6570\", content: \"\\u638C\\u63E1 Claude Code \\u7684\\u6838\\u5FC3\\u547D\\u4EE4\\u548C\\u53C2\\u6570\", type: \"list\" },\n        { title: \"\\u81EA\\u5B9A\\u4E49 Slash \\u547D\\u4EE4\", content: \"\\u521B\\u5EFA\\u9879\\u76EE\\u7279\\u5B9A\\u7684\\u5FEB\\u6377\\u547D\\u4EE4\", type: \"code\" }\n      ],\n      tips: [{ type: \"tip\", title: \"\\u6269\\u5C55\\u6027\", content: \"MCP \\u670D\\u52A1\\u5668\\u8BA9 Claude Code \\u5177\\u5907\\u65E0\\u9650\\u6269\\u5C55\\u7684\\u53EF\\u80FD\\u6027\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"core-workflow\",\n      title: \"\\u6838\\u5FC3\\u5DE5\\u4F5C\\u6D41\\u7A0B\",\n      description: \"\\u4EE3\\u7801\\u751F\\u6210\\u3001\\u8C03\\u8BD5\\u3001\\u91CD\\u6784\\u548C\\u6D4B\\u8BD5\\u7684\\u6838\\u5FC3\\u5DE5\\u4F5C\\u6D41\\u7A0B\",\n      category: \"workflow\",\n      difficulty: \"intermediate\",\n      readTime: \"15 \\u5206\\u949F\",\n      tags: [\"coding\", \"debugging\", \"refactoring\", \"testing\"],\n      overview: \"\\u6DF1\\u5165\\u4E86\\u89E3 Claude Code \\u5728\\u65E5\\u5E38\\u5F00\\u53D1\\u4E2D\\u7684\\u6838\\u5FC3\\u5DE5\\u4F5C\\u6D41\\u7A0B\\uFF0C\\u4ECE\\u4EE3\\u7801\\u751F\\u6210\\u5230\\u6D4B\\u8BD5\\u7684\\u5B8C\\u6574\\u94FE\\u8DEF\\u3002\",\n      sections: [\n        { title: \"\\u4EE3\\u7801\\u751F\\u6210\\u6700\\u4F73\\u5B9E\\u8DF5\", content: \"\\u5982\\u4F55\\u8BA9 Claude Code \\u751F\\u6210\\u9AD8\\u8D28\\u91CF\\u4EE3\\u7801\", type: \"text\" },\n        { title: \"\\u8C03\\u8BD5\\u548C\\u95EE\\u9898\\u89E3\\u51B3\", content: \"\\u4F7F\\u7528 Claude Code \\u8FDB\\u884C\\u9AD8\\u6548\\u8C03\\u8BD5\", type: \"code\" },\n        { title: \"\\u91CD\\u6784\\u548C\\u4F18\\u5316\", content: \"\\u4EE3\\u7801\\u91CD\\u6784\\u7684\\u7B56\\u7565\\u548C\\u6280\\u5DE7\", type: \"text\" },\n        { title: \"\\u6D4B\\u8BD5\\u9A71\\u52A8\\u5F00\\u53D1\", content: \"\\u7ED3\\u5408 TDD \\u7684\\u5F00\\u53D1\\u6D41\\u7A0B\", type: \"code\" }\n      ],\n      tips: [{ type: \"warning\", title: \"\\u6CE8\\u610F\\u4E8B\\u9879\", content: \"\\u59CB\\u7EC8\\u4FDD\\u6301\\u4EE3\\u7801\\u5BA1\\u67E5\\u7684\\u4E60\\u60EF\\uFF0CAI \\u751F\\u6210\\u7684\\u4EE3\\u7801\\u4E5F\\u9700\\u8981\\u4EBA\\u5DE5\\u9A8C\\u8BC1\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"context-management\",\n      title: \"\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\",\n      description: \"\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\u3001\\u4E0A\\u4E0B\\u6587\\u7A97\\u53E3\\u4F18\\u5316\\u548C\\u957F\\u671F\\u8BB0\\u5FC6\\u7BA1\\u7406\",\n      category: \"context\",\n      difficulty: \"advanced\",\n      readTime: \"18 \\u5206\\u949F\",\n      tags: [\"context\", \"memory\", \"optimization\", \"management\"],\n      overview: \"\\u638C\\u63E1 Claude Code \\u7684\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\\u6280\\u5DE7\\uFF0C\\u5305\\u62EC\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\u7684\\u4F7F\\u7528\\u548C\\u957F\\u671F\\u8BB0\\u5FC6\\u7684\\u7EF4\\u62A4\\u3002\",\n      sections: [\n        { title: \"\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\u8BBE\\u8BA1\", content: \"\\u5982\\u4F55\\u8BBE\\u8BA1\\u6709\\u6548\\u7684\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\", type: \"text\" },\n        { title: \"\\u4E0A\\u4E0B\\u6587\\u7A97\\u53E3\\u4F18\\u5316\", content: \"\\u6700\\u5927\\u5316\\u5229\\u7528\\u6709\\u9650\\u7684\\u4E0A\\u4E0B\\u6587\\u7A97\\u53E3\", type: \"list\" },\n        { title: \"\\u957F\\u671F\\u8BB0\\u5FC6\\u7BA1\\u7406\", content: \"\\u7EF4\\u62A4\\u9879\\u76EE\\u7684\\u957F\\u671F\\u8BB0\\u5FC6\\u548C\\u77E5\\u8BC6\\u5E93\", type: \"text\" }\n      ],\n      tips: [{ type: \"success\", title: \"\\u9AD8\\u7EA7\\u6280\\u5DE7\", content: \"\\u5408\\u7406\\u7684\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\\u53EF\\u4EE5\\u8BA9 Claude Code \\u7684\\u8868\\u73B0\\u63D0\\u5347 50% \\u4EE5\\u4E0A\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"automation-batch\",\n      title: \"\\u81EA\\u52A8\\u5316\\u4E0E\\u6279\\u5904\\u7406\",\n      description: \"\\u65E0\\u5934\\u6A21\\u5F0F\\u3001\\u81EA\\u52A8\\u5316\\u811A\\u672C\\u3001Pre-Commit Hooks \\u548C Claude Code Hooks\",\n      category: \"automation\",\n      difficulty: \"advanced\",\n      readTime: \"20 \\u5206\\u949F\",\n      tags: [\"automation\", \"batch\", \"hooks\", \"ci-cd\"],\n      overview: \"\\u5B66\\u4E60\\u5982\\u4F55\\u5C06 Claude Code \\u96C6\\u6210\\u5230\\u81EA\\u52A8\\u5316\\u5DE5\\u4F5C\\u6D41\\u4E2D\\uFF0C\\u5305\\u62EC CI/CD \\u6D41\\u7A0B\\u548C\\u6279\\u5904\\u7406\\u4EFB\\u52A1\\u3002\",\n      sections: [\n        { title: \"\\u65E0\\u5934\\u6A21\\u5F0F\\u4F7F\\u7528\", content: \"\\u5728\\u670D\\u52A1\\u5668\\u73AF\\u5883\\u4E2D\\u4F7F\\u7528 Claude Code\", type: \"code\" },\n        { title: \"\\u81EA\\u52A8\\u5316\\u811A\\u672C\\u7F16\\u5199\", content: \"\\u7F16\\u5199\\u9AD8\\u6548\\u7684\\u81EA\\u52A8\\u5316\\u811A\\u672C\", type: \"code\" },\n        { title: \"Git Hooks \\u96C6\\u6210\", content: \"\\u5728 Git \\u5DE5\\u4F5C\\u6D41\\u4E2D\\u96C6\\u6210 Claude Code\", type: \"code\" },\n        { title: \"CI/CD \\u6D41\\u7A0B\\u96C6\\u6210\", content: \"\\u5728\\u6301\\u7EED\\u96C6\\u6210\\u4E2D\\u4F7F\\u7528 Claude Code\", type: \"text\" }\n      ],\n      tips: [{ type: \"warning\", title: \"\\u5B89\\u5168\\u63D0\\u9192\", content: \"\\u5728\\u81EA\\u52A8\\u5316\\u73AF\\u5883\\u4E2D\\u4F7F\\u7528\\u65F6\\uFF0C\\u6CE8\\u610F API \\u5BC6\\u94A5\\u7684\\u5B89\\u5168\\u7BA1\\u7406\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"concurrent-claude\",\n      title: \"\\u591A Claude \\u5E76\\u53D1\\u5E72\\u6D3B\",\n      description: \"\\u591A\\u5B9E\\u4F8B\\u7BA1\\u7406\\u3001\\u4EFB\\u52A1\\u5206\\u914D\\u548C\\u5E76\\u53D1\\u4F18\\u5316\\u7B56\\u7565\",\n      category: \"concurrency\",\n      difficulty: \"expert\",\n      readTime: \"25 \\u5206\\u949F\",\n      tags: [\"concurrency\", \"multi-instance\", \"optimization\", \"scaling\"],\n      overview: \"\\u9AD8\\u7EA7\\u7528\\u6CD5\\uFF1A\\u5982\\u4F55\\u540C\\u65F6\\u4F7F\\u7528\\u591A\\u4E2A Claude Code \\u5B9E\\u4F8B\\u6765\\u5904\\u7406\\u590D\\u6742\\u9879\\u76EE\\u548C\\u5927\\u89C4\\u6A21\\u4EFB\\u52A1\\u3002\",\n      sections: [\n        { title: \"\\u591A\\u5B9E\\u4F8B\\u67B6\\u6784\\u8BBE\\u8BA1\", content: \"\\u8BBE\\u8BA1\\u591A Claude \\u534F\\u4F5C\\u7684\\u67B6\\u6784\", type: \"text\" },\n        { title: \"\\u4EFB\\u52A1\\u5206\\u914D\\u7B56\\u7565\", content: \"\\u5982\\u4F55\\u5408\\u7406\\u5206\\u914D\\u4EFB\\u52A1\\u7ED9\\u4E0D\\u540C\\u5B9E\\u4F8B\", type: \"list\" },\n        { title: \"\\u5E76\\u53D1\\u63A7\\u5236\\u548C\\u540C\\u6B65\", content: \"\\u907F\\u514D\\u51B2\\u7A81\\u548C\\u4FDD\\u6301\\u4E00\\u81F4\\u6027\", type: \"code\" },\n        { title: \"\\u6027\\u80FD\\u76D1\\u63A7\\u548C\\u4F18\\u5316\", content: \"\\u76D1\\u63A7\\u548C\\u4F18\\u5316\\u591A\\u5B9E\\u4F8B\\u6027\\u80FD\", type: \"text\" }\n      ],\n      tips: [{ type: \"expert\", title: \"\\u4E13\\u5BB6\\u7EA7\\u6280\\u5DE7\", content: \"\\u5408\\u7406\\u7684\\u591A\\u5B9E\\u4F8B\\u4F7F\\u7528\\u53EF\\u4EE5\\u5C06\\u5F00\\u53D1\\u6548\\u7387\\u63D0\\u5347 3-5 \\u500D\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    }\n  ];\n\n  // src/client/bestPractices/core/BestPracticesManager.ts\n  var BestPracticesManager = class {\n    constructor() {\n      __publicField(this, \"cardRenderer\");\n      __publicField(this, \"articleRenderer\");\n      __publicField(this, \"eventHandler\");\n      __publicField(this, \"navigationHandler\");\n      __publicField(this, \"articleService\");\n      __publicField(this, \"containerId\", \"best-practices-overview-cards\");\n      this.cardRenderer = new CardRenderer();\n      this.articleRenderer = new ArticleRenderer();\n      this.eventHandler = new EventHandler(this.containerId);\n      this.navigationHandler = new NavigationHandler();\n      this.articleService = new ArticleService();\n    }\n    /**\n     * 初始化最佳实践模块\n     */\n    initialize() {\n      this.renderBestPracticesOverviewCards();\n      this.bindEventListeners();\n    }\n    /**\n     * 渲染最佳实践概览卡片\n     */\n    renderBestPracticesOverviewCards() {\n      const container = document.getElementById(this.containerId);\n      if (!container) {\n        console.warn(`Container with id \"${this.containerId}\" not found`);\n        return;\n      }\n      const cardsHtml = this.cardRenderer.renderCards(bestPracticesCards);\n      container.innerHTML = cardsHtml;\n    }\n    /**\n     * 绑定事件监听器\n     */\n    bindEventListeners() {\n      this.eventHandler.bindEventListeners();\n      this.navigationHandler.bindEventListeners();\n    }\n  };\n\n  // src/client/bestPractices/utils/initialization.ts\n  function initializeApp(callback) {\n    if (document.readyState === \"loading\") {\n      document.addEventListener(\"DOMContentLoaded\", callback);\n    } else {\n      callback();\n    }\n  }\n\n  // src/client/bestPractices/index.ts\n  function initializeBestPractices() {\n    initializeApp(() => {\n      const manager = new BestPracticesManager();\n      manager.initialize();\n    });\n  }\n  window.initializeBestPractices = initializeBestPractices;\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", initializeBestPractices);\n  } else {\n    initializeBestPractices();\n  }\n})();\n";
