// 自动生成的客户端脚本包
// 构建时间: 2025-07-26T15:26:19.609Z
// 请勿手动修改此文件

export const bestPracticesClientScript = "var BestPracticesApp = (() => {\n  var __create = Object.create;\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __getProtoOf = Object.getPrototypeOf;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\n  var __commonJS = (cb, mod) => function __require() {\n    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      for (let key of __getOwnPropNames(from))\n        if (!__hasOwnProp.call(to, key) && key !== except)\n          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n    }\n    return to;\n  };\n  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n    // If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n    mod\n  ));\n  var __publicField = (obj, key, value) => {\n    __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n    return value;\n  };\n\n  // src/client/bestPractices/content/workflow-overview.md\n  var require_workflow_overview = __commonJS({\n    \"src/client/bestPractices/content/workflow-overview.md\"(exports, module) {\n      module.exports = '# \\u6211\\u73B0\\u5728\\u7684\\u5DE5\\u4F5C\\u6D41\\n\\n\\u57FA\\u4E8E Claude Code\\uFF0C\\u6211\\u7EFC\\u5408\\u4E86\\u6700\\u4F73\\u5B9E\\u8DF5\\u5F62\\u6210\\u4E86\\u81EA\\u5DF1\\u7684\\u5DE5\\u4F5C\\u6D41\\u5982\\u4E0B\\uFF0C\\u6574\\u4E2A\\u8FC7\\u7A0B\\u5176\\u5B9E\\u6211\\u53EA\\u9700\\u8981\\u63D0\\u51FA\\u9700\\u6C42\\u4EE5\\u53CAReview\\u3002\\n\\n## \\u65F6\\u5E8F\\u56FE\\n\\n```mermaid\\nsequenceDiagram\\n    autonumber\\n    actor \\u5F00\\u53D1\\u8005\\n    participant \\u5F00\\u53D1\\u73AF\\u5883 as \"IDE/\\u5DE5\\u4F5C\\u533A\"\\n    participant Claude\\n    participant GitHub\\n    participant AI\\u4EE3\\u7801\\u5BA1\\u67E5\\u5458 as \"\\u901A\\u4E49\\u7075\\u7801 & Gemini\"\\n\\n    \\u5F00\\u53D1\\u8005->>\\u5F00\\u53D1\\u73AF\\u5883: (\\u82E5\\u9700\\u5E76\\u53D1)\\u521B\\u5EFA\\u591A\\u5DE5\\u4F5C\\u533A\\n    \\u5F00\\u53D1\\u8005->>Claude: \\u5728\\u5B50\\u5DE5\\u4F5C\\u533A\\u7684\\u5206\\u652F\\u4E2D\\u542F\\u52A8\\u65E0\\u9650\\u5236\\u6A21\\u5F0F\\n    \\u5F00\\u53D1\\u8005->>GitHub: \\u521B\\u5EFA\\u6216\\u62C9\\u53D6 Issue\\n    \\u5F00\\u53D1\\u8005->>Claude: \\u6839\\u636E Issue \\u5206\\u6D3E\\u7F16\\u7801\\u4EFB\\u52A1\\n    alt \\u590D\\u6742\\u9700\\u6C42\\n        Claude->>Claude: \\u4F7F\\u7528\\u63A2\\u7D22\\u6A21\\u5F0F\\u7406\\u6E05\\u9700\\u6C42, \\u8F93\\u51FATDD\\u6280\\u672F\\u65B9\\u6848\\n        \\u5F00\\u53D1\\u8005->>Claude: \\u7B80\\u5355 Review \\u6280\\u672F\\u65B9\\u6848\\n    end\\n    Claude->>\\u5F00\\u53D1\\u73AF\\u5883: \\u6267\\u884C\\u65B9\\u6848\\u5E76\\u7F16\\u5199\\u4EE3\\u7801\\n    \\u5F00\\u53D1\\u8005->>GitHub: \\u63D0\\u4EA4 Pull Request (PR)\\n    \\u5F00\\u53D1\\u8005->>AI\\u4EE3\\u7801\\u5BA1\\u67E5\\u5458: \\u5BF9 PR \\u7684\\u4EE3\\u7801\\u8FDB\\u884C Review\\n    AI\\u4EE3\\u7801\\u5BA1\\u67E5\\u5458-->>GitHub: \\u5728 PR \\u4E2D\\u63D0\\u4EA4 Review \\u610F\\u89C1\\n    \\u5F00\\u53D1\\u8005->>Claude: \\u6307\\u793A\\u5904\\u7406 PR \\u7684 Review \\u610F\\u89C1\\n    Claude->>GitHub: \\u8BFB\\u53D6 PR \\u4E2D\\u7684 Review \\u610F\\u89C1\\n    Claude-->>\\u5F00\\u53D1\\u8005: \\u57FA\\u4E8E\\u610F\\u89C1\\u54CD\\u5E94\\u3001\\u70B9\\u8BC4\\u5E76\\u4FEE\\u590D\\u4EE3\\u7801\\n    note right of \\u5F00\\u53D1\\u8005: \\u5F00\\u53D1\\u8005\\u5C06\\u4FEE\\u590D\\u540E\\u7684\\u4EE3\\u7801<br/>\\u518D\\u6B21\\u63D0\\u4EA4\\u81F3 GitHub\\n    \\u5F00\\u53D1\\u8005->>Claude: \\u53CD\\u601D\\u5E76\\u5C06\\u91CD\\u590D\\u6027\\u5DE5\\u4F5C\\u62BD\\u8C61\\u4E3A\\u53EF\\u7EC4\\u5408\\u7684 Slash Commands\\n```\\n\\n## \\u6D41\\u7A0B\\u7EC6\\u8282\\n\\n1. **\\u591A\\u5DE5\\u4F5C\\u533A\\u7BA1\\u7406**\\uFF1A\\u6709\\u9700\\u8981\\u5E76\\u53D1\\u5219\\u521B\\u5EFA\\u591A\\u5DE5\\u4F5C\\u533A\\n2. **\\u65E0\\u9650\\u5236\\u6A21\\u5F0F**\\uFF1A\\u5728\\u5B50\\u5DE5\\u4F5C\\u533A\\u4E2D\\u6BCF\\u4E2A\\u5206\\u652F\\u542F\\u52A8 Claude \\u65E0\\u9650\\u5236\\u6A21\\u5F0F\\uFF0C\\u901A\\u8FC7 `Shift Tab` \\u9700\\u8981\\u65F6\\u5207\\u6362\\u6A21\\u5F0F\\n3. **Issue \\u7BA1\\u7406**\\uFF1A\\u5BF9\\u4E8E\\u65B0\\u9700\\u6C42\\u521B\\u5EFA issue\\uFF0C\\u6216\\u8005\\u62C9\\u53D6\\u5F53\\u524D issue\\u3002\\u591A\\u4E2A issue \\u53EF\\u4EE5\\u4F7F\\u7528 GitHub Projects \\u7BA1\\u7406\\n4. **\\u4EFB\\u52A1\\u5206\\u6D3E**\\uFF1A\\u6309\\u7167 issue \\u7ED9 Claude Code \\u6D3E\\u6D3B\\u3002\\u5BF9\\u4E8E\\u590D\\u6742\\u9700\\u6C42\\uFF0C\\u4F7F\\u7528\\u63A2\\u7D22\\u6A21\\u5F0F\\u7406\\u6E05\\u9700\\u6C42\\uFF0C\\u5C3D\\u91CF\\u4EA7\\u51FA\\u57FA\\u4E8E TDD \\u7684\\u6280\\u672F\\u65B9\\u6848\\n5. **\\u4EE3\\u7801\\u5BA1\\u67E5**\\uFF1A\\u63D0\\u4EA4 PR \\u540E\\uFF0C\\u4F7F\\u7528\\u901A\\u4E49\\u7075\\u7801\\u548C Gemini Code Assistant Review PR \\u4EE3\\u7801\\n6. **\\u54CD\\u5E94\\u53CD\\u9988**\\uFF1AClaude \\u54CD\\u5E94 Code Review \\u610F\\u89C1\\uFF0C\\u70B9\\u8BC4\\u540E\\u4FEE\\u590D\\n7. **\\u62BD\\u8C61\\u547D\\u4EE4**\\uFF1A\\u5BF9\\u6BCF\\u4E00\\u4E2A\\u91CD\\u590D\\u7684\\u5DE5\\u4F5C\\u90FD\\u53EF\\u4EE5\\u62BD\\u8C61\\u6210 commands\\uFF0C\\u6CE8\\u610F commands \\u4E0D\\u8981\\u592A\\u5927\\uFF0C\\u65B9\\u4FBF\\u7EC4\\u5408\\n\\n## \\u6838\\u5FC3\\u4F18\\u52BF\\n\\n- **\\u6548\\u7387\\u63D0\\u5347**\\uFF1A\\u5F00\\u53D1\\u8005\\u53EA\\u9700\\u8981\\u63D0\\u51FA\\u9700\\u6C42\\u548C Review\\uFF0C\\u5927\\u5927\\u63D0\\u5347\\u5F00\\u53D1\\u6548\\u7387\\n- **\\u8D28\\u91CF\\u4FDD\\u8BC1**\\uFF1A\\u591A\\u91CD AI \\u4EE3\\u7801\\u5BA1\\u67E5\\u786E\\u4FDD\\u4EE3\\u7801\\u8D28\\u91CF\\n- **\\u6D41\\u7A0B\\u6807\\u51C6\\u5316**\\uFF1A\\u6807\\u51C6\\u5316\\u7684\\u5DE5\\u4F5C\\u6D41\\u7A0B\\u51CF\\u5C11\\u4EBA\\u4E3A\\u9519\\u8BEF\\n- **\\u53EF\\u590D\\u7528\\u6027**\\uFF1A\\u91CD\\u590D\\u5DE5\\u4F5C\\u62BD\\u8C61\\u4E3A\\u547D\\u4EE4\\uFF0C\\u63D0\\u9AD8\\u590D\\u7528\\u6027\\n\\n## \\u6700\\u4F73\\u5B9E\\u8DF5\\n\\n- \\u59CB\\u7EC8\\u4FDD\\u6301\\u4EE3\\u7801\\u5BA1\\u67E5\\u7684\\u4E60\\u60EF\\n- \\u4F7F\\u7528 TDD \\u65B9\\u6CD5\\u786E\\u4FDD\\u4EE3\\u7801\\u8D28\\u91CF\\n- \\u5B9A\\u671F\\u66F4\\u65B0\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\n- \\u5408\\u7406\\u4F7F\\u7528 MCP \\u670D\\u52A1\\u5668\\u6269\\u5C55\\u529F\\u80FD\\n';\n    }\n  });\n\n  // src/client/bestPractices/content/environment-config.md\n  var require_environment_config = __commonJS({\n    \"src/client/bestPractices/content/environment-config.md\"(exports, module) {\n      module.exports = \"# \\u81EA\\u5B9A\\u4E49\\u73AF\\u5883\\u914D\\u7F6E\\u6DF1\\u5EA6\\u6307\\u5357\\n\\n\\u914D\\u7F6E CLAUDE.md \\u6587\\u4EF6\\u3001\\u6743\\u9650\\u7BA1\\u7406\\u548C GitHub CLI \\u96C6\\u6210\\uFF0C\\u8BA9 Claude Code \\u66F4\\u597D\\u5730\\u7406\\u89E3\\u4F60\\u7684\\u9879\\u76EE\\u3002\\n\\n## 1. \\u521B\\u5EFA CLAUDE.md \\u6587\\u4EF6\\n\\n**\\u4F5C\\u7528**\\uFF1A\\u4F5C\\u4E3A\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\uFF0C\\u81EA\\u52A8\\u6CE8\\u5165\\u4E0A\\u4E0B\\u6587\\uFF0C\\u51CF\\u5C11\\u91CD\\u590D\\u8BF4\\u660E\\n\\n**\\u63A8\\u8350\\u4F4D\\u7F6E**\\uFF1A\\n- \\u9879\\u76EE\\u6839\\u76EE\\u5F55\\uFF08`CLAUDE.md`\\uFF09\\n- \\u5B50\\u76EE\\u5F55\\uFF08\\u6309\\u9700\\u52A0\\u8F7D\\uFF09\\n- \\u5168\\u5C40\\u914D\\u7F6E\\uFF08`~/.claude/CLAUDE.md`\\uFF09\\n\\n**\\u5185\\u5BB9\\u7ED3\\u6784**\\uFF1A\\n\\n```markdown\\n# \\u9879\\u76EE\\u57FA\\u7840\\u4FE1\\u606F\\n\\n- \\u6280\\u672F\\u6808\\uFF1AReact + TypeScript + Node.js\\n- \\u8FD0\\u884C\\u73AF\\u5883\\uFF1ANode 18+, Python 3.9+\\n\\n# \\u5E38\\u7528\\u547D\\u4EE4\\n\\n- `npm run dev`: \\u542F\\u52A8\\u5F00\\u53D1\\u670D\\u52A1\\u5668\\n- `npm run test`: \\u8FD0\\u884C\\u6D4B\\u8BD5\\n- `npm run build`: \\u6784\\u5EFA\\u9879\\u76EE\\n\\n# \\u4EE3\\u7801\\u89C4\\u8303\\n\\n- \\u4F7F\\u7528 ES modules\\n- \\u51FD\\u6570\\u4F7F\\u7528 camelCase \\u547D\\u540D\\n- \\u7EC4\\u4EF6\\u4F7F\\u7528 PascalCase \\u547D\\u540D\\n\\n# \\u6D4B\\u8BD5\\u7B56\\u7565\\n\\n- \\u5355\\u5143\\u6D4B\\u8BD5\\u4F7F\\u7528 Jest\\n- E2E \\u6D4B\\u8BD5\\u4F7F\\u7528 Playwright\\n- \\u6D4B\\u8BD5\\u6587\\u4EF6\\u547D\\u540D\\uFF1A*.test.ts\\n\\n# \\u6CE8\\u610F\\u4E8B\\u9879\\n\\n- \\u63D0\\u4EA4\\u524D\\u5FC5\\u987B\\u8FD0\\u884C lint \\u548C\\u6D4B\\u8BD5\\n- \\u65B0\\u529F\\u80FD\\u9700\\u8981\\u66F4\\u65B0\\u6587\\u6863\\n```\\n\\n\\u8FD9\\u4E2A\\u548C cursor rules \\u7C7B\\u4F3C\\uFF0C\\u5F88\\u591A AI Coding \\u7C7B\\u4EA7\\u54C1\\u90FD\\u6709\\u7ED9 LLM \\u8865\\u5145 context \\u7684\\u6587\\u4EF6\\u9700\\u8981\\u914D\\u7F6E\\u3002\\n\\n## 2. \\u6743\\u9650\\u7BA1\\u7406\\u7B56\\u7565\\n\\n**\\u5B89\\u5168\\u914D\\u7F6E**\\uFF1A\\n\\n```bash\\n# \\u67E5\\u770B\\u5F53\\u524D\\u6743\\u9650\\n/permissions\\n\\n# \\u5141\\u8BB8\\u7279\\u5B9A\\u64CD\\u4F5C\\n/permissions add Edit\\n/permissions add Bash(git commit:*)\\n\\n# \\u8DF3\\u8FC7\\u6240\\u6709\\u6743\\u9650\\u68C0\\u67E5\\uFF08\\u8C28\\u614E\\u4F7F\\u7528\\uFF09\\u53EF\\u4EE5\\u4F7F\\u7528 Shift+ Tab \\u5207\\u6362\\u6A21\\u5F0F\\nclaude --dangerously-skip-permissions\\n```\\n\\n`claude --dangerously-skip-permissions` \\u4E5F\\u88AB\\u79F0\\u4E3A YOLO\\uFF08You Only Live Once\\uFF09\\u6A21\\u5F0F :)\\n\\n## 3. GitHub CLI \\u96C6\\u6210\\n\\n**\\u5B89\\u88C5**\\uFF1A\\n\\n```bash\\nbrew install gh  # macOS\\n```\\n\\n**\\u5E38\\u7528\\u64CD\\u4F5C**\\uFF1A\\n\\n- \\u521B\\u5EFA PR\\uFF1A`gh pr create`\\n- \\u67E5\\u770B Issue\\uFF1A`gh issue view`\\n- \\u6DFB\\u52A0\\u6807\\u7B7E\\uFF1A`gh issue edit --add-label`\\n\\n**\\u914D\\u7F6E Claude Code \\u4F7F\\u7528 GitHub CLI**\\uFF1A\\n\\n```bash\\n# \\u8BA4\\u8BC1\\ngh auth login\\n\\n# \\u914D\\u7F6E Claude Code \\u4F7F\\u7528 GitHub CLI\\nclaude config set github.cli true\\n```\\n\\n## 4. \\u9879\\u76EE\\u7279\\u5B9A\\u914D\\u7F6E\\n\\n**\\u76EE\\u5F55\\u7ED3\\u6784\\u914D\\u7F6E**\\uFF1A\\n\\n```markdown\\n# \\u9879\\u76EE\\u7ED3\\u6784\\u8BF4\\u660E\\n\\nsrc/\\n\\u251C\\u2500\\u2500 components/     # React \\u7EC4\\u4EF6\\n\\u251C\\u2500\\u2500 services/       # \\u4E1A\\u52A1\\u903B\\u8F91\\n\\u251C\\u2500\\u2500 utils/          # \\u5DE5\\u5177\\u51FD\\u6570\\n\\u251C\\u2500\\u2500 types/          # TypeScript \\u7C7B\\u578B\\u5B9A\\u4E49\\n\\u2514\\u2500\\u2500 tests/          # \\u6D4B\\u8BD5\\u6587\\u4EF6\\n\\n# \\u91CD\\u8981\\u6587\\u4EF6\\u8BF4\\u660E\\n\\n- `package.json`: \\u9879\\u76EE\\u4F9D\\u8D56\\u548C\\u811A\\u672C\\n- `tsconfig.json`: TypeScript \\u914D\\u7F6E\\n- `.eslintrc.js`: ESLint \\u89C4\\u5219\\n- `jest.config.js`: \\u6D4B\\u8BD5\\u914D\\u7F6E\\n```\\n\\n## 5. \\u6700\\u4F73\\u5B9E\\u8DF5\\n\\n- **\\u5B9A\\u671F\\u66F4\\u65B0**\\uFF1A\\u4FDD\\u6301 CLAUDE.md \\u6587\\u4EF6\\u7684\\u65F6\\u6548\\u6027\\n- **\\u5206\\u5C42\\u914D\\u7F6E**\\uFF1A\\u5168\\u5C40\\u914D\\u7F6E + \\u9879\\u76EE\\u914D\\u7F6E + \\u76EE\\u5F55\\u914D\\u7F6E\\n- **\\u6743\\u9650\\u6700\\u5C0F\\u5316**\\uFF1A\\u53EA\\u7ED9\\u4E88\\u5FC5\\u8981\\u7684\\u6743\\u9650\\n- **\\u7248\\u672C\\u63A7\\u5236**\\uFF1A\\u5C06\\u914D\\u7F6E\\u6587\\u4EF6\\u7EB3\\u5165\\u7248\\u672C\\u63A7\\u5236\\n\";\n    }\n  });\n\n  // src/client/bestPractices/content/mcp-commands.md\n  var require_mcp_commands = __commonJS({\n    \"src/client/bestPractices/content/mcp-commands.md\"(exports, module) {\n      module.exports = '# MCP \\u4E0E\\u5E38\\u7528\\u547D\\u4EE4 - \\u6269\\u5C55 Claude Code \\u7684\\u80FD\\u529B\\u8FB9\\u754C\\n\\n\\u638C\\u63E1 MCP (Model Context Protocol) \\u670D\\u52A1\\u5668\\u7684\\u96C6\\u6210\\u548C\\u7BA1\\u7406\\uFF0C\\u4EE5\\u53CA\\u5982\\u4F55\\u521B\\u5EFA\\u548C\\u4F7F\\u7528\\u81EA\\u5B9A\\u4E49\\u547D\\u4EE4\\u3002\\n\\n## 1. MCP \\u670D\\u52A1\\u5668\\u96C6\\u6210\\n\\n**\\u5E38\\u7528 MCP \\u670D\\u52A1\\u5668\\u914D\\u7F6E**\\uFF1A\\n\\n```json\\n{\\n  \"mcpadvisor\": {\\n    \"command\": \"npx\",\\n    \"args\": [\"-y\", \"@xiaohui-wang/mcpadvisor@1.0.4\"]\\n  },\\n  \"Up-to-date Docs For Any Prompt\": {\\n    \"command\": \"npx\",\\n    \"args\": [\"-y\", \"@upstash/context7-mcp@latest\"]\\n  },\\n  \"sequential-thinking\": {\\n    \"command\": \"npx\",\\n    \"args\": [\"-y\", \"@modelcontextprotocol/server-sequential-thinking\"],\\n    \"env\": {},\\n    \"disabled\": true\\n  },\\n  \"memory\": {\\n    \"command\": \"npx\",\\n    \"args\": [\"-y\", \"@modelcontextprotocol/server-memory\"],\\n    \"env\": {}\\n  }\\n}\\n```\\n\\n**MCP \\u7BA1\\u7406\\u547D\\u4EE4**\\uFF1A\\n\\n```bash\\n# \\u6DFB\\u52A0\\u4E00\\u4E2A MCP\\nclaude mcp add <name> <command> [args...]\\n\\n# \\u793A\\u4F8B\\uFF1A\\u6DFB\\u52A0\\u81EA\\u5B9A\\u4E49\\u670D\\u52A1\\u5668\\nclaude mcp add my-server -e API_KEY=123 -- /path/to/server arg1 arg2\\n\\n# \\u67E5\\u770B\\u6240\\u6709 MCP \\u547D\\u4EE4\\nclaude mcp\\n```\\n\\n## 2. \\u5E38\\u7528\\u547D\\u4EE4\\u53C2\\u6570\\n\\n\\u5982\\u679C\\u5728 Claude \\u4E2D\\u4F7F\\u7528\\u547D\\u4EE4\\uFF0C\\u4E3A\\u4E86\\u548C\\u5BF9\\u8BDD\\u533A\\u5206\\uFF0C\\u9700\\u8981\\u524D\\u9762\\u52A0 `!`\\u3002\\n\\n```bash\\n# \\u7EE7\\u7EED\\u6700\\u8FD1\\u7684\\u5BF9\\u8BDD\\nclaude --continue\\n\\n# \\u53EF\\u4EE5\\u9009\\u62E9\\u6700\\u8FD1\\u7684\\u4E00\\u4E9B\\u5BF9\\u8BDD\\u4E2D\\u7684\\u4E00\\u4E2A\\u5F00\\u59CB\\nclaude --resume\\n\\n# \\u8FDB\\u5165 Claude Debug \\u6A21\\u5F0F\\uFF0C\\u4F1A\\u6253\\u5370\\u5F88\\u591A\\u8FD0\\u884C\\u65F6\\u65E5\\u5FD7\\nclaude --debug\\n```\\n\\n## 3. \\u81EA\\u5B9A\\u4E49 Slash \\u547D\\u4EE4\\n\\n**\\u521B\\u5EFA\\u547D\\u4EE4**\\uFF1A\\u5728 `.claude/commands/` \\u76EE\\u5F55\\u4E0B\\u521B\\u5EFA Markdown \\u6587\\u4EF6\\u3002\\u53EF\\u4EE5\\u5728\\u5BB6\\u76EE\\u5F55\\u4E0B\\u6216\\u8005\\u5F53\\u524D\\u9879\\u76EE\\u4E0B\\u3002\\n\\n```bash\\nmkdir -p .claude/commands\\n```\\n\\n**\\u793A\\u4F8B\\uFF1A\\u4FEE\\u590D GitHub Issue**\\uFF0C\\u4F7F\\u7528 `$ARGUMENTS` \\u4F5C\\u4E3A\\u5360\\u4F4D\\u7B26\\uFF1A\\n\\n```markdown\\n# .claude/commands/fix-issue.md\\n\\n\\u8BF7\\u5206\\u6790\\u548C\\u4FEE\\u590D GitHub issue: $ARGUMENTS\\n\\n\\u6267\\u884C\\u6B65\\u9AA4\\uFF1A\\n\\n1. \\u4F7F\\u7528 `gh issue view $ARGUMENTS` \\u83B7\\u53D6\\u8BE6\\u7EC6\\u4FE1\\u606F\\n2. \\u7406\\u89E3\\u95EE\\u9898\\u63CF\\u8FF0\\n3. \\u641C\\u7D22\\u76F8\\u5173\\u4EE3\\u7801\\u6587\\u4EF6\\n4. \\u5B9E\\u73B0\\u4FEE\\u590D\\u65B9\\u6848\\n5. \\u8FD0\\u884C\\u6D4B\\u8BD5\\u9A8C\\u8BC1\\n6. \\u63D0\\u4EA4\\u4EE3\\u7801\\u5E76\\u521B\\u5EFA PR\\n```\\n\\n**\\u4F7F\\u7528\\u65B9\\u6CD5**\\uFF1A\\n\\n```bash\\n/fix-issue 1234\\n```\\n\\n## 4. Meta-Slash-Commands\\n\\n\\u548C Meta-Prompt \\u7C7B\\u4F3C\\uFF0C\\u53C8\\u5230\\u4E86\\u5957\\u5A03\\u7684\\u73AF\\u8282\\u4E86\\uFF01\\u5F53\\u7136\\u4E0D\\u7528\\u547D\\u4EE4\\uFF0C\\u76F4\\u63A5\\u8BF4\\u548C CC \\u8BF4\\u521B\\u5EFA\\u4E00\\u4E2A Slash Command \\u4E5F\\u53EF\\u4EE5\\u3002\\n\\n**\\u7248\\u672C\\u7BA1\\u7406\\u7684\\u659C\\u6760\\u547D\\u4EE4\\u751F\\u6210\\u5668**\\uFF1A\\n\\n```markdown\\n---\\nallowed-tools: Write(*),Read(*),Bash(mkdir:*),Bash(ls:*),Bash(echo:*),Bash(cp:*),Bash(date:*)\\ndescription: \\u751F\\u6210\\u4E00\\u4E2A\\u652F\\u6301\\u7248\\u672C\\u7BA1\\u7406\\u7684\\u65B0\\u659C\\u6760\\u547D\\u4EE4\\nversion: 1.0.0\\nauthor: xiaohui\\n---\\n\\n# \\u751F\\u6210\\u5E26\\u7248\\u672C\\u7BA1\\u7406\\u7684\\u659C\\u6760\\u547D\\u4EE4\\n\\n\\u60A8\\u6B63\\u5728\\u521B\\u5EFA\\u4E00\\u4E2A\\u5185\\u7F6E\\u7248\\u672C\\u7BA1\\u7406\\u7684\\u65B0 Slash Command\\u3002\\u6839\\u636E `$ARGUMENTS` \\u4E2D\\u7684\\u7528\\u6237\\u9700\\u6C42\\uFF0C\\u751F\\u6210\\u4E00\\u4E2A\\u5B8C\\u6574\\u7684\\u5E26\\u7248\\u672C\\u63A7\\u5236\\u7684 Slash Command \\u6587\\u4EF6\\u3002\\n\\n## \\u7248\\u672C\\u7BA1\\u7406\\u529F\\u80FD\\n\\n\\u6B64\\u547D\\u4EE4\\u652F\\u6301\\uFF1A\\n- **\\u8BED\\u4E49\\u5316\\u7248\\u672C\\u63A7\\u5236** (MAJOR.MINOR.PATCH)\\n- \\u66F4\\u65B0\\u73B0\\u6709\\u547D\\u4EE4\\u65F6**\\u81EA\\u52A8\\u521B\\u5EFA\\u5907\\u4EFD**\\n- \\u5728 YAML Frontmatter \\u4E2D**\\u8DDF\\u8E2A\\u7248\\u672C\\u5386\\u53F2**\\n- **\\u751F\\u6210\\u66F4\\u65B0\\u65E5\\u5FD7**\\n```\\n\\n## 5. \\u5E38\\u7528 allowed-tools \\u6A21\\u5F0F\\n\\n- `Bash(git:*)` - \\u7528\\u4E8E Git \\u547D\\u4EE4\\n- `Bash(gh:*)` - \\u7528\\u4E8E GitHub CLI \\u547D\\u4EE4\\n- `Read(*)`, `Write(*)`, `Edit(*)` - \\u7528\\u4E8E\\u6587\\u4EF6\\u64CD\\u4F5C\\n- `LS(*)`, `Glob(*)`, `Grep(*)` - \\u7528\\u4E8E\\u76EE\\u5F55/\\u641C\\u7D22\\u64CD\\u4F5C\\n- `WebFetch(*)`, `WebSearch(*)` - \\u7528\\u4E8E Web \\u64CD\\u4F5C\\n\\n## 6. \\u6700\\u4F73\\u5B9E\\u8DF5\\n\\n- **\\u6A21\\u5757\\u5316\\u8BBE\\u8BA1**\\uFF1A\\u547D\\u4EE4\\u4E0D\\u8981\\u592A\\u5927\\uFF0C\\u65B9\\u4FBF\\u7EC4\\u5408\\n- **\\u7248\\u672C\\u7BA1\\u7406**\\uFF1A\\u4E3A\\u91CD\\u8981\\u547D\\u4EE4\\u6DFB\\u52A0\\u7248\\u672C\\u63A7\\u5236\\n- **\\u6587\\u6863\\u5B8C\\u5584**\\uFF1A\\u6BCF\\u4E2A\\u547D\\u4EE4\\u90FD\\u8981\\u6709\\u6E05\\u6670\\u7684\\u8BF4\\u660E\\n- **\\u6743\\u9650\\u63A7\\u5236**\\uFF1A\\u5408\\u7406\\u8BBE\\u7F6E allowed-tools \\u6743\\u9650\\n- **\\u6D4B\\u8BD5\\u9A8C\\u8BC1**\\uFF1A\\u521B\\u5EFA\\u547D\\u4EE4\\u540E\\u8981\\u5145\\u5206\\u6D4B\\u8BD5\\n\\nMCP \\u670D\\u52A1\\u5668\\u8BA9 Claude Code \\u5177\\u5907\\u65E0\\u9650\\u6269\\u5C55\\u7684\\u53EF\\u80FD\\u6027\\uFF0C\\u901A\\u8FC7\\u5408\\u7406\\u7684\\u914D\\u7F6E\\u548C\\u4F7F\\u7528\\uFF0C\\u53EF\\u4EE5\\u5927\\u5927\\u63D0\\u5347\\u5F00\\u53D1\\u6548\\u7387\\u3002\\n';\n    }\n  });\n\n  // src/client/bestPractices/content/core-workflow.md\n  var require_core_workflow = __commonJS({\n    \"src/client/bestPractices/content/core-workflow.md\"(exports, module) {\n      module.exports = '# \\u6838\\u5FC3\\u5DE5\\u4F5C\\u6D41\\u7A0B - \\u6587\\u6863\\u5148\\u884C\\u4E0E\\u6D4B\\u8BD5\\u9A71\\u52A8\\u7684\\u5F00\\u53D1\\u5B9E\\u8DF5\\n\\n\\u5DE5\\u4F5C\\u6D41\\u4E2D\\u6700\\u91CD\\u8981\\u7684\\u662F**\\u6587\\u6863\\u5148\\u884C**\\u548C**\\u6D4B\\u8BD5\\u5148\\u884C**\\u3002\\u56E0\\u4E3A\\u73B0\\u5728 AI \\u5199\\u4EE3\\u7801\\u51E0\\u4E4E\\u6BEB\\u4E0D\\u8D39\\u529B\\uFF0C\\u4EBA\\u7C7B\\u8D1F\\u8D23\\u628A\\u5173\\u7684\\u5C31\\u662F\\u77E5\\u9053\\u8981\\u5199\\u4EC0\\u4E48\\uFF0C\\u548C\\u6700\\u540E\\u5199\\u7684\\u5BF9\\u4E0D\\u5BF9\\u3002\\u501F\\u7528 ThoughtWork \\u5F90\\u660A\\u7684\\u8BDD\\uFF0C\\u8F6F\\u4EF6\\u5DE5\\u7A0B\\u672C\\u8D28\\u4E0A\\u662F\\u77E5\\u8BC6\\u5DE5\\u7A0B\\uFF0C\\u8F6F\\u4EF6\\u662F\\u77E5\\u8BC6\\u7684\\u5B9E\\u8DF5\\u548C\\u4F20\\u9012\\u3002\\n\\n## 1. \\u63A2\\u7D22-\\u8BA1\\u5212\\u9636\\u6BB5\\n\\n### 1.1 \\u63A2\\u7D22\\u9636\\u6BB5\\n\\n```bash\\n# \\u8BA9 Claude \\u5148\\u4E86\\u89E3\\u9879\\u76EE\\u7ED3\\u6784\\u548C\\u4E1A\\u52A1\\u80CC\\u666F\\n\"\\u8BF7\\u5148\\u9605\\u8BFB\\u9879\\u76EE\\u7684\\u4E3B\\u8981\\u6587\\u4EF6\\uFF0C\\u4E0D\\u8981\\u7ACB\\u5373\\u5F00\\u59CB\\u7F16\\u7801\"\\n\"\\u6211\\u4EEC\\u8BA8\\u8BBA\\u4E00\\u4E0B xxx\\uFF0C\\u8FD9\\u91CC\\u662F\\u80CC\\u666F\\u8D44\\u6599 xxx\"\\n```\\n\\n### 1.2 \\u8BA1\\u5212\\u9636\\u6BB5\\n\\n```bash\\n# \\u751F\\u6210\\u8BE6\\u7EC6\\u8BA1\\u5212\\n\"\\u8BF7\\u5236\\u5B9A\\u4E00\\u4E2A\\u5B9E\\u73B0\\u7528\\u6237\\u8BA4\\u8BC1\\u529F\\u80FD\\u7684\\u8BE6\\u7EC6\\u8BA1\\u5212\\uFF0C\\u4F7F\\u7528 think \\u6A21\\u5F0F\"\\n\"\\u5C06\\u8BA1\\u5212\\u4FDD\\u5B58\\u5230 planning/auth-implementation.md\"\\n```\\n\\n\\u26A0\\uFE0F **\\u91CD\\u8981\\u63D0\\u793A**\\uFF1A[CC \\u660E\\u786E\\u8868\\u793A](https://www.anthropic.com/engineering/claude-code-best-practices)\\uFF0C\\u4E0D\\u540C\\u7684\\u8BCD\\u6C47\\u5BF9\\u5E94\\u4E0D\\u540C\\u7684\\u6A21\\u578B\\u601D\\u8003\\u9884\\u7B97\\uFF1A\\n\\n`\"think\"` < `\"think hard\"` < `\"think harder\"` < `\"ultrathink\"`\\n\\n## 2. \\u6D4B\\u8BD5\\u9A71\\u52A8\\u5F00\\u53D1\\uFF08TDD\\uFF09\\n\\n\\u76F8\\u6BD4\\u8BA9 AI \\u5148\\u5199\\u529F\\u80FD\\u518D\\u5199\\u6D4B\\u8BD5\\uFF0C\\u5728\\u9879\\u76EE\\u6709\\u6761\\u4EF6\\u5148\\u5199\\u6D4B\\u8BD5\\u518D\\u5199\\u529F\\u80FD\\u7684\\u65F6\\u5019\\uFF0C\\u56E0\\u4E3A AI \\u6709\\u4E00\\u4E2A\\u660E\\u786E\\u7684\\u8FED\\u4EE3\\u76EE\\u6807\\uFF08\\u8BA9\\u6D4B\\u8BD5\\u901A\\u8FC7\\uFF09\\uFF0CAI \\u8868\\u73B0\\u66F4\\u597D\\uFF0C\\u7528\\u6237\\u4E5F\\u65B9\\u4FBF\\u9A8C\\u6536\\u3002\\n\\n### 2.1 TDD \\u6D41\\u7A0B\\n\\n```bash\\n# TDD \\u63D0\\u793A\\u8BCD\\u6A21\\u677F\\n\\u6211\\u4EEC\\u6B63\\u5728\\u8FDB\\u884C\\u6D4B\\u8BD5\\u9A71\\u52A8\\u5F00\\u53D1\\uFF08TDD\\uFF09\\uFF0C\\u8BF7\\u4F60\\u4E0D\\u8981\\u521B\\u5EFA\\u6A21\\u62DF\\u5B9E\\u73B0\\uFF0C\\u5373\\u4F7F\\u5BF9\\u4E8E\\u8FD8\\u6CA1\\u6709\\u5B9E\\u73B0\\u7684\\u529F\\u80FD\\u3002\\n\\u8BF7\\u4F60\\u6839\\u636E\\u529F\\u80FD xxx \\u548C\\u9884\\u671F\\u8F93\\u5165\\u8F93\\u51FA\\uFF1Axxx \\u7F16\\u5199\\u6D4B\\u8BD5\\u3002\\n\\u4F60\\u8FD0\\u884C\\u6D4B\\u8BD5\\u65F6\\u5C06\\u4F1A\\u7ECF\\u5386\\u7EA2\\u7EFF\\u5FAA\\u73AF\\u3002\\u5F53\\u6CA1\\u6709\\u5B9E\\u73B0\\u6216\\u5B9E\\u73B0\\u6709\\u8BEF\\u65F6\\uFF0C\\u6D4B\\u8BD5\\u7EA2\\u8272\\u62A5\\u9519\\uFF0C\\u5F53\\u5B9E\\u73B0\\u6B63\\u786E\\u65F6\\uFF0C\\u6D4B\\u8BD5\\u7EFF\\u8272\\u901A\\u8FC7\\u3002\\n\\u4E0D\\u8981\\u4FEE\\u6539\\u6D4B\\u8BD5\\u3002\\u4E13\\u6CE8\\u5B9E\\u73B0\\u89C4\\u5212\\u7684\\u6D4B\\u8BD5\\u529F\\u80FD\\u3002\\u6301\\u7EED\\u8FED\\u4EE3\\uFF0C\\u76F4\\u5230\\u6240\\u6709\\u6D4B\\u8BD5\\u901A\\u8FC7\\u3002\\n```\\n\\n### 2.2 TDD \\u6700\\u4F73\\u5B9E\\u8DF5\\n\\n1. **\\u7EA2\\u7EFF\\u5FAA\\u73AF**\\uFF1A\\u5148\\u5199\\u6D4B\\u8BD5\\uFF08\\u7EA2\\uFF09\\uFF0C\\u518D\\u5199\\u5B9E\\u73B0\\uFF08\\u7EFF\\uFF09\\uFF0C\\u6700\\u540E\\u91CD\\u6784\\n2. **\\u5C0F\\u6B65\\u8FED\\u4EE3**\\uFF1A\\u6BCF\\u6B21\\u53EA\\u5B9E\\u73B0\\u4E00\\u4E2A\\u5C0F\\u529F\\u80FD\\n3. **\\u6D4B\\u8BD5\\u5148\\u884C**\\uFF1A\\u6D4B\\u8BD5\\u662F\\u9700\\u6C42\\u7684\\u5177\\u4F53\\u5316\\n4. **\\u91CD\\u6784\\u5B89\\u5168**\\uFF1A\\u6709\\u6D4B\\u8BD5\\u4FDD\\u62A4\\u7684\\u91CD\\u6784\\u66F4\\u5B89\\u5168\\n\\n## 3. \\u4EE3\\u7801\\u751F\\u6210\\u6700\\u4F73\\u5B9E\\u8DF5\\n\\n### 3.1 \\u660E\\u786E\\u9700\\u6C42\\n\\n**\\u5BF9\\u6BD4\\u793A\\u4F8B**\\uFF1A\\n\\n| \\u274C \\u6A21\\u7CCA\\u6307\\u4EE4 | \\u2705 \\u8BE6\\u7EC6\\u6307\\u4EE4 |\\n|-----------|-----------|\\n| \"\\u6DFB\\u52A0\\u6D4B\\u8BD5\" | \"\\u4E3A UserService \\u7684 login \\u65B9\\u6CD5\\u6DFB\\u52A0\\u6D4B\\u8BD5\\uFF0C\\u9A8C\\u8BC1\\u5BC6\\u7801\\u9519\\u8BEF\\u65F6\\u629B\\u51FA AuthenticationError\" |\\n| \"\\u4FEE\\u590D bug\" | \"\\u4FEE\\u590D Issue #123\\uFF1A\\u7528\\u6237\\u767B\\u51FA\\u540E\\u4ECD\\u7136\\u53EF\\u4EE5\\u8BBF\\u95EE\\u53D7\\u4FDD\\u62A4\\u9875\\u9762\" |\\n| \"\\u4F18\\u5316\\u6027\\u80FD\" | \"\\u4F18\\u5316 /api/users \\u63A5\\u53E3\\uFF0C\\u5C06\\u54CD\\u5E94\\u65F6\\u95F4\\u4ECE 2s \\u964D\\u4F4E\\u5230 500ms \\u4EE5\\u5185\" |\\n\\n### 3.2 \\u7CBE\\u51C6\\u7528\\u8BCD\\n\\n- `\"think\"` \\u4EE3\\u8868\\u4E00\\u822C\\u7684\\u601D\\u8003\\n- `\"think more\"`\\u3001`\"think harder\"` \\u4EE3\\u8868\\u66F4\\u591A\\u7684\\u601D\\u8003\\n\\n\\u8BA9 LLM \\u66F4\\u591A\\u5730\\u601D\\u8003\\u8FD8\\u6709\\u5F88\\u591A\\u65B9\\u6CD5\\uFF0C\\u6BD4\\u5982\\u4F7F\\u7528 `<think>` \\u7684 COT \\u548C few-shot\\uFF0C\\u6216\\u8005\\u4F7F\\u7528 sequential-thinking MCP\\u3002\\n\\n## 4. \\u8C03\\u8BD5\\u548C\\u95EE\\u9898\\u89E3\\u51B3\\n\\n### 4.1 \\u7CFB\\u7EDF\\u5316\\u8C03\\u8BD5\\n\\n```bash\\n# \\u8C03\\u8BD5\\u6D41\\u7A0B\\n1. \\u590D\\u73B0\\u95EE\\u9898\\n2. \\u5206\\u6790\\u9519\\u8BEF\\u65E5\\u5FD7\\n3. \\u5B9A\\u4F4D\\u95EE\\u9898\\u6839\\u6E90\\n4. \\u5236\\u5B9A\\u4FEE\\u590D\\u65B9\\u6848\\n5. \\u9A8C\\u8BC1\\u4FEE\\u590D\\u6548\\u679C\\n6. \\u6DFB\\u52A0\\u9632\\u62A4\\u6D4B\\u8BD5\\n```\\n\\n### 4.2 \\u8C03\\u8BD5\\u6280\\u5DE7\\n\\n- **\\u65E5\\u5FD7\\u5206\\u6790**\\uFF1A\\u4F7F\\u7528\\u7ED3\\u6784\\u5316\\u65E5\\u5FD7\\u8BB0\\u5F55\\u5173\\u952E\\u4FE1\\u606F\\n- **\\u65AD\\u70B9\\u8C03\\u8BD5**\\uFF1A\\u5728\\u5173\\u952E\\u4F4D\\u7F6E\\u8BBE\\u7F6E\\u65AD\\u70B9\\n- **\\u5355\\u5143\\u6D4B\\u8BD5**\\uFF1A\\u7F16\\u5199\\u9488\\u5BF9\\u6027\\u7684\\u5355\\u5143\\u6D4B\\u8BD5\\n- **\\u96C6\\u6210\\u6D4B\\u8BD5**\\uFF1A\\u9A8C\\u8BC1\\u7EC4\\u4EF6\\u95F4\\u7684\\u4EA4\\u4E92\\n\\n## 5. \\u91CD\\u6784\\u548C\\u4F18\\u5316\\n\\n### 5.1 \\u91CD\\u6784\\u539F\\u5219\\n\\n- **\\u5C0F\\u6B65\\u91CD\\u6784**\\uFF1A\\u6BCF\\u6B21\\u53EA\\u6539\\u4E00\\u4E2A\\u5C0F\\u5730\\u65B9\\n- **\\u6D4B\\u8BD5\\u4FDD\\u62A4**\\uFF1A\\u91CD\\u6784\\u524D\\u786E\\u4FDD\\u6709\\u5145\\u5206\\u7684\\u6D4B\\u8BD5\\u8986\\u76D6\\n- **\\u529F\\u80FD\\u4E0D\\u53D8**\\uFF1A\\u91CD\\u6784\\u4E0D\\u6539\\u53D8\\u5916\\u90E8\\u884C\\u4E3A\\n- **\\u6301\\u7EED\\u96C6\\u6210**\\uFF1A\\u9891\\u7E41\\u63D0\\u4EA4\\uFF0C\\u53CA\\u65F6\\u53D1\\u73B0\\u95EE\\u9898\\n\\n### 5.2 \\u6027\\u80FD\\u4F18\\u5316\\n\\n- **\\u6027\\u80FD\\u76D1\\u63A7**\\uFF1A\\u5EFA\\u7ACB\\u6027\\u80FD\\u57FA\\u7EBF\\u548C\\u76D1\\u63A7\\n- **\\u74F6\\u9888\\u5206\\u6790**\\uFF1A\\u4F7F\\u7528\\u5DE5\\u5177\\u5B9A\\u4F4D\\u6027\\u80FD\\u74F6\\u9888\\n- **\\u6E10\\u8FDB\\u4F18\\u5316**\\uFF1A\\u4F18\\u5148\\u4F18\\u5316\\u5F71\\u54CD\\u6700\\u5927\\u7684\\u90E8\\u5206\\n- **\\u6548\\u679C\\u9A8C\\u8BC1**\\uFF1A\\u4F18\\u5316\\u540E\\u8981\\u9A8C\\u8BC1\\u5B9E\\u9645\\u6548\\u679C\\n\\n## 6. \\u8D28\\u91CF\\u4FDD\\u8BC1\\n\\n### 6.1 \\u4EE3\\u7801\\u5BA1\\u67E5\\n\\n- **\\u81EA\\u52A8\\u5316\\u68C0\\u67E5**\\uFF1A\\u4F7F\\u7528 lint\\u3001\\u683C\\u5F0F\\u5316\\u5DE5\\u5177\\n- **\\u4EBA\\u5DE5\\u5BA1\\u67E5**\\uFF1A\\u5173\\u6CE8\\u903B\\u8F91\\u3001\\u8BBE\\u8BA1\\u3001\\u5B89\\u5168\\u7B49\\n- **AI \\u8F85\\u52A9**\\uFF1A\\u4F7F\\u7528 AI \\u5DE5\\u5177\\u8F85\\u52A9\\u4EE3\\u7801\\u5BA1\\u67E5\\n- **\\u6301\\u7EED\\u6539\\u8FDB**\\uFF1A\\u6839\\u636E\\u5BA1\\u67E5\\u7ED3\\u679C\\u6539\\u8FDB\\u5F00\\u53D1\\u6D41\\u7A0B\\n\\n### 6.2 \\u6D4B\\u8BD5\\u7B56\\u7565\\n\\n- **\\u5355\\u5143\\u6D4B\\u8BD5**\\uFF1A\\u6D4B\\u8BD5\\u5355\\u4E2A\\u51FD\\u6570\\u6216\\u7C7B\\n- **\\u96C6\\u6210\\u6D4B\\u8BD5**\\uFF1A\\u6D4B\\u8BD5\\u7EC4\\u4EF6\\u95F4\\u7684\\u4EA4\\u4E92\\n- **\\u7AEF\\u5230\\u7AEF\\u6D4B\\u8BD5**\\uFF1A\\u6D4B\\u8BD5\\u5B8C\\u6574\\u7684\\u7528\\u6237\\u6D41\\u7A0B\\n- **\\u6027\\u80FD\\u6D4B\\u8BD5**\\uFF1A\\u9A8C\\u8BC1\\u7CFB\\u7EDF\\u6027\\u80FD\\u6307\\u6807\\n\\n## 7. \\u6CE8\\u610F\\u4E8B\\u9879\\n\\n\\u26A0\\uFE0F **\\u91CD\\u8981\\u63D0\\u9192**\\uFF1A\\n- \\u59CB\\u7EC8\\u4FDD\\u6301\\u4EE3\\u7801\\u5BA1\\u67E5\\u7684\\u4E60\\u60EF\\n- AI \\u751F\\u6210\\u7684\\u4EE3\\u7801\\u4E5F\\u9700\\u8981\\u4EBA\\u5DE5\\u9A8C\\u8BC1\\n- \\u4E0D\\u8981\\u8FC7\\u5EA6\\u4F9D\\u8D56 AI\\uFF0C\\u4FDD\\u6301\\u72EC\\u7ACB\\u601D\\u8003\\n- \\u5B9A\\u671F\\u66F4\\u65B0\\u548C\\u7EF4\\u62A4\\u6D4B\\u8BD5\\u7528\\u4F8B\\n\\n\\u901A\\u8FC7\\u9075\\u5FAA\\u8FD9\\u4E9B\\u6838\\u5FC3\\u5DE5\\u4F5C\\u6D41\\u7A0B\\uFF0C\\u53EF\\u4EE5\\u786E\\u4FDD\\u5728\\u4F7F\\u7528 Claude Code \\u8FDB\\u884C\\u5F00\\u53D1\\u65F6\\u65E2\\u9AD8\\u6548\\u53C8\\u53EF\\u9760\\u3002\\n';\n    }\n  });\n\n  // src/client/bestPractices/content/context-management.md\n  var require_context_management = __commonJS({\n    \"src/client/bestPractices/content/context-management.md\"(exports, module) {\n      module.exports = '# \\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406 - \\u7CBE\\u51C6\\u6C9F\\u901A\\u4E0E\\u9AD8\\u6548\\u534F\\u4F5C\\u7684\\u827A\\u672F\\n\\n\\u638C\\u63E1 Claude Code \\u7684\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\\u6280\\u5DE7\\uFF0C\\u5305\\u62EC\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\u7684\\u4F7F\\u7528\\u548C\\u957F\\u671F\\u8BB0\\u5FC6\\u7684\\u7EF4\\u62A4\\u3002\\n\\n## 1. \\u8BE6\\u7EC6\\u7684\\u6307\\u4EE4\\n\\n### 1.1 \\u6307\\u4EE4\\u5BF9\\u6BD4\\n\\n**\\u5BF9\\u6BD4\\u793A\\u4F8B**\\uFF1A\\n\\n| \\u274C \\u6A21\\u7CCA\\u6307\\u4EE4 | \\u2705 \\u8BE6\\u7EC6\\u6307\\u4EE4 |\\n|-----------|-----------|\\n| \"\\u6DFB\\u52A0\\u6D4B\\u8BD5\" | \"\\u4E3A UserService \\u7684 login \\u65B9\\u6CD5\\u6DFB\\u52A0\\u6D4B\\u8BD5\\uFF0C\\u9A8C\\u8BC1\\u5BC6\\u7801\\u9519\\u8BEF\\u65F6\\u629B\\u51FA AuthenticationError\" |\\n| \"\\u4FEE\\u590D bug\" | \"\\u4FEE\\u590D Issue #123\\uFF1A\\u7528\\u6237\\u767B\\u51FA\\u540E\\u4ECD\\u7136\\u53EF\\u4EE5\\u8BBF\\u95EE\\u53D7\\u4FDD\\u62A4\\u9875\\u9762\" |\\n| \"\\u4F18\\u5316\\u6027\\u80FD\" | \"\\u4F18\\u5316 /api/users \\u63A5\\u53E3\\uFF0C\\u5C06\\u54CD\\u5E94\\u65F6\\u95F4\\u4ECE 2s \\u964D\\u4F4E\\u5230 500ms \\u4EE5\\u5185\" |\\n\\n### 1.2 \\u7CBE\\u51C6\\u7528\\u8BCD\\n\\n- `\"think\"` \\u4EE3\\u8868\\u4E00\\u822C\\u7684\\u601D\\u8003\\n- `\"think more\"`\\u3001`\"think harder\"` \\u4EE3\\u8868\\u66F4\\u591A\\u7684\\u601D\\u8003\\n\\n\\u503C\\u5F97\\u4E00\\u63D0\\u7684\\u662F\\uFF0C\\u8BA9 LLM \\u66F4\\u591A\\u5730\\u601D\\u8003\\u8FD8\\u6709\\u5F88\\u591A\\u65B9\\u6CD5\\uFF0C\\u6BD4\\u5982\\u4F7F\\u7528 `<think>` \\u7684 COT \\u548C few-shot\\uFF0C\\u6216\\u8005\\u4F7F\\u7528 sequential-thinking MCP\\u3002\\n\\n## 2. \\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\\u7B56\\u7565\\n\\n### 2.1 \\u4FDD\\u6301\\u4E13\\u6CE8\\n\\n```bash\\n# \\u6E05\\u9664\\u4E0D\\u76F8\\u5173\\u4E0A\\u4E0B\\u6587\\n/clear\\n\\n# \\u805A\\u7126\\u7279\\u5B9A\\u76EE\\u5F55\\n# \\u6216\\u8005\\u76F4\\u63A5\\u5207\\u5230\\u8FD9\\u4E2A\\u76EE\\u5F55\\u518D\\u4F7F\\u7528 Claude Code\\n\"\\u8BF7\\u4E13\\u6CE8\\u4E8E @src/auth/ \\u76EE\\u5F55\\u4E0B\\u7684\\u6587\\u4EF6\"\\n\\n# \\u4F7F\\u7528\\u68C0\\u67E5\\u6E05\\u5355\\n\"\\u521B\\u5EFA\\u4E00\\u4E2A\\u4FEE\\u590D lint \\u9519\\u8BEF\\u7684\\u68C0\\u67E5\\u6E05\\u5355\\uFF0C\\u9010\\u9879\\u5B8C\\u6210\"\\n```\\n\\n### 2.2 \\u4E0A\\u4E0B\\u6587\\u7A97\\u53E3\\u4F18\\u5316\\n\\n**\\u6700\\u5927\\u5316\\u5229\\u7528\\u6709\\u9650\\u7684\\u4E0A\\u4E0B\\u6587\\u7A97\\u53E3**\\uFF1A\\n\\n1. **\\u5206\\u5C42\\u4FE1\\u606F**\\uFF1A\\u91CD\\u8981\\u4FE1\\u606F\\u653E\\u5728\\u524D\\u9762\\n2. **\\u7ED3\\u6784\\u5316\\u63CF\\u8FF0**\\uFF1A\\u4F7F\\u7528\\u6E05\\u6670\\u7684\\u683C\\u5F0F\\u548C\\u6807\\u9898\\n3. **\\u5173\\u952E\\u8BCD\\u7A81\\u51FA**\\uFF1A\\u91CD\\u8981\\u6982\\u5FF5\\u7528\\u7C97\\u4F53\\u6216\\u7279\\u6B8A\\u6807\\u8BB0\\n4. **\\u6E10\\u8FDB\\u5F0F\\u8BE6\\u7EC6**\\uFF1A\\u5148\\u6982\\u8FF0\\uFF0C\\u518D\\u6DF1\\u5165\\u7EC6\\u8282\\n\\n## 3. \\u6570\\u636E\\u8F93\\u5165\\u65B9\\u5F0F\\n\\n### 3.1 \\u591A\\u79CD\\u8F93\\u5165\\u65B9\\u6CD5\\n\\n```bash\\n# 1. \\u76F4\\u63A5\\u7C98\\u8D34\\n# \\u76F4\\u63A5\\u590D\\u5236\\u7C98\\u8D34\\u5185\\u5BB9\\u5230\\u5BF9\\u8BDD\\u4E2D\\n\\n# 2. \\u7BA1\\u9053\\u8F93\\u5165\\ncat error.log | claude \"\\u5206\\u6790\\u8FD9\\u4E9B\\u9519\\u8BEF\\u65E5\\u5FD7\"\\n\\n# 3. \\u6587\\u4EF6\\u8BFB\\u53D6\\n\"\\u8BF7\\u8BFB\\u53D6 data/users.csv \\u5E76\\u5206\\u6790\\u7528\\u6237\\u5206\\u5E03\"\\n\\n# 4. \\u5982\\u679C\\u6587\\u4EF6\\u5C31\\u5728\\u5F53\\u524D\\u76EE\\u5F55\\u4E0B\\u76F4\\u63A5 @\\n\"\\u8BF7\\u8BFB\\u53D6 @users.csv \\u5E76\\u5206\\u6790\\u7528\\u6237\\u5206\\u5E03\"\\n\\n# 5. URL \\u83B7\\u53D6\\uFF0C\\u6CE8\\u610F\\u7F51\\u7EDC\\u662F\\u5426\\u9700\\u8981 VPN\\n\"\\u8BF7\\u5206\\u6790 https://api.github.com/users/octocat \\u7684\\u54CD\\u5E94\\u7ED3\\u6784\"\\n\\n# 6. \\u5F15\\u7528 MCP Resources\\uFF0C\\u5F53\\u8FDE\\u63A5\\u4E86 MCP\\uFF0C\\u683C\\u5F0F\\u662F @server:resource\\n\"\\u770B\\u770B\\u73B0\\u5728\\u6709\\u54EA\\u4E9B issue\\uFF1A@github:repos/owner/repo/issues\"\\n```\\n\\n### 3.2 \\u7ED3\\u5408\\u56FE\\u7247\\u5F00\\u53D1\\n\\nCC \\u867D\\u7136\\u8DD1\\u5728\\u547D\\u4EE4\\u884C\\u91CC\\u9762\\uFF0C\\u4F46\\u662F\\u53EF\\u4EE5\\u5411\\u5BF9\\u8BDD\\u4E2D\\u6DFB\\u52A0\\u56FE\\u7247\\uFF01\\n\\n**\\u56FE\\u7247\\u8F93\\u5165\\u65B9\\u6CD5**\\uFF1A\\n\\n- **\\u62D6\\u653E**\\uFF1A\\u5C06\\u56FE\\u7247\\u62D6\\u653E\\u5230 Claude Code \\u7A97\\u53E3\\u4E2D\\n- **\\u7C98\\u8D34**\\uFF1A\\u590D\\u5236\\u56FE\\u7247\\uFF0C\\u7136\\u540E\\u4F7F\\u7528 `Ctrl + V` \\u5C06\\u5176\\u7C98\\u8D34\\u5230 CLI \\u4E2D\\uFF08\\u4E0D\\u662F `Cmd + V`\\uFF09\\n- **\\u8DEF\\u5F84\\u5F15\\u7528**\\uFF1A\\u5411 Claude \\u63D0\\u4F9B\\u56FE\\u7247\\u8DEF\\u5F84\\n\\n**\\u793A\\u4F8B\\u7528\\u6CD5**\\uFF1A\\n\\n```bash\\n\"\\u6839\\u636E\\u622A\\u56FE\\u7ED3\\u679C\\uFF1A/path/to/your/image.png \\u8C03\\u6574\\u6837\\u5F0F\\uFF0C\\u4F7F\\u7528 Puppeteer \\u622A\\u56FE\\u5BF9\\u6BD4\\u8BBE\\u8BA1\\u7A3F\\uFF0C\\u76F4\\u5230\\u5339\\u914D\\u8BBE\\u8BA1\\u7A3F\"\\n```\\n\\n## 4. \\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\u8BBE\\u8BA1\\n\\n### 4.1 \\u8BB0\\u5FC6\\u5E93\\u7ED3\\u6784\\n\\n**\\u6709\\u6548\\u7684\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\u5E94\\u8BE5\\u5305\\u542B**\\uFF1A\\n\\n```markdown\\n# \\u9879\\u76EE\\u6982\\u8FF0\\n- \\u9879\\u76EE\\u76EE\\u6807\\u548C\\u6838\\u5FC3\\u529F\\u80FD\\n- \\u6280\\u672F\\u67B6\\u6784\\u548C\\u8BBE\\u8BA1\\u51B3\\u7B56\\n- \\u5173\\u952E\\u4E1A\\u52A1\\u903B\\u8F91\\u8BF4\\u660E\\n\\n# \\u5F00\\u53D1\\u89C4\\u8303\\n- \\u4EE3\\u7801\\u98CE\\u683C\\u548C\\u547D\\u540D\\u7EA6\\u5B9A\\n- \\u6D4B\\u8BD5\\u7B56\\u7565\\u548C\\u8986\\u76D6\\u8981\\u6C42\\n- \\u63D0\\u4EA4\\u548C\\u90E8\\u7F72\\u6D41\\u7A0B\\n\\n# \\u91CD\\u8981\\u7EA6\\u675F\\n- \\u6027\\u80FD\\u8981\\u6C42\\u548C\\u9650\\u5236\\n- \\u5B89\\u5168\\u8003\\u8651\\u548C\\u5408\\u89C4\\u8981\\u6C42\\n- \\u517C\\u5BB9\\u6027\\u548C\\u4F9D\\u8D56\\u7BA1\\u7406\\n\\n# \\u5E38\\u89C1\\u95EE\\u9898\\n- \\u5DF2\\u77E5\\u95EE\\u9898\\u548C\\u89E3\\u51B3\\u65B9\\u6848\\n- \\u8C03\\u8BD5\\u6280\\u5DE7\\u548C\\u5DE5\\u5177\\u4F7F\\u7528\\n- \\u90E8\\u7F72\\u548C\\u8FD0\\u7EF4\\u6CE8\\u610F\\u4E8B\\u9879\\n```\\n\\n### 4.2 \\u8BB0\\u5FC6\\u5E93\\u7EF4\\u62A4\\n\\n**\\u6700\\u4F73\\u5B9E\\u8DF5**\\uFF1A\\n\\n1. **\\u5B9A\\u671F\\u66F4\\u65B0**\\uFF1A\\u968F\\u7740\\u9879\\u76EE\\u53D1\\u5C55\\u53CA\\u65F6\\u66F4\\u65B0\\u8BB0\\u5FC6\\u5E93\\n2. **\\u7248\\u672C\\u63A7\\u5236**\\uFF1A\\u5C06\\u8BB0\\u5FC6\\u5E93\\u6587\\u4EF6\\u7EB3\\u5165\\u7248\\u672C\\u63A7\\u5236\\n3. **\\u5206\\u5C42\\u7BA1\\u7406**\\uFF1A\\u5168\\u5C40\\u3001\\u9879\\u76EE\\u3001\\u6A21\\u5757\\u591A\\u5C42\\u7EA7\\u8BB0\\u5FC6\\u5E93\\n4. **\\u56E2\\u961F\\u534F\\u4F5C**\\uFF1A\\u56E2\\u961F\\u6210\\u5458\\u5171\\u540C\\u7EF4\\u62A4\\u548C\\u5B8C\\u5584\\n\\n## 5. \\u957F\\u671F\\u8BB0\\u5FC6\\u7BA1\\u7406\\n\\n### 5.1 \\u77E5\\u8BC6\\u79EF\\u7D2F\\n\\n**\\u5EFA\\u7ACB\\u4E2A\\u4EBA\\u77E5\\u8BC6\\u5E93**\\uFF1A\\n\\n- **\\u6280\\u672F\\u7B14\\u8BB0**\\uFF1A\\u8BB0\\u5F55\\u5B66\\u4E60\\u7684\\u65B0\\u6280\\u672F\\u548C\\u6700\\u4F73\\u5B9E\\u8DF5\\n- **\\u95EE\\u9898\\u89E3\\u51B3**\\uFF1A\\u8BB0\\u5F55\\u9047\\u5230\\u7684\\u95EE\\u9898\\u548C\\u89E3\\u51B3\\u65B9\\u6848\\n- **\\u9879\\u76EE\\u7ECF\\u9A8C**\\uFF1A\\u603B\\u7ED3\\u9879\\u76EE\\u4E2D\\u7684\\u7ECF\\u9A8C\\u548C\\u6559\\u8BAD\\n- **\\u5DE5\\u5177\\u4F7F\\u7528**\\uFF1A\\u8BB0\\u5F55\\u5E38\\u7528\\u5DE5\\u5177\\u7684\\u914D\\u7F6E\\u548C\\u6280\\u5DE7\\n\\n### 5.2 \\u77E5\\u8BC6\\u68C0\\u7D22\\n\\n**\\u9AD8\\u6548\\u68C0\\u7D22\\u7B56\\u7565**\\uFF1A\\n\\n- **\\u6807\\u7B7E\\u7CFB\\u7EDF**\\uFF1A\\u4E3A\\u77E5\\u8BC6\\u6761\\u76EE\\u6DFB\\u52A0\\u6807\\u7B7E\\n- **\\u5173\\u952E\\u8BCD\\u7D22\\u5F15**\\uFF1A\\u5EFA\\u7ACB\\u5173\\u952E\\u8BCD\\u7D22\\u5F15\\n- **\\u5206\\u7C7B\\u7EC4\\u7EC7**\\uFF1A\\u6309\\u6280\\u672F\\u6808\\u6216\\u9879\\u76EE\\u7C7B\\u578B\\u5206\\u7C7B\\n- **\\u5B9A\\u671F\\u56DE\\u987E**\\uFF1A\\u5B9A\\u671F\\u56DE\\u987E\\u548C\\u6574\\u7406\\u77E5\\u8BC6\\u5E93\\n\\n## 6. \\u9AD8\\u7EA7\\u6280\\u5DE7\\n\\n### 6.1 \\u4E0A\\u4E0B\\u6587\\u94FE\\u63A5\\n\\n**\\u5EFA\\u7ACB\\u77E5\\u8BC6\\u95F4\\u7684\\u8054\\u7CFB**\\uFF1A\\n\\n- **\\u4EA4\\u53C9\\u5F15\\u7528**\\uFF1A\\u5728\\u76F8\\u5173\\u77E5\\u8BC6\\u70B9\\u95F4\\u5EFA\\u7ACB\\u5F15\\u7528\\n- **\\u4F9D\\u8D56\\u5173\\u7CFB**\\uFF1A\\u660E\\u786E\\u77E5\\u8BC6\\u70B9\\u95F4\\u7684\\u4F9D\\u8D56\\u5173\\u7CFB\\n- **\\u6F14\\u8FDB\\u5386\\u53F2**\\uFF1A\\u8BB0\\u5F55\\u77E5\\u8BC6\\u70B9\\u7684\\u6F14\\u8FDB\\u8FC7\\u7A0B\\n- **\\u5E94\\u7528\\u573A\\u666F**\\uFF1A\\u8BB0\\u5F55\\u77E5\\u8BC6\\u70B9\\u7684\\u5177\\u4F53\\u5E94\\u7528\\u573A\\u666F\\n\\n### 6.2 \\u667A\\u80FD\\u63D0\\u793A\\n\\n**\\u63D0\\u9AD8 AI \\u7406\\u89E3\\u51C6\\u786E\\u6027**\\uFF1A\\n\\n- **\\u80CC\\u666F\\u8BF4\\u660E**\\uFF1A\\u63D0\\u4F9B\\u5145\\u5206\\u7684\\u80CC\\u666F\\u4FE1\\u606F\\n- **\\u671F\\u671B\\u8F93\\u51FA**\\uFF1A\\u660E\\u786E\\u8BF4\\u660E\\u671F\\u671B\\u7684\\u8F93\\u51FA\\u683C\\u5F0F\\n- **\\u7EA6\\u675F\\u6761\\u4EF6**\\uFF1A\\u5217\\u51FA\\u76F8\\u5173\\u7684\\u7EA6\\u675F\\u548C\\u9650\\u5236\\n- **\\u793A\\u4F8B\\u53C2\\u8003**\\uFF1A\\u63D0\\u4F9B\\u76F8\\u4F3C\\u573A\\u666F\\u7684\\u793A\\u4F8B\\n\\n## 7. \\u6548\\u679C\\u8BC4\\u4F30\\n\\n**\\u8861\\u91CF\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\\u6548\\u679C**\\uFF1A\\n\\n- **\\u54CD\\u5E94\\u51C6\\u786E\\u6027**\\uFF1AAI \\u56DE\\u7B54\\u7684\\u51C6\\u786E\\u7A0B\\u5EA6\\n- **\\u7406\\u89E3\\u6DF1\\u5EA6**\\uFF1AAI \\u5BF9\\u95EE\\u9898\\u7684\\u7406\\u89E3\\u6DF1\\u5EA6\\n- **\\u89E3\\u51B3\\u6548\\u7387**\\uFF1A\\u95EE\\u9898\\u89E3\\u51B3\\u7684\\u901F\\u5EA6\\n- **\\u77E5\\u8BC6\\u590D\\u7528**\\uFF1A\\u77E5\\u8BC6\\u7684\\u590D\\u7528\\u7A0B\\u5EA6\\n\\n\\u{1F4A1} **\\u9AD8\\u7EA7\\u6280\\u5DE7**\\uFF1A\\u5408\\u7406\\u7684\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\\u53EF\\u4EE5\\u8BA9 Claude Code \\u7684\\u8868\\u73B0\\u63D0\\u5347 50% \\u4EE5\\u4E0A\\uFF01\\n\\n\\u901A\\u8FC7\\u7CFB\\u7EDF\\u5316\\u7684\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\\uFF0C\\u53EF\\u4EE5\\u663E\\u8457\\u63D0\\u5347\\u4E0E Claude Code \\u534F\\u4F5C\\u7684\\u6548\\u7387\\u548C\\u8D28\\u91CF\\u3002\\n';\n    }\n  });\n\n  // src/client/bestPractices/content/automation-batch.md\n  var require_automation_batch = __commonJS({\n    \"src/client/bestPractices/content/automation-batch.md\"(exports, module) {\n      module.exports = '# \\u81EA\\u52A8\\u5316\\u4E0E\\u6279\\u5904\\u7406 - \\u8BA9 Claude Code \\u6210\\u4E3A\\u4F60\\u7684\\u5F00\\u53D1\\u751F\\u4EA7\\u529B\\u500D\\u589E\\u5668\\n\\n\\u5B66\\u4E60\\u5982\\u4F55\\u5C06 Claude Code \\u96C6\\u6210\\u5230\\u81EA\\u52A8\\u5316\\u5DE5\\u4F5C\\u6D41\\u4E2D\\uFF0C\\u5305\\u62EC CI/CD \\u6D41\\u7A0B\\u548C\\u6279\\u5904\\u7406\\u4EFB\\u52A1\\u3002\\n\\n## 1. \\u65E0\\u5934\\u6A21\\u5F0F\\uFF08Headless Mode\\uFF09\\n\\n### 1.1 \\u57FA\\u672C\\u7528\\u6CD5\\n\\n```bash\\n# CI/CD \\u96C6\\u6210\\nclaude -p \"\\u8FD0\\u884C\\u6240\\u6709\\u6D4B\\u8BD5\\u5E76\\u751F\\u6210\\u8986\\u76D6\\u7387\\u62A5\\u544A\" --output-format stream-json\\n\\n# \\u6279\\u91CF\\u5904\\u7406\\nclaude -p \"\\u4E3A\\u6240\\u6709 TypeScript \\u6587\\u4EF6\\u6DFB\\u52A0\\u7C7B\\u578B\\u68C0\\u67E5\" --allowedTools Edit\\n```\\n\\n### 1.2 \\u8F93\\u51FA\\u683C\\u5F0F\\n\\n**\\u652F\\u6301\\u7684\\u8F93\\u51FA\\u683C\\u5F0F**\\uFF1A\\n\\n- `stream-json`\\uFF1A\\u6D41\\u5F0F JSON \\u8F93\\u51FA\\uFF0C\\u9002\\u5408\\u5B9E\\u65F6\\u5904\\u7406\\n- `json`\\uFF1A\\u6807\\u51C6 JSON \\u683C\\u5F0F\\n- `text`\\uFF1A\\u7EAF\\u6587\\u672C\\u683C\\u5F0F\\n- `markdown`\\uFF1AMarkdown \\u683C\\u5F0F\\n\\n## 2. \\u81EA\\u52A8\\u5316\\u811A\\u672C\\u793A\\u4F8B\\n\\n### 2.1 Issue \\u81EA\\u52A8\\u5206\\u7C7B\\n\\n```bash\\n#!/bin/bash\\n# auto-triage.sh\\n\\nISSUE_NUMBER=$1\\nclaude -p \"\\n\\u5206\\u6790 GitHub Issue #$ISSUE_NUMBER \\u5E76\\u6DFB\\u52A0\\u5408\\u9002\\u7684\\u6807\\u7B7E\\n\\u6B65\\u9AA4\\uFF1A\\n1. \\u8BFB\\u53D6 Issue \\u5185\\u5BB9\\n2. \\u8BC6\\u522B\\u95EE\\u9898\\u7C7B\\u578B\\uFF08bug/feature/docs\\uFF09\\n3. \\u8BC4\\u4F30\\u4F18\\u5148\\u7EA7\\n4. \\u6DFB\\u52A0\\u6807\\u7B7E\\n\" --allowedTools mcp__github__add_labels\\n```\\n\\n### 2.2 \\u4EE3\\u7801\\u8D28\\u91CF\\u68C0\\u67E5\\n\\n```bash\\n#!/bin/bash\\n# quality-check.sh\\n\\nclaude -p \"\\n\\u5BF9\\u5F53\\u524D\\u9879\\u76EE\\u8FDB\\u884C\\u5168\\u9762\\u7684\\u4EE3\\u7801\\u8D28\\u91CF\\u68C0\\u67E5\\uFF1A\\n1. \\u8FD0\\u884C ESLint \\u68C0\\u67E5\\n2. \\u8FD0\\u884C TypeScript \\u7C7B\\u578B\\u68C0\\u67E5\\n3. \\u68C0\\u67E5\\u6D4B\\u8BD5\\u8986\\u76D6\\u7387\\n4. \\u5206\\u6790\\u4EE3\\u7801\\u590D\\u6742\\u5EA6\\n5. \\u751F\\u6210\\u8D28\\u91CF\\u62A5\\u544A\\n\" --allowedTools Bash,Read,Write\\n```\\n\\n### 2.3 \\u6587\\u6863\\u81EA\\u52A8\\u751F\\u6210\\n\\n```bash\\n#!/bin/bash\\n# generate-docs.sh\\n\\nclaude -p \"\\n\\u4E3A\\u9879\\u76EE\\u751F\\u6210\\u5B8C\\u6574\\u7684 API \\u6587\\u6863\\uFF1A\\n1. \\u626B\\u63CF\\u6240\\u6709\\u6E90\\u4EE3\\u7801\\u6587\\u4EF6\\n2. \\u63D0\\u53D6\\u51FD\\u6570\\u548C\\u7C7B\\u7684\\u6CE8\\u91CA\\n3. \\u751F\\u6210 Markdown \\u683C\\u5F0F\\u7684 API \\u6587\\u6863\\n4. \\u66F4\\u65B0 README.md \\u6587\\u4EF6\\n\" --allowedTools Read,Write,Glob\\n```\\n\\n## 3. Pre-Commit Hooks\\n\\n### 3.1 \\u57FA\\u7840 Hook \\u914D\\u7F6E\\n\\n**.git/hooks/pre-commit**\\uFF1A\\n\\n```bash\\n#!/bin/bash\\n# \\u4F7F\\u7528 Claude \\u68C0\\u67E5\\u4EE3\\u7801\\u8D28\\u91CF\\n\\nclaude -p \"\\n\\u68C0\\u67E5\\u5373\\u5C06\\u63D0\\u4EA4\\u7684\\u4EE3\\u7801\\uFF1A\\n1. \\u8FD0\\u884C lint \\u68C0\\u67E5\\n2. \\u786E\\u4FDD\\u6D4B\\u8BD5\\u901A\\u8FC7\\n3. \\u9A8C\\u8BC1\\u4EE3\\u7801\\u98CE\\u683C\\u4E00\\u81F4\\u6027\\n4. \\u5982\\u6709\\u95EE\\u9898\\uFF0C\\u63D0\\u4F9B\\u4FEE\\u590D\\u5EFA\\u8BAE\\n\" --allowedTools Bash\\n```\\n\\n### 3.2 \\u9AD8\\u7EA7 Hook \\u793A\\u4F8B\\n\\n```bash\\n#!/bin/bash\\n# advanced-pre-commit.sh\\n\\n# \\u83B7\\u53D6\\u5373\\u5C06\\u63D0\\u4EA4\\u7684\\u6587\\u4EF6\\nSTAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E \\'\\\\.(ts|js|tsx|jsx)$\\')\\n\\nif [ -z \"$STAGED_FILES\" ]; then\\n    echo \"No JavaScript/TypeScript files to check\"\\n    exit 0\\nfi\\n\\n# \\u4F7F\\u7528 Claude \\u8FDB\\u884C\\u4EE3\\u7801\\u5BA1\\u67E5\\nclaude -p \"\\n\\u5BF9\\u4EE5\\u4E0B\\u5373\\u5C06\\u63D0\\u4EA4\\u7684\\u6587\\u4EF6\\u8FDB\\u884C\\u4EE3\\u7801\\u5BA1\\u67E5\\uFF1A\\n$STAGED_FILES\\n\\n\\u68C0\\u67E5\\u9879\\u76EE\\uFF1A\\n1. \\u4EE3\\u7801\\u98CE\\u683C\\u4E00\\u81F4\\u6027\\n2. \\u6F5C\\u5728\\u7684 bug \\u548C\\u95EE\\u9898\\n3. \\u6027\\u80FD\\u4F18\\u5316\\u5EFA\\u8BAE\\n4. \\u5B89\\u5168\\u6027\\u68C0\\u67E5\\n5. \\u6D4B\\u8BD5\\u8986\\u76D6\\u60C5\\u51B5\\n\\n\\u5982\\u679C\\u53D1\\u73B0\\u95EE\\u9898\\uFF0C\\u8BF7\\u63D0\\u4F9B\\u5177\\u4F53\\u7684\\u4FEE\\u590D\\u5EFA\\u8BAE\\u3002\\n\" --allowedTools Read,Bash\\n```\\n\\n## 4. Claude Code Hooks\\n\\n### 4.1 Hook \\u7CFB\\u7EDF\\u6982\\u8FF0\\n\\n\\u8FD9\\u4E2A\\u5199 Spring \\u7684\\u5E94\\u8BE5\\u5F88\\u719F\\u6089\\uFF0C\\u7C7B\\u4F3C\\u7B80\\u5355\\u7684 Spring \\u751F\\u547D\\u5468\\u671F\\u6269\\u5C55\\u70B9\\uFF0C\\u5728 CC \\u6267\\u884C\\u7684\\u6BCF\\u4E2A\\u9636\\u6BB5\\u6267\\u884C\\u5BF9\\u5E94\\u7684 Hook \\u52A8\\u4F5C\\u3002CC \\u4E5F\\u63D0\\u9192\\u4F60\\u914D\\u7F6E Hooks \\u81EA\\u52A8\\u5316\\u8FD0\\u884C\\u540E\\u7ED3\\u679C\\u81EA\\u8D1F\\u3002\\n\\n**\\u914D\\u7F6E\\u4F4D\\u7F6E**\\uFF1A\\n- `~/.claude/settings.json` - \\u7528\\u6237\\u8BBE\\u7F6E\\n- `.claude/settings.json` - \\u9879\\u76EE\\u8BBE\\u7F6E\\n\\n### 4.2 Hook \\u4E2D\\u7684\\u53D8\\u91CF\\n\\n- `$CLAUDE_FILE_PATHS` - \\u6B63\\u5728\\u4FEE\\u6539\\u7684\\u6587\\u4EF6\\n- `$CLAUDE_TOOL_INPUT` - \\u5B8C\\u6574\\u5DE5\\u5177\\u53C2\\u6570\\u7684 JSON \\u683C\\u5F0F\\n- `$CLAUDE_NOTIFICATION` - \\u901A\\u77E5\\u6D88\\u606F\\u5185\\u5BB9\\n\\n### 4.3 PreToolUse Hook\\n\\n**\\u7528\\u9014**\\uFF1A\\u5728 Claude \\u6267\\u884C\\u4EFB\\u4F55\\u64CD\\u4F5C\\u4E4B\\u524D\\u8FD0\\u884C\\n\\n```bash\\n[[hooks]]\\nevent = \"PreToolUse\"\\n[hooks.matcher]\\ntool_name = \"edit_file\"\\nfile_paths = [\"src/production/**/*\"]\\ncommand = \"echo \\'WARNING: Attempting to modify production files!\\' && exit 2\"\\n```\\n\\n### 4.4 PostToolUse Hook\\n\\n**\\u7528\\u9014**\\uFF1A\\u5728\\u5DE5\\u5177\\u4F7F\\u7528\\u540E\\u6267\\u884C\\u6E05\\u7406\\u6216\\u683C\\u5F0F\\u5316\\n\\n```bash\\n[[hooks]]\\nevent = \"PostToolUse\"\\n[hooks.matcher]\\ntool_name = \"edit_file\"\\nfile_paths = [\"src/**/*.ts\"]\\ncommand = \"npx prettier --write $CLAUDE_FILE_PATHS\"\\n```\\n\\n### 4.5 \\u9AD8\\u7EA7 Hook \\u793A\\u4F8B\\n\\n**\\u81EA\\u52A8\\u6D4B\\u8BD5\\u8FD0\\u884C**\\uFF1A\\n\\n```bash\\n[[hooks]]\\nevent = \"PostToolUse\"\\n[hooks.matcher]\\ntool_name = \"edit_file\"\\nfile_paths = [\"src/**/*.test.ts\", \"src/**/*.spec.ts\"]\\ncommand = \"npm test -- --testPathPattern=$CLAUDE_FILE_PATHS\"\\n```\\n\\n**\\u4EE3\\u7801\\u8D28\\u91CF\\u68C0\\u67E5**\\uFF1A\\n\\n```bash\\n[[hooks]]\\nevent = \"PreToolUse\"\\n[hooks.matcher]\\ntool_name = \"edit_file\"\\ncommand = \"\"\"\\necho \"Running pre-edit checks...\"\\nnpm run lint -- $CLAUDE_FILE_PATHS\\nnpm run type-check\\n\"\"\"\\n```\\n\\n## 5. CI/CD \\u96C6\\u6210\\n\\n### 5.1 GitHub Actions \\u96C6\\u6210\\n\\n```yaml\\nname: Claude Code Review\\non:\\n  pull_request:\\n    types: [opened, synchronize]\\n\\njobs:\\n  claude-review:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v3\\n      \\n      - name: Setup Claude Code\\n        run: |\\n          npm install -g @anthropic/claude-code\\n          \\n      - name: Run Claude Code Review\\n        run: |\\n          claude -p \"\\n          \\u5BF9\\u8FD9\\u4E2A PR \\u8FDB\\u884C\\u4EE3\\u7801\\u5BA1\\u67E5\\uFF1A\\n          1. \\u68C0\\u67E5\\u4EE3\\u7801\\u8D28\\u91CF\\n          2. \\u8BC6\\u522B\\u6F5C\\u5728\\u95EE\\u9898\\n          3. \\u63D0\\u4F9B\\u6539\\u8FDB\\u5EFA\\u8BAE\\n          4. \\u9A8C\\u8BC1\\u6D4B\\u8BD5\\u8986\\u76D6\\n          \" --allowedTools Read,Bash\\n        env:\\n          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}\\n```\\n\\n### 5.2 \\u81EA\\u52A8\\u5316\\u90E8\\u7F72\\u68C0\\u67E5\\n\\n```bash\\n#!/bin/bash\\n# deploy-check.sh\\n\\nclaude -p \"\\n\\u6267\\u884C\\u90E8\\u7F72\\u524D\\u68C0\\u67E5\\uFF1A\\n1. \\u9A8C\\u8BC1\\u6240\\u6709\\u6D4B\\u8BD5\\u901A\\u8FC7\\n2. \\u68C0\\u67E5\\u6784\\u5EFA\\u662F\\u5426\\u6210\\u529F\\n3. \\u9A8C\\u8BC1\\u73AF\\u5883\\u914D\\u7F6E\\n4. \\u68C0\\u67E5\\u6570\\u636E\\u5E93\\u8FC1\\u79FB\\n5. \\u786E\\u8BA4\\u4F9D\\u8D56\\u7248\\u672C\\u517C\\u5BB9\\u6027\\n6. \\u751F\\u6210\\u90E8\\u7F72\\u62A5\\u544A\\n\" --allowedTools Bash,Read,Write\\n```\\n\\n## 6. \\u6279\\u5904\\u7406\\u4EFB\\u52A1\\n\\n### 6.1 \\u4EE3\\u7801\\u8FC1\\u79FB\\n\\n```bash\\n#!/bin/bash\\n# migrate-code.sh\\n\\nclaude -p \"\\n\\u6267\\u884C\\u4EE3\\u7801\\u8FC1\\u79FB\\u4EFB\\u52A1\\uFF1A\\n1. \\u5C06\\u6240\\u6709 JavaScript \\u6587\\u4EF6\\u8F6C\\u6362\\u4E3A TypeScript\\n2. \\u6DFB\\u52A0\\u5FC5\\u8981\\u7684\\u7C7B\\u578B\\u5B9A\\u4E49\\n3. \\u66F4\\u65B0\\u5BFC\\u5165\\u8BED\\u53E5\\n4. \\u4FEE\\u590D\\u7C7B\\u578B\\u9519\\u8BEF\\n5. \\u8FD0\\u884C\\u6D4B\\u8BD5\\u786E\\u4FDD\\u529F\\u80FD\\u6B63\\u5E38\\n\" --allowedTools Read,Write,Edit,Bash\\n```\\n\\n### 6.2 \\u6587\\u6863\\u66F4\\u65B0\\n\\n```bash\\n#!/bin/bash\\n# update-docs.sh\\n\\nclaude -p \"\\n\\u6279\\u91CF\\u66F4\\u65B0\\u9879\\u76EE\\u6587\\u6863\\uFF1A\\n1. \\u626B\\u63CF\\u6240\\u6709\\u4EE3\\u7801\\u53D8\\u66F4\\n2. \\u8BC6\\u522B\\u9700\\u8981\\u66F4\\u65B0\\u7684\\u6587\\u6863\\n3. \\u751F\\u6210\\u65B0\\u7684 API \\u6587\\u6863\\n4. \\u66F4\\u65B0\\u4F7F\\u7528\\u793A\\u4F8B\\n5. \\u68C0\\u67E5\\u6587\\u6863\\u94FE\\u63A5\\u6709\\u6548\\u6027\\n\" --allowedTools Read,Write,Glob,WebFetch\\n```\\n\\n## 7. \\u6700\\u4F73\\u5B9E\\u8DF5\\n\\n### 7.1 \\u5B89\\u5168\\u8003\\u8651\\n\\n\\u26A0\\uFE0F **\\u5B89\\u5168\\u63D0\\u9192**\\uFF1A\\n- \\u5728\\u81EA\\u52A8\\u5316\\u73AF\\u5883\\u4E2D\\u4F7F\\u7528\\u65F6\\uFF0C\\u6CE8\\u610F API \\u5BC6\\u94A5\\u7684\\u5B89\\u5168\\u7BA1\\u7406\\n- \\u9650\\u5236\\u81EA\\u52A8\\u5316\\u811A\\u672C\\u7684\\u6743\\u9650\\u8303\\u56F4\\n- \\u5B9A\\u671F\\u5BA1\\u67E5\\u81EA\\u52A8\\u5316\\u811A\\u672C\\u7684\\u6267\\u884C\\u65E5\\u5FD7\\n- \\u4E3A\\u654F\\u611F\\u64CD\\u4F5C\\u6DFB\\u52A0\\u4EBA\\u5DE5\\u786E\\u8BA4\\u6B65\\u9AA4\\n\\n### 7.2 \\u6027\\u80FD\\u4F18\\u5316\\n\\n- **\\u5E76\\u884C\\u5904\\u7406**\\uFF1A\\u5BF9\\u72EC\\u7ACB\\u4EFB\\u52A1\\u4F7F\\u7528\\u5E76\\u884C\\u6267\\u884C\\n- **\\u7F13\\u5B58\\u673A\\u5236**\\uFF1A\\u7F13\\u5B58\\u5E38\\u7528\\u7684\\u5206\\u6790\\u7ED3\\u679C\\n- **\\u589E\\u91CF\\u5904\\u7406**\\uFF1A\\u53EA\\u5904\\u7406\\u53D8\\u66F4\\u7684\\u6587\\u4EF6\\n- **\\u8D44\\u6E90\\u9650\\u5236**\\uFF1A\\u8BBE\\u7F6E\\u5408\\u7406\\u7684\\u8D44\\u6E90\\u4F7F\\u7528\\u9650\\u5236\\n\\n### 7.3 \\u76D1\\u63A7\\u548C\\u65E5\\u5FD7\\n\\n- **\\u6267\\u884C\\u65E5\\u5FD7**\\uFF1A\\u8BB0\\u5F55\\u6240\\u6709\\u81EA\\u52A8\\u5316\\u64CD\\u4F5C\\u7684\\u8BE6\\u7EC6\\u65E5\\u5FD7\\n- **\\u9519\\u8BEF\\u5904\\u7406**\\uFF1A\\u5EFA\\u7ACB\\u5B8C\\u5584\\u7684\\u9519\\u8BEF\\u5904\\u7406\\u548C\\u6062\\u590D\\u673A\\u5236\\n- **\\u6027\\u80FD\\u76D1\\u63A7**\\uFF1A\\u76D1\\u63A7\\u81EA\\u52A8\\u5316\\u4EFB\\u52A1\\u7684\\u6267\\u884C\\u65F6\\u95F4\\u548C\\u8D44\\u6E90\\u4F7F\\u7528\\n- **\\u544A\\u8B66\\u673A\\u5236**\\uFF1A\\u4E3A\\u5173\\u952E\\u5931\\u8D25\\u8BBE\\u7F6E\\u544A\\u8B66\\u901A\\u77E5\\n\\n\\u901A\\u8FC7\\u5408\\u7406\\u7684\\u81EA\\u52A8\\u5316\\u914D\\u7F6E\\uFF0CClaude Code \\u53EF\\u4EE5\\u6210\\u4E3A\\u4F60\\u7684\\u5F00\\u53D1\\u751F\\u4EA7\\u529B\\u500D\\u589E\\u5668\\uFF0C\\u5927\\u5927\\u63D0\\u5347\\u5F00\\u53D1\\u6548\\u7387\\u548C\\u4EE3\\u7801\\u8D28\\u91CF\\u3002\\n';\n    }\n  });\n\n  // src/client/bestPractices/content/concurrent-claude.md\n  var require_concurrent_claude = __commonJS({\n    \"src/client/bestPractices/content/concurrent-claude.md\"(exports, module) {\n      module.exports = '# \\u591A Claude \\u5E76\\u53D1\\u5E72\\u6D3B - \\u6784\\u5EFA\\u9AD8\\u6548\\u7684 AI \\u534F\\u4F5C\\u5F00\\u53D1\\u56E2\\u961F\\n\\n\\u9AD8\\u7EA7\\u7528\\u6CD5\\uFF1A\\u5982\\u4F55\\u540C\\u65F6\\u4F7F\\u7528\\u591A\\u4E2A Claude Code \\u5B9E\\u4F8B\\u6765\\u5904\\u7406\\u590D\\u6742\\u9879\\u76EE\\u548C\\u5927\\u89C4\\u6A21\\u4EFB\\u52A1\\u3002\\n\\n## 1. \\u591A\\u5B9E\\u4F8B\\u67B6\\u6784\\u8BBE\\u8BA1\\n\\n### 1.1 \\u67B6\\u6784\\u539F\\u5219\\n\\n**\\u8BBE\\u8BA1\\u8003\\u8651**\\uFF1A\\n\\n- **\\u4EFB\\u52A1\\u9694\\u79BB**\\uFF1A\\u4E0D\\u540C\\u5B9E\\u4F8B\\u5904\\u7406\\u4E0D\\u540C\\u7C7B\\u578B\\u7684\\u4EFB\\u52A1\\n- **\\u8D44\\u6E90\\u5206\\u914D**\\uFF1A\\u5408\\u7406\\u5206\\u914D\\u8BA1\\u7B97\\u8D44\\u6E90\\u548C API \\u914D\\u989D\\n- **\\u72B6\\u6001\\u540C\\u6B65**\\uFF1A\\u786E\\u4FDD\\u5B9E\\u4F8B\\u95F4\\u7684\\u72B6\\u6001\\u4E00\\u81F4\\u6027\\n- **\\u9519\\u8BEF\\u9694\\u79BB**\\uFF1A\\u5355\\u4E2A\\u5B9E\\u4F8B\\u7684\\u9519\\u8BEF\\u4E0D\\u5F71\\u54CD\\u5176\\u4ED6\\u5B9E\\u4F8B\\n\\n### 1.2 \\u5178\\u578B\\u67B6\\u6784\\u6A21\\u5F0F\\n\\n```mermaid\\ngraph TB\\n    A[\\u4E3B\\u63A7\\u5236\\u5668] --> B[\\u524D\\u7AEF\\u5F00\\u53D1\\u5B9E\\u4F8B]\\n    A --> C[\\u540E\\u7AEF\\u5F00\\u53D1\\u5B9E\\u4F8B]\\n    A --> D[\\u6D4B\\u8BD5\\u5B9E\\u4F8B]\\n    A --> E[\\u6587\\u6863\\u5B9E\\u4F8B]\\n    A --> F[\\u4EE3\\u7801\\u5BA1\\u67E5\\u5B9E\\u4F8B]\\n    \\n    B --> G[Git \\u4ED3\\u5E93]\\n    C --> G\\n    D --> G\\n    E --> G\\n    F --> G\\n    \\n    G --> H[CI/CD \\u6D41\\u6C34\\u7EBF]\\n```\\n\\n## 2. \\u4EFB\\u52A1\\u5206\\u914D\\u7B56\\u7565\\n\\n### 2.1 \\u6309\\u529F\\u80FD\\u6A21\\u5757\\u5206\\u914D\\n\\n**\\u793A\\u4F8B\\u914D\\u7F6E**\\uFF1A\\n\\n```bash\\n# \\u5B9E\\u4F8B 1\\uFF1A\\u524D\\u7AEF\\u5F00\\u53D1\\nclaude --workspace frontend --focus \"src/components,src/pages,src/styles\"\\n\\n# \\u5B9E\\u4F8B 2\\uFF1A\\u540E\\u7AEF API\\nclaude --workspace backend --focus \"src/api,src/services,src/models\"\\n\\n# \\u5B9E\\u4F8B 3\\uFF1A\\u6570\\u636E\\u5E93\\u76F8\\u5173\\nclaude --workspace database --focus \"migrations,seeds,schemas\"\\n\\n# \\u5B9E\\u4F8B 4\\uFF1A\\u6D4B\\u8BD5\\u548C\\u8D28\\u91CF\\u4FDD\\u8BC1\\nclaude --workspace testing --focus \"tests,cypress,jest.config\"\\n```\\n\\n### 2.2 \\u6309\\u5F00\\u53D1\\u9636\\u6BB5\\u5206\\u914D\\n\\n**\\u6D41\\u6C34\\u7EBF\\u5F0F\\u5206\\u5DE5**\\uFF1A\\n\\n1. **\\u9700\\u6C42\\u5206\\u6790\\u5B9E\\u4F8B**\\uFF1A\\u7406\\u89E3\\u9700\\u6C42\\uFF0C\\u5236\\u5B9A\\u6280\\u672F\\u65B9\\u6848\\n\\n2. **\\u5F00\\u53D1\\u5B9E\\u4F8B**\\uFF1A\\u5B9E\\u73B0\\u6838\\u5FC3\\u529F\\u80FD\\n\\n3. **\\u6D4B\\u8BD5\\u5B9E\\u4F8B**\\uFF1A\\u7F16\\u5199\\u548C\\u6267\\u884C\\u6D4B\\u8BD5\\n\\n4. **\\u4F18\\u5316\\u5B9E\\u4F8B**\\uFF1A\\u6027\\u80FD\\u4F18\\u5316\\u548C\\u4EE3\\u7801\\u91CD\\u6784\\n\\n5. **\\u6587\\u6863\\u5B9E\\u4F8B**\\uFF1A\\u751F\\u6210\\u548C\\u7EF4\\u62A4\\u6587\\u6863\\n\\n### 2.3 \\u6309\\u6280\\u672F\\u6808\\u5206\\u914D\\n\\n```bash\\n# React/TypeScript \\u4E13\\u5BB6\\nclaude --profile react-expert --workspace frontend\\n\\n# Node.js/Express \\u4E13\\u5BB6  \\nclaude --profile nodejs-expert --workspace backend\\n\\n# DevOps \\u4E13\\u5BB6\\nclaude --profile devops-expert --workspace infrastructure\\n\\n# \\u6570\\u636E\\u5E93\\u4E13\\u5BB6\\nclaude --profile db-expert --workspace database\\n```\\n\\n## 3. \\u5E76\\u53D1\\u63A7\\u5236\\u548C\\u540C\\u6B65\\n\\n### 3.1 \\u6587\\u4EF6\\u9501\\u5B9A\\u673A\\u5236\\n\\n**\\u907F\\u514D\\u51B2\\u7A81\\u7684\\u7B56\\u7565**\\uFF1A\\n\\n```bash\\n# \\u4F7F\\u7528\\u6587\\u4EF6\\u9501\\u5B9A\\nflock -n /tmp/claude-file.lock claude --edit src/shared/utils.ts\\n\\n# \\u68C0\\u67E5\\u6587\\u4EF6\\u662F\\u5426\\u88AB\\u5176\\u4ED6\\u5B9E\\u4F8B\\u4F7F\\u7528\\nif [ -f \"/tmp/claude-${filename}.lock\" ]; then\\n    echo \"File is being edited by another instance\"\\n    exit 1\\nfi\\n```\\n\\n### 3.2 Git \\u5206\\u652F\\u7B56\\u7565\\n\\n**\\u5206\\u652F\\u7BA1\\u7406**\\uFF1A\\n\\n```bash\\n# \\u6BCF\\u4E2A\\u5B9E\\u4F8B\\u4F7F\\u7528\\u72EC\\u7ACB\\u5206\\u652F\\ngit checkout -b feature/frontend-${INSTANCE_ID}\\ngit checkout -b feature/backend-${INSTANCE_ID}\\ngit checkout -b feature/testing-${INSTANCE_ID}\\n\\n# \\u5B9A\\u671F\\u540C\\u6B65\\u4E3B\\u5206\\u652F\\ngit fetch origin main\\ngit rebase origin/main\\n```\\n\\n### 3.3 \\u72B6\\u6001\\u540C\\u6B65\\u673A\\u5236\\n\\n**\\u5171\\u4EAB\\u72B6\\u6001\\u7BA1\\u7406**\\uFF1A\\n\\n```json\\n{\\n  \"project_state\": {\\n    \"current_sprint\": \"sprint-23\",\\n    \"active_features\": [\"user-auth\", \"payment-system\"],\\n    \"blocked_files\": [\"src/config/database.ts\"],\\n    \"instance_status\": {\\n      \"frontend\": \"active\",\\n      \"backend\": \"waiting\",\\n      \"testing\": \"active\"\\n    }\\n  }\\n}\\n```\\n\\n## 4. \\u901A\\u4FE1\\u548C\\u534F\\u8C03\\n\\n### 4.1 \\u5B9E\\u4F8B\\u95F4\\u901A\\u4FE1\\n\\n**\\u6D88\\u606F\\u961F\\u5217\\u7CFB\\u7EDF**\\uFF1A\\n\\n```bash\\n# \\u53D1\\u9001\\u6D88\\u606F\\u7ED9\\u5176\\u4ED6\\u5B9E\\u4F8B\\nclaude-msg send --to backend --message \"Frontend API \\u63A5\\u53E3\\u5DF2\\u66F4\\u65B0\"\\n\\n# \\u63A5\\u6536\\u6D88\\u606F\\nclaude-msg receive --from frontend --callback \"update-api-client\"\\n```\\n\\n### 4.2 \\u4EFB\\u52A1\\u4F9D\\u8D56\\u7BA1\\u7406\\n\\n**\\u4F9D\\u8D56\\u5173\\u7CFB\\u5B9A\\u4E49**\\uFF1A\\n\\n```yaml\\ntasks:\\n  - name: \"implement-user-model\"\\n    instance: \"backend\"\\n    dependencies: []\\n    \\n  - name: \"create-user-api\"\\n    instance: \"backend\"\\n    dependencies: [\"implement-user-model\"]\\n    \\n  - name: \"build-user-component\"\\n    instance: \"frontend\"\\n    dependencies: [\"create-user-api\"]\\n    \\n  - name: \"write-user-tests\"\\n    instance: \"testing\"\\n    dependencies: [\"build-user-component\"]\\n```\\n\\n### 4.3 \\u8FDB\\u5EA6\\u540C\\u6B65\\n\\n**\\u5B9E\\u65F6\\u8FDB\\u5EA6\\u8DDF\\u8E2A**\\uFF1A\\n\\n```bash\\n# \\u66F4\\u65B0\\u4EFB\\u52A1\\u72B6\\u6001\\nclaude-status update --task \"implement-auth\" --status \"completed\"\\n\\n# \\u67E5\\u770B\\u6574\\u4F53\\u8FDB\\u5EA6\\nclaude-status dashboard\\n```\\n\\n## 5. \\u6027\\u80FD\\u76D1\\u63A7\\u548C\\u4F18\\u5316\\n\\n### 5.1 \\u8D44\\u6E90\\u4F7F\\u7528\\u76D1\\u63A7\\n\\n**\\u76D1\\u63A7\\u6307\\u6807**\\uFF1A\\n\\n- **API \\u8C03\\u7528\\u9891\\u7387**\\uFF1A\\u907F\\u514D\\u8D85\\u51FA\\u901F\\u7387\\u9650\\u5236\\n- **\\u5185\\u5B58\\u4F7F\\u7528\\u60C5\\u51B5**\\uFF1A\\u9632\\u6B62\\u5185\\u5B58\\u6CC4\\u6F0F\\n- **\\u6587\\u4EF6 I/O \\u64CD\\u4F5C**\\uFF1A\\u4F18\\u5316\\u6587\\u4EF6\\u8BBF\\u95EE\\u6A21\\u5F0F\\n- **\\u7F51\\u7EDC\\u5E26\\u5BBD\\u4F7F\\u7528**\\uFF1A\\u5408\\u7406\\u5206\\u914D\\u7F51\\u7EDC\\u8D44\\u6E90\\n\\n### 5.2 \\u8D1F\\u8F7D\\u5747\\u8861\\n\\n**\\u52A8\\u6001\\u8D1F\\u8F7D\\u5206\\u914D**\\uFF1A\\n\\n```bash\\n#!/bin/bash\\n# load-balancer.sh\\n\\n# \\u68C0\\u67E5\\u5B9E\\u4F8B\\u8D1F\\u8F7D\\ncheck_instance_load() {\\n    local instance=$1\\n    # \\u8FD4\\u56DE\\u8D1F\\u8F7D\\u5206\\u6570 (0-100)\\n    claude-monitor --instance $instance --metric load\\n}\\n\\n# \\u9009\\u62E9\\u8D1F\\u8F7D\\u6700\\u4F4E\\u7684\\u5B9E\\u4F8B\\nselect_best_instance() {\\n    local min_load=100\\n    local best_instance=\"\"\\n    \\n    for instance in frontend backend testing; do\\n        load=$(check_instance_load $instance)\\n        if [ $load -lt $min_load ]; then\\n            min_load=$load\\n            best_instance=$instance\\n        fi\\n    done\\n    \\n    echo $best_instance\\n}\\n```\\n\\n### 5.3 \\u6027\\u80FD\\u4F18\\u5316\\u7B56\\u7565\\n\\n**\\u4F18\\u5316\\u6280\\u5DE7**\\uFF1A\\n\\n1. **\\u4EFB\\u52A1\\u6279\\u5904\\u7406**\\uFF1A\\u5C06\\u76F8\\u4F3C\\u4EFB\\u52A1\\u5408\\u5E76\\u5904\\u7406\\n2. **\\u7F13\\u5B58\\u5171\\u4EAB**\\uFF1A\\u5B9E\\u4F8B\\u95F4\\u5171\\u4EAB\\u8BA1\\u7B97\\u7ED3\\u679C\\n3. **\\u9884\\u52A0\\u8F7D\\u673A\\u5236**\\uFF1A\\u9884\\u5148\\u52A0\\u8F7D\\u5E38\\u7528\\u8D44\\u6E90\\n4. **\\u667A\\u80FD\\u8C03\\u5EA6**\\uFF1A\\u6839\\u636E\\u4EFB\\u52A1\\u7279\\u6027\\u9009\\u62E9\\u6700\\u9002\\u5408\\u7684\\u5B9E\\u4F8B\\n\\n## 6. \\u9519\\u8BEF\\u5904\\u7406\\u548C\\u6062\\u590D\\n\\n### 6.1 \\u6545\\u969C\\u68C0\\u6D4B\\n\\n**\\u5065\\u5EB7\\u68C0\\u67E5\\u673A\\u5236**\\uFF1A\\n\\n```bash\\n#!/bin/bash\\n# health-check.sh\\n\\ncheck_instance_health() {\\n    local instance=$1\\n    local timeout=30\\n    \\n    # \\u53D1\\u9001\\u5065\\u5EB7\\u68C0\\u67E5\\u8BF7\\u6C42\\n    if timeout $timeout claude-ping --instance $instance; then\\n        echo \"Instance $instance is healthy\"\\n        return 0\\n    else\\n        echo \"Instance $instance is unhealthy\"\\n        return 1\\n    fi\\n}\\n\\n# \\u68C0\\u67E5\\u6240\\u6709\\u5B9E\\u4F8B\\nfor instance in frontend backend testing documentation; do\\n    if ! check_instance_health $instance; then\\n        # \\u5C1D\\u8BD5\\u91CD\\u542F\\u5B9E\\u4F8B\\n        claude-restart --instance $instance\\n    fi\\ndone\\n```\\n\\n### 6.2 \\u81EA\\u52A8\\u6062\\u590D\\n\\n**\\u6062\\u590D\\u7B56\\u7565**\\uFF1A\\n\\n1. **\\u5B9E\\u4F8B\\u91CD\\u542F**\\uFF1A\\u81EA\\u52A8\\u91CD\\u542F\\u5931\\u8D25\\u7684\\u5B9E\\u4F8B\\n2. **\\u4EFB\\u52A1\\u91CD\\u65B0\\u5206\\u914D**\\uFF1A\\u5C06\\u5931\\u8D25\\u5B9E\\u4F8B\\u7684\\u4EFB\\u52A1\\u5206\\u914D\\u7ED9\\u5176\\u4ED6\\u5B9E\\u4F8B\\n3. **\\u72B6\\u6001\\u56DE\\u6EDA**\\uFF1A\\u56DE\\u6EDA\\u5230\\u6700\\u8FD1\\u7684\\u7A33\\u5B9A\\u72B6\\u6001\\n4. **\\u964D\\u7EA7\\u670D\\u52A1**\\uFF1A\\u5728\\u90E8\\u5206\\u5B9E\\u4F8B\\u5931\\u8D25\\u65F6\\u63D0\\u4F9B\\u57FA\\u7840\\u670D\\u52A1\\n\\n### 6.3 \\u6570\\u636E\\u4E00\\u81F4\\u6027\\u4FDD\\u8BC1\\n\\n**\\u4E00\\u81F4\\u6027\\u673A\\u5236**\\uFF1A\\n\\n```bash\\n# \\u521B\\u5EFA\\u68C0\\u67E5\\u70B9\\nclaude-checkpoint create --name \"before-major-change\"\\n\\n# \\u9A8C\\u8BC1\\u6570\\u636E\\u4E00\\u81F4\\u6027\\nclaude-verify --check-consistency --all-instances\\n\\n# \\u5982\\u679C\\u53D1\\u73B0\\u4E0D\\u4E00\\u81F4\\uFF0C\\u56DE\\u6EDA\\u5230\\u68C0\\u67E5\\u70B9\\nclaude-rollback --checkpoint \"before-major-change\"\\n```\\n\\n## 7. \\u5B9E\\u9645\\u5E94\\u7528\\u573A\\u666F\\n\\n### 7.1 \\u5927\\u578B\\u9879\\u76EE\\u5F00\\u53D1\\n\\n**\\u573A\\u666F\\u63CF\\u8FF0**\\uFF1A\\u5F00\\u53D1\\u4E00\\u4E2A\\u5305\\u542B\\u524D\\u7AEF\\u3001\\u540E\\u7AEF\\u3001\\u79FB\\u52A8\\u7AEF\\u7684\\u5B8C\\u6574\\u5E94\\u7528\\n\\n**\\u5B9E\\u4F8B\\u914D\\u7F6E**\\uFF1A\\n- **\\u524D\\u7AEF\\u5B9E\\u4F8B**\\uFF1AReact/Vue.js \\u5F00\\u53D1\\n- **\\u540E\\u7AEF\\u5B9E\\u4F8B**\\uFF1AAPI \\u548C\\u4E1A\\u52A1\\u903B\\u8F91\\n- **\\u79FB\\u52A8\\u7AEF\\u5B9E\\u4F8B**\\uFF1AReact Native/Flutter\\n- **\\u6D4B\\u8BD5\\u5B9E\\u4F8B**\\uFF1A\\u81EA\\u52A8\\u5316\\u6D4B\\u8BD5\\n- **DevOps \\u5B9E\\u4F8B**\\uFF1A\\u90E8\\u7F72\\u548C\\u8FD0\\u7EF4\\n\\n### 7.2 \\u4EE3\\u7801\\u8FC1\\u79FB\\u9879\\u76EE\\n\\n**\\u573A\\u666F\\u63CF\\u8FF0**\\uFF1A\\u5C06\\u5927\\u578B\\u9057\\u7559\\u7CFB\\u7EDF\\u8FC1\\u79FB\\u5230\\u65B0\\u6280\\u672F\\u6808\\n\\n**\\u5E76\\u53D1\\u7B56\\u7565**\\uFF1A\\n- **\\u5206\\u6790\\u5B9E\\u4F8B**\\uFF1A\\u5206\\u6790\\u73B0\\u6709\\u4EE3\\u7801\\u7ED3\\u6784\\n- **\\u8F6C\\u6362\\u5B9E\\u4F8B**\\uFF1A\\u6267\\u884C\\u4EE3\\u7801\\u8F6C\\u6362\\n- **\\u9A8C\\u8BC1\\u5B9E\\u4F8B**\\uFF1A\\u9A8C\\u8BC1\\u8F6C\\u6362\\u7ED3\\u679C\\n- **\\u4F18\\u5316\\u5B9E\\u4F8B**\\uFF1A\\u4F18\\u5316\\u8F6C\\u6362\\u540E\\u7684\\u4EE3\\u7801\\n\\n### 7.3 \\u591A\\u8BED\\u8A00\\u9879\\u76EE\\n\\n**\\u573A\\u666F\\u63CF\\u8FF0**\\uFF1A\\u7EF4\\u62A4\\u652F\\u6301\\u591A\\u79CD\\u7F16\\u7A0B\\u8BED\\u8A00\\u7684\\u9879\\u76EE\\n\\n**\\u4E13\\u4E1A\\u5316\\u5206\\u5DE5**\\uFF1A\\n- **Python \\u4E13\\u5BB6\\u5B9E\\u4F8B**\\n- **JavaScript \\u4E13\\u5BB6\\u5B9E\\u4F8B**\\n- **Java \\u4E13\\u5BB6\\u5B9E\\u4F8B**\\n- **Go \\u4E13\\u5BB6\\u5B9E\\u4F8B**\\n\\n## 8. \\u6700\\u4F73\\u5B9E\\u8DF5\\u603B\\u7ED3\\n\\n### 8.1 \\u8BBE\\u8BA1\\u539F\\u5219\\n\\n- **\\u660E\\u786E\\u5206\\u5DE5**\\uFF1A\\u6BCF\\u4E2A\\u5B9E\\u4F8B\\u6709\\u6E05\\u6670\\u7684\\u804C\\u8D23\\u8FB9\\u754C\\n- **\\u677E\\u8026\\u5408**\\uFF1A\\u5B9E\\u4F8B\\u95F4\\u4F9D\\u8D56\\u6700\\u5C0F\\u5316\\n- **\\u9AD8\\u5185\\u805A**\\uFF1A\\u76F8\\u5173\\u529F\\u80FD\\u96C6\\u4E2D\\u5728\\u540C\\u4E00\\u5B9E\\u4F8B\\n- **\\u53EF\\u6269\\u5C55**\\uFF1A\\u652F\\u6301\\u52A8\\u6001\\u6DFB\\u52A0\\u548C\\u79FB\\u9664\\u5B9E\\u4F8B\\n\\n### 8.2 \\u7BA1\\u7406\\u5EFA\\u8BAE\\n\\n- **\\u7EDF\\u4E00\\u914D\\u7F6E**\\uFF1A\\u4F7F\\u7528\\u914D\\u7F6E\\u6587\\u4EF6\\u7BA1\\u7406\\u6240\\u6709\\u5B9E\\u4F8B\\n- **\\u7248\\u672C\\u63A7\\u5236**\\uFF1A\\u5BF9\\u5B9E\\u4F8B\\u914D\\u7F6E\\u8FDB\\u884C\\u7248\\u672C\\u63A7\\u5236\\n- **\\u76D1\\u63A7\\u544A\\u8B66**\\uFF1A\\u5EFA\\u7ACB\\u5B8C\\u5584\\u7684\\u76D1\\u63A7\\u548C\\u544A\\u8B66\\u673A\\u5236\\n- **\\u6587\\u6863\\u7EF4\\u62A4**\\uFF1A\\u8BE6\\u7EC6\\u8BB0\\u5F55\\u67B6\\u6784\\u548C\\u64CD\\u4F5C\\u6D41\\u7A0B\\n\\n### 8.3 \\u6027\\u80FD\\u6307\\u6807\\n\\n\\u{1F4A1} **\\u4E13\\u5BB6\\u7EA7\\u6280\\u5DE7**\\uFF1A\\u5408\\u7406\\u7684\\u591A\\u5B9E\\u4F8B\\u4F7F\\u7528\\u53EF\\u4EE5\\u5C06\\u5F00\\u53D1\\u6548\\u7387\\u63D0\\u5347 3-5 \\u500D\\uFF01\\n\\n**\\u5173\\u952E\\u6307\\u6807**\\uFF1A\\n- **\\u4EFB\\u52A1\\u5B8C\\u6210\\u901F\\u5EA6**\\uFF1A\\u76F8\\u6BD4\\u5355\\u5B9E\\u4F8B\\u7684\\u63D0\\u5347\\u500D\\u6570\\n- **\\u8D44\\u6E90\\u5229\\u7528\\u7387**\\uFF1ACPU\\u3001\\u5185\\u5B58\\u3001\\u7F51\\u7EDC\\u7684\\u4F7F\\u7528\\u6548\\u7387\\n- **\\u9519\\u8BEF\\u7387**\\uFF1A\\u5B9E\\u4F8B\\u95F4\\u534F\\u4F5C\\u7684\\u9519\\u8BEF\\u9891\\u7387\\n- **\\u4EE3\\u7801\\u8D28\\u91CF**\\uFF1A\\u591A\\u5B9E\\u4F8B\\u534F\\u4F5C\\u4EA7\\u51FA\\u7684\\u4EE3\\u7801\\u8D28\\u91CF\\n\\n\\u901A\\u8FC7\\u5408\\u7406\\u7684\\u591A\\u5B9E\\u4F8B\\u67B6\\u6784\\u8BBE\\u8BA1\\u548C\\u7BA1\\u7406\\uFF0C\\u53EF\\u4EE5\\u6784\\u5EFA\\u4E00\\u4E2A\\u9AD8\\u6548\\u7684 AI \\u534F\\u4F5C\\u5F00\\u53D1\\u56E2\\u961F\\uFF0C\\u663E\\u8457\\u63D0\\u5347\\u5927\\u578B\\u9879\\u76EE\\u7684\\u5F00\\u53D1\\u6548\\u7387\\u548C\\u8D28\\u91CF\\u3002\\n';\n    }\n  });\n\n  // src/client/bestPractices/data/categoryConfig.ts\n  var categoryIcons = {\n    \"workflow\": \"\\u{1F504}\",\n    \"configuration\": \"\\u2699\\uFE0F\",\n    \"mcp-commands\": \"\\u{1F6E0}\\uFE0F\",\n    \"context\": \"\\u{1F4DD}\",\n    \"automation\": \"\\u{1F916}\",\n    \"concurrency\": \"\\u{1F465}\"\n  };\n  var difficultyColors = {\n    \"beginner\": \"#10b981\",\n    \"intermediate\": \"#f59e0b\",\n    \"advanced\": \"#ef4444\",\n    \"expert\": \"#8b5cf6\"\n  };\n  var difficultyLabels = {\n    \"beginner\": \"\\u521D\\u7EA7\",\n    \"intermediate\": \"\\u4E2D\\u7EA7\",\n    \"advanced\": \"\\u9AD8\\u7EA7\",\n    \"expert\": \"\\u4E13\\u5BB6\"\n  };\n\n  // src/client/bestPractices/renderers/CardRenderer.ts\n  var CardRenderer = class {\n    renderCards(cards) {\n      return cards.map((card) => this.renderCard(card)).join(\"\");\n    }\n    renderCard(card) {\n      const icon = categoryIcons[card.category] || \"\\u{1F4CB}\";\n      const difficultyColor = difficultyColors[card.difficulty];\n      const difficultyLabel = difficultyLabels[card.difficulty];\n      const sectionsHtml = this.renderSections(card.sections);\n      const tipsHtml = this.renderTips(card.tips);\n      const tagsHtml = this.renderTags(card.tags);\n      return `\n      <div class=\"practice-card overview-card\" data-card-id=\"${card.id}\">\n        <div class=\"overview-card__header\">\n          <div class=\"overview-card__title-section\">\n            <div class=\"overview-card__icon\">${icon}</div>\n            <h3 class=\"overview-card__title\">${card.title}</h3>\n          </div>\n          <div class=\"overview-card__meta\">\n            <span class=\"overview-card__difficulty\" style=\"--difficulty-color: ${difficultyColor}\">\n              ${difficultyLabel}\n            </span>\n            <span class=\"overview-card__read-time\">\\u{1F4D6} ${card.readTime}</span>\n          </div>\n        </div>\n        \n        <div class=\"overview-card__content\">\n          <p class=\"overview-card__description\">${card.description}</p>\n          <div class=\"overview-card__overview\">${card.overview}</div>\n          \n          <div class=\"overview-card__sections\">\n            <h4 class=\"overview-card__sections-title\">\\u4E3B\\u8981\\u5185\\u5BB9\\uFF1A</h4>\n            <ul class=\"overview-card__sections-list\">\n              ${sectionsHtml}\n            </ul>\n          </div>\n\n          ${tipsHtml ? `<div class=\"overview-card__tips\">${tipsHtml}</div>` : \"\"}\n          \n          <div class=\"overview-card__tags\">\n            ${tagsHtml}\n          </div>\n        </div>\n        \n        <div class=\"overview-card__footer\">\n          <button class=\"overview-card__action-btn\" data-card-id=\"${card.id}\">\n            \\u67E5\\u770B\\u8BE6\\u7EC6\\u5185\\u5BB9 \\u2192\n          </button>\n          <div class=\"overview-card__meta-info\">\n            <span class=\"overview-card__version\">v${card.version}</span>\n            <span class=\"overview-card__updated\">\\u66F4\\u65B0\\u4E8E ${card.lastUpdated}</span>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n    renderSections(sections) {\n      return sections.map((section) => `\n      <li class=\"overview-card__section-item\">\n        <span class=\"overview-card__section-title\">${section.title}</span>\n        <span class=\"overview-card__section-content\">${section.content}</span>\n      </li>\n    `).join(\"\");\n    }\n    renderTips(tips) {\n      if (!tips || tips.length === 0)\n        return \"\";\n      return tips.map((tip) => `\n      <div class=\"overview-card__tip overview-card__tip--${tip.type}\">\n        <strong class=\"overview-card__tip-title\">${tip.title}:</strong>\n        <span class=\"overview-card__tip-content\">${tip.content}</span>\n      </div>\n    `).join(\"\");\n    }\n    renderTags(tags) {\n      return tags.map((tag) => `\n      <span class=\"overview-card__tag\">${tag}</span>\n    `).join(\"\");\n    }\n  };\n\n  // src/client/bestPractices/renderers/ArticleRenderer.ts\n  var ArticleRenderer = class {\n    renderArticle(title, content) {\n      return `\n      <div class=\"practice-article\">\n        <div class=\"practice-article__header\">\n          <button class=\"practice-article__back-btn\" onclick=\"showOverviewCards()\">\n            \\u2190 \\u8FD4\\u56DE\\u6982\\u89C8\n          </button>\n        </div>\n        \n        <div class=\"practice-article__content\" id=\"markdown-content-container\">\n          <!-- Markdown \\u5185\\u5BB9\\u5C06\\u5728\\u8FD9\\u91CC\\u6E32\\u67D3 -->\n        </div>\n      </div>\n    `;\n    }\n    renderLoadingState() {\n      return `\n      <div class=\"practice-article\">\n        <div class=\"practice-article__header\">\n          <button class=\"practice-article__back-btn\" onclick=\"showOverviewCards()\">\n            \\u2190 \\u8FD4\\u56DE\\u6982\\u89C8\n          </button>\n        </div>\n        \n        <div class=\"practice-article__content\">\n          <div class=\"article-skeleton\">\n            <div class=\"skeleton-title\"></div>\n            <div class=\"skeleton-line\"></div>\n            <div class=\"skeleton-line\"></div>\n            <div class=\"skeleton-diagram\"></div>\n            <div class=\"skeleton-line\"></div>\n            <div class=\"skeleton-line short\"></div>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n    renderErrorState(error) {\n      return `\n      <div class=\"practice-article\">\n        <div class=\"practice-article__header\">\n          <button class=\"practice-article__back-btn\" onclick=\"showOverviewCards()\">\n            \\u2190 \\u8FD4\\u56DE\\u6982\\u89C8\n          </button>\n          <h2 class=\"practice-article__title\">\\u52A0\\u8F7D\\u5931\\u8D25</h2>\n        </div>\n        \n        <div class=\"practice-article__content\">\n          <div class=\"error-message\">\n            <p>\\u274C \\u65E0\\u6CD5\\u52A0\\u8F7D\\u5185\\u5BB9: ${error}</p>\n            <button onclick=\"location.reload()\" class=\"retry-btn\">\\u91CD\\u8BD5</button>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n  };\n\n  // src/client/bestPractices/services/MarkdownParser.ts\n  var MarkdownParser = class {\n    parse(markdown) {\n      let html = markdown;\n      html = this.escapeHtml(html);\n      html = this.parseHeaders(html);\n      html = this.parseCodeBlocks(html);\n      html = this.parseInlineCode(html);\n      html = this.parseLists(html);\n      html = this.parseParagraphs(html);\n      html = this.parseEmphasis(html);\n      return html;\n    }\n    escapeHtml(text) {\n      const div = document.createElement(\"div\");\n      div.textContent = text;\n      return div.innerHTML;\n    }\n    parseHeaders(html) {\n      return html.replace(/^(#{1,6})\\s+(.+)$/gm, (match, hashes, content) => {\n        const level = hashes.length;\n        return `<h${level} class=\"markdown-h${level}\">${content.trim()}</h${level}>`;\n      });\n    }\n    parseCodeBlocks(html) {\n      return html.replace(/```(\\w+)?\\n([\\s\\S]*?)```/g, (match, lang, code) => {\n        const language = lang || \"text\";\n        return `<pre class=\"code-block\"><code class=\"language-${language}\">${code.trim()}</code></pre>`;\n      });\n    }\n    parseInlineCode(html) {\n      return html.replace(/`([^`]+)`/g, '<code class=\"inline-code\">$1</code>');\n    }\n    parseLists(html) {\n      html = html.replace(/^[\\s]*[-*+]\\s+(.+)$/gm, \"<li>$1</li>\");\n      html = html.replace(/(<li>.*<\\/li>)/s, '<ul class=\"markdown-list\">$1</ul>');\n      html = html.replace(/^[\\s]*\\d+\\.\\s+(.+)$/gm, \"<li>$1</li>\");\n      return html;\n    }\n    parseParagraphs(html) {\n      const lines = html.split(\"\\n\");\n      const result = [];\n      let currentParagraph = [];\n      for (const line of lines) {\n        const trimmedLine = line.trim();\n        if (trimmedLine === \"\") {\n          if (currentParagraph.length > 0) {\n            const paragraphContent = currentParagraph.join(\" \").trim();\n            if (paragraphContent && !this.isHtmlTag(paragraphContent)) {\n              result.push(`<p class=\"markdown-paragraph\">${paragraphContent}</p>`);\n            } else {\n              result.push(paragraphContent);\n            }\n            currentParagraph = [];\n          }\n          result.push(\"\");\n        } else if (this.isHtmlTag(trimmedLine)) {\n          if (currentParagraph.length > 0) {\n            const paragraphContent = currentParagraph.join(\" \").trim();\n            result.push(`<p class=\"markdown-paragraph\">${paragraphContent}</p>`);\n            currentParagraph = [];\n          }\n          result.push(trimmedLine);\n        } else {\n          currentParagraph.push(trimmedLine);\n        }\n      }\n      if (currentParagraph.length > 0) {\n        const paragraphContent = currentParagraph.join(\" \").trim();\n        if (paragraphContent && !this.isHtmlTag(paragraphContent)) {\n          result.push(`<p class=\"markdown-paragraph\">${paragraphContent}</p>`);\n        } else {\n          result.push(paragraphContent);\n        }\n      }\n      return result.join(\"\\n\");\n    }\n    parseEmphasis(html) {\n      html = html.replace(/\\*\\*([^*]+)\\*\\*/g, \"<strong>$1</strong>\");\n      html = html.replace(/__([^_]+)__/g, \"<strong>$1</strong>\");\n      html = html.replace(/\\*([^*]+)\\*/g, \"<em>$1</em>\");\n      html = html.replace(/_([^_]+)_/g, \"<em>$1</em>\");\n      return html;\n    }\n    isHtmlTag(text) {\n      return /^<\\/?[a-zA-Z][^>]*>/.test(text.trim());\n    }\n  };\n\n  // src/client/bestPractices/services/ArticleService.ts\n  var ArticleService = class {\n    constructor() {\n      __publicField(this, \"markdownParser\");\n      __publicField(this, \"cache\", /* @__PURE__ */ new Map());\n      this.markdownParser = new MarkdownParser();\n    }\n    async getArticle(cardId) {\n      if (this.cache.has(cardId)) {\n        console.log(\"\\u6E05\\u9664\\u7F13\\u5B58\\uFF0C\\u91CD\\u65B0\\u52A0\\u8F7D\\u6587\\u7AE0:\", cardId);\n        this.cache.delete(cardId);\n      }\n      try {\n        const markdownContent = await this.fetchMarkdownContent(cardId);\n        const htmlContent = this.markdownParser.parse(markdownContent);\n        const article = {\n          id: cardId,\n          title: this.getTitleFromCardId(cardId),\n          content: htmlContent,\n          rawMarkdown: markdownContent\n        };\n        this.cache.set(cardId, article);\n        return article;\n      } catch (error) {\n        throw new Error(`\\u65E0\\u6CD5\\u52A0\\u8F7D\\u6587\\u7AE0 ${cardId}: ${error.message}`);\n      }\n    }\n    async fetchMarkdownContent(cardId) {\n      return this.getContentFromFile(cardId);\n    }\n    async getContentFromFile(cardId) {\n      try {\n        const contentMap = {\n          \"workflow-overview\": async () => (await Promise.resolve().then(() => __toESM(require_workflow_overview()))).default,\n          \"environment-config\": async () => (await Promise.resolve().then(() => __toESM(require_environment_config()))).default,\n          \"mcp-commands\": async () => (await Promise.resolve().then(() => __toESM(require_mcp_commands()))).default,\n          \"core-workflow\": async () => (await Promise.resolve().then(() => __toESM(require_core_workflow()))).default,\n          \"context-management\": async () => (await Promise.resolve().then(() => __toESM(require_context_management()))).default,\n          \"automation-batch\": async () => (await Promise.resolve().then(() => __toESM(require_automation_batch()))).default,\n          \"concurrent-claude\": async () => (await Promise.resolve().then(() => __toESM(require_concurrent_claude()))).default\n        };\n        const contentLoader = contentMap[cardId];\n        if (contentLoader) {\n          return await contentLoader();\n        }\n        return this.getDefaultContent(cardId);\n      } catch (error) {\n        console.warn(`Failed to load content for ${cardId}:`, error);\n        return this.getDefaultContent(cardId);\n      }\n    }\n    getDefaultContent(cardId) {\n      return `# ${this.getTitleFromCardId(cardId)}\n\n\\u5185\\u5BB9\\u6B63\\u5728\\u5F00\\u53D1\\u4E2D...\n\n\\u8BF7\\u7A0D\\u540E\\u67E5\\u770B\\u5B8C\\u6574\\u5185\\u5BB9\\u3002`;\n    }\n    getTitleFromCardId(cardId) {\n      const titles = {\n        \"workflow-overview\": \"\\u6211\\u73B0\\u5728\\u7684\\u5DE5\\u4F5C\\u6D41\",\n        \"environment-config\": \"\\u81EA\\u5B9A\\u4E49\\u73AF\\u5883\\u914D\\u7F6E\",\n        \"mcp-commands\": \"MCP \\u4E0E\\u5E38\\u7528\\u547D\\u4EE4\",\n        \"core-workflow\": \"\\u6838\\u5FC3\\u5DE5\\u4F5C\\u6D41\\u7A0B\",\n        \"context-management\": \"\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\",\n        \"automation-batch\": \"\\u81EA\\u52A8\\u5316\\u4E0E\\u6279\\u5904\\u7406\",\n        \"concurrent-claude\": \"\\u591A Claude \\u5E76\\u53D1\\u5E72\\u6D3B\"\n      };\n      return titles[cardId] || cardId;\n    }\n  };\n\n  // shared/utils/markdownRenderer.ts\n  var SafeMarkdownRenderer = class {\n    constructor(options = {}) {\n      __publicField(this, \"options\");\n      // 允许的 HTML 标签白名单\n      __publicField(this, \"defaultAllowedTags\", [\n        \"h1\",\n        \"h2\",\n        \"h3\",\n        \"h4\",\n        \"h5\",\n        \"h6\",\n        \"p\",\n        \"br\",\n        \"strong\",\n        \"em\",\n        \"code\",\n        \"pre\",\n        \"ul\",\n        \"ol\",\n        \"li\",\n        \"a\",\n        \"blockquote\"\n      ]);\n      this.options = {\n        enableCodeHighlight: true,\n        allowedTags: this.defaultAllowedTags,\n        ...options\n      };\n    }\n    /**\n     * 渲染 Markdown 为 HTML\n     */\n    render(markdown) {\n      if (!markdown || typeof markdown !== \"string\") {\n        return \"\";\n      }\n      console.log(\"SafeMarkdownRenderer.render called with markdown length:\", markdown.length);\n      console.log(\"Markdown preview:\", markdown.substring(0, 500) + \"...\");\n      let html = markdown;\n      html = this.renderCodeBlocks(html);\n      html = this.renderHeaders(html);\n      html = this.renderInlineCode(html);\n      html = this.renderBoldItalic(html);\n      html = this.renderLinks(html);\n      html = this.renderLists(html);\n      html = this.renderParagraphs(html);\n      console.log(\"Final rendered HTML length:\", html.length);\n      console.log(\"Final HTML preview:\", html.substring(0, 500) + \"...\");\n      return html;\n    }\n    /**\n     * 转义 HTML 字符以防止 XSS\n     */\n    escapeHtml(text) {\n      const div = document.createElement(\"div\");\n      div.textContent = text;\n      return div.innerHTML;\n    }\n    /**\n     * 保留已经处理的 HTML 标签，对其他内容进行转义\n     */\n    preserveHtmlTags(text) {\n      if (text.includes(\"<\") && text.includes(\">\")) {\n        return text;\n      }\n      return this.escapeHtml(text);\n    }\n    /**\n     * 渲染标题\n     */\n    renderHeaders(html) {\n      html = html.replace(/^######\\s(.+)$/gm, (match, title) => `<h6>${this.escapeHtml(title.trim())}</h6>`);\n      html = html.replace(/^#####\\s(.+)$/gm, (match, title) => `<h5>${this.escapeHtml(title.trim())}</h5>`);\n      html = html.replace(/^####\\s(.+)$/gm, (match, title) => `<h4>${this.escapeHtml(title.trim())}</h4>`);\n      html = html.replace(/^###\\s(.+)$/gm, (match, title) => `<h3>${this.escapeHtml(title.trim())}</h3>`);\n      html = html.replace(/^##\\s(.+)$/gm, (match, title) => `<h2>${this.escapeHtml(title.trim())}</h2>`);\n      html = html.replace(/^#\\s(.+)$/gm, (match, title) => `<h1>${this.escapeHtml(title.trim())}</h1>`);\n      return html;\n    }\n    /**\n     * 渲染代码块\n     */\n    renderCodeBlocks(html) {\n      console.log(\"renderCodeBlocks called, input length:\", html.length);\n      const hasCodeBlocks = html.includes(\"```\");\n      console.log(\"Contains code blocks:\", hasCodeBlocks);\n      if (hasCodeBlocks) {\n        const codeBlockMatches = html.match(/```[\\s\\S]*?```/g);\n        console.log(\"Found code block matches:\", codeBlockMatches?.length || 0);\n        if (codeBlockMatches) {\n          codeBlockMatches.forEach((match, index) => {\n            console.log(`Code block ${index}:`, match.substring(0, 100) + \"...\");\n          });\n        }\n      }\n      html = html.replace(/```([^`]*?)```/gs, (match, codeWithLang) => {\n        const lines = codeWithLang.trim().split(\"\\n\");\n        const firstLine = lines[0] || \"\";\n        const language = firstLine.toLowerCase().trim();\n        const code = lines.slice(1).join(\"\\n\").trim();\n        console.log(\"Processing code block:\", { language, codeLength: code.length });\n        if (language === \"mermaid\" || language === \"sequencediagram\") {\n          console.log(\"Detected Mermaid diagram!\");\n          return this.renderMermaidDiagram(code);\n        }\n        console.log(\"Rendering as regular code block\");\n        return `<pre><code class=\"language-${language}\">${this.escapeHtml(code)}</code></pre>`;\n      });\n      console.log(\"renderCodeBlocks finished, output length:\", html.length);\n      return html;\n    }\n    /**\n     * 渲染 Mermaid 图表\n     */\n    renderMermaidDiagram(code) {\n      const diagramId = `mermaid-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      console.log(\"Rendering Mermaid diagram:\", { diagramId, code: code.substring(0, 100) + \"...\" });\n      return `<div class=\"mermaid-diagram\" id=\"${diagramId}\">${this.escapeHtml(code)}</div>`;\n    }\n    /**\n     * 渲染行内代码\n     */\n    renderInlineCode(html) {\n      html = html.replace(/`([^`\\n]+)`/g, (match, code) => {\n        if (html.indexOf(\"<pre><code>\") !== -1 && html.indexOf(\"</code></pre>\") !== -1) {\n          const preStart = html.lastIndexOf(\"<pre><code>\", html.indexOf(match));\n          const preEnd = html.indexOf(\"</code></pre>\", html.indexOf(match));\n          if (preStart !== -1 && preEnd !== -1 && preStart < html.indexOf(match) && html.indexOf(match) < preEnd) {\n            return match;\n          }\n        }\n        return `<code>${this.escapeHtml(code)}</code>`;\n      });\n      return html;\n    }\n    /**\n     * 渲染粗体和斜体\n     */\n    renderBoldItalic(html) {\n      html = html.replace(/\\*\\*([^*\\n]+)\\*\\*/g, \"<strong>$1</strong>\");\n      html = html.replace(/\\*([^*\\n]+)\\*/g, \"<em>$1</em>\");\n      return html;\n    }\n    /**\n     * 渲染链接\n     */\n    renderLinks(html) {\n      html = html.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, (match, text, url) => {\n        if (url.match(/^https?:\\/\\//)) {\n          return `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${text}</a>`;\n        }\n        return match;\n      });\n      return html;\n    }\n    /**\n     * 渲染列表\n     */\n    renderLists(html) {\n      const lines = html.split(\"\\n\");\n      const result = [];\n      let inList = false;\n      let listItems = [];\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        const isListItem = /^[*+-]\\s(.+)$/.test(line);\n        if (isListItem) {\n          if (!inList) {\n            inList = true;\n            listItems = [];\n          }\n          const content = line.replace(/^[*+-]\\s/, \"\");\n          listItems.push(`<li>${content}</li>`);\n        } else {\n          if (inList) {\n            result.push(`<ul>${listItems.join(\"\")}</ul>`);\n            inList = false;\n            listItems = [];\n          }\n          result.push(line);\n        }\n      }\n      if (inList && listItems.length > 0) {\n        result.push(`<ul>${listItems.join(\"\")}</ul>`);\n      }\n      return result.join(\"\\n\");\n    }\n    /**\n     * 渲染段落\n     */\n    renderParagraphs(html) {\n      const paragraphs = html.split(\"\\n\\n\").filter((p) => p.trim());\n      return paragraphs.map((paragraph) => {\n        const trimmed = paragraph.trim();\n        if (trimmed.match(/^<(h[1-6]|ul|ol|pre|blockquote|div)/)) {\n          return trimmed;\n        }\n        if (!trimmed) {\n          return \"\";\n        }\n        let content = trimmed;\n        const hasHtmlTags = /<[^>]+>/.test(content);\n        if (!hasHtmlTags) {\n          content = this.escapeHtml(content);\n          content = content.replace(/\\n/g, \"<br>\");\n        } else {\n          content = trimmed;\n        }\n        return `<p>${content}</p>`;\n      }).join(\"\\n\\n\");\n    }\n    /**\n     * 添加代码高亮（简单实现）\n     */\n    highlightCode(container) {\n      if (!this.options.enableCodeHighlight)\n        return;\n      const codeBlocks = container.querySelectorAll(\"pre code\");\n      codeBlocks.forEach((block) => {\n        this.applyBasicHighlighting(block);\n      });\n      this.renderMermaidDiagrams(container);\n    }\n    /**\n     * 渲染 Mermaid 图表\n     */\n    renderMermaidDiagrams(container) {\n      const mermaidDiagrams = container.querySelectorAll(\".mermaid-diagram\");\n      if (mermaidDiagrams.length === 0)\n        return;\n      console.log(`Found ${mermaidDiagrams.length} Mermaid diagrams to render`);\n      this.loadMermaidLibrary().then(() => {\n        console.log(\"Mermaid library loaded successfully\");\n        mermaidDiagrams.forEach((diagram, index) => {\n          console.log(`Initializing Mermaid diagram ${index + 1}/${mermaidDiagrams.length}`);\n          this.initializeMermaidDiagram(diagram);\n        });\n      }).catch((error) => {\n        console.error(\"Failed to load Mermaid library:\", error);\n        mermaidDiagrams.forEach((diagram) => {\n          const code = diagram.textContent || \"\";\n          diagram.innerHTML = `<pre><code>${code}</code></pre>`;\n          diagram.classList.add(\"mermaid-fallback\");\n        });\n      });\n    }\n    /**\n     * 动态加载 Mermaid 库\n     */\n    loadMermaidLibrary() {\n      return new Promise((resolve, reject) => {\n        if (window.mermaid) {\n          console.log(\"Mermaid library already loaded\");\n          resolve();\n          return;\n        }\n        console.log(\"Loading Mermaid library from CDN...\");\n        const script = document.createElement(\"script\");\n        script.src = \"https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.min.js\";\n        script.async = true;\n        script.onload = () => {\n          console.log(\"Mermaid library script loaded, initializing...\");\n          try {\n            const mermaid = window.mermaid;\n            mermaid.initialize({\n              startOnLoad: false,\n              theme: \"default\",\n              securityLevel: \"loose\",\n              fontFamily: \"monospace\"\n            });\n            console.log(\"Mermaid library initialized\");\n            resolve();\n          } catch (error) {\n            console.error(\"Error initializing Mermaid:\", error);\n            reject(error);\n          }\n        };\n        script.onerror = (error) => {\n          console.error(\"Failed to load Mermaid script:\", error);\n          reject(new Error(\"Failed to load Mermaid library\"));\n        };\n        document.head.appendChild(script);\n      });\n    }\n    /**\n     * 初始化单个 Mermaid 图表\n     */\n    initializeMermaidDiagram(element) {\n      const mermaid = window.mermaid;\n      if (!mermaid) {\n        console.error(\"Mermaid library not available\");\n        return;\n      }\n      const code = element.textContent || \"\";\n      const id = element.id;\n      console.log(`Rendering diagram ${id}:`, code.substring(0, 100) + \"...\");\n      try {\n        element.textContent = \"\";\n        element.innerHTML = '<div style=\"padding: 20px; color: #666;\">\\u6B63\\u5728\\u6E32\\u67D3\\u56FE\\u8868...</div>';\n        mermaid.render(id + \"-svg\", code).then((result) => {\n          console.log(`Successfully rendered diagram ${id}`);\n          element.innerHTML = result.svg;\n          element.classList.add(\"mermaid-rendered\");\n          element.addEventListener(\"click\", () => {\n            this.showMermaidFullscreen(result.svg, id);\n          });\n        }).catch((error) => {\n          console.error(`Mermaid rendering error for ${id}:`, error);\n          element.innerHTML = `\n                    <div style=\"color: #dc2626; margin-bottom: 8px;\">\\u26A0\\uFE0F \\u56FE\\u8868\\u6E32\\u67D3\\u5931\\u8D25</div>\n                    <pre><code>${this.escapeHtml(code)}</code></pre>\n                `;\n          element.classList.add(\"mermaid-error\");\n        });\n      } catch (error) {\n        console.error(`Mermaid initialization error for ${id}:`, error);\n        element.innerHTML = `\n                <div style=\"color: #dc2626; margin-bottom: 8px;\">\\u26A0\\uFE0F \\u56FE\\u8868\\u521D\\u59CB\\u5316\\u5931\\u8D25</div>\n                <pre><code>${this.escapeHtml(code)}</code></pre>\n            `;\n        element.classList.add(\"mermaid-error\");\n      }\n    }\n    /**\n     * 显示 Mermaid 图表全屏模式\n     */\n    showMermaidFullscreen(svgContent, diagramId) {\n      const modal = document.createElement(\"div\");\n      modal.className = \"mermaid-fullscreen-modal\";\n      modal.innerHTML = `\n            <div class=\"mermaid-fullscreen-content\">\n                <button class=\"mermaid-fullscreen-close\" onclick=\"this.closest('.mermaid-fullscreen-modal').remove()\">&times;</button>\n                ${svgContent}\n            </div>\n        `;\n      modal.addEventListener(\"click\", (e) => {\n        if (e.target === modal) {\n          modal.remove();\n        }\n      });\n      const handleEscape = (e) => {\n        if (e.key === \"Escape\") {\n          modal.remove();\n          document.removeEventListener(\"keydown\", handleEscape);\n        }\n      };\n      document.addEventListener(\"keydown\", handleEscape);\n      document.body.appendChild(modal);\n    }\n    /**\n     * 应用基础语法高亮\n     */\n    applyBasicHighlighting(codeBlock) {\n      let code = codeBlock.textContent || \"\";\n      const keywords = [\n        \"function\",\n        \"const\",\n        \"let\",\n        \"var\",\n        \"if\",\n        \"else\",\n        \"for\",\n        \"while\",\n        \"return\",\n        \"class\",\n        \"interface\",\n        \"type\",\n        \"import\",\n        \"export\",\n        \"async\",\n        \"await\",\n        \"try\",\n        \"catch\",\n        \"throw\",\n        \"new\"\n      ];\n      keywords.forEach((keyword) => {\n        const regex = new RegExp(`\\\\b${keyword}\\\\b`, \"g\");\n        code = code.replace(regex, `<span class=\"keyword\">${keyword}</span>`);\n      });\n      code = code.replace(/([\"'])((?:(?!\\1)[^\\\\]|\\\\.)*)(\\1)/g, '<span class=\"string\">$1$2$3</span>');\n      code = code.replace(/(\\/\\/.*$)/gm, '<span class=\"comment\">$1</span>');\n      code = code.replace(/(\\/\\*[\\s\\S]*?\\*\\/)/g, '<span class=\"comment\">$1</span>');\n      codeBlock.innerHTML = code;\n    }\n  };\n\n  // src/client/bestPractices/styles/markdownStyles.ts\n  var markdownStyles = `\n/* Markdown \\u5185\\u5BB9\\u5BB9\\u5668 */\n.practice-article {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n  background: #ffffff;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.practice-article__header {\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.practice-article__back-btn {\n  background: #f3f4f6;\n  border: 1px solid #d1d5db;\n  color: #374151;\n  padding: 8px 16px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.2s ease;\n}\n\n.practice-article__back-btn:hover {\n  background: #e5e7eb;\n  border-color: #9ca3af;\n}\n\n.practice-article__content {\n  line-height: 1.7;\n  color: #374151;\n}\n\n/* Markdown \\u5185\\u5BB9\\u6837\\u5F0F */\n.markdown-content {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n}\n\n.markdown-content h1 {\n  font-size: 2.25rem;\n  font-weight: 700;\n  color: #1f2937;\n  margin: 0 0 24px 0;\n  padding-bottom: 12px;\n  border-bottom: 2px solid #e5e7eb;\n}\n\n.markdown-content h2 {\n  font-size: 1.75rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 32px 0 16px 0;\n  padding-left: 12px;\n  border-left: 4px solid #3b82f6;\n}\n\n.markdown-content h3 {\n  font-size: 1.375rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 24px 0 12px 0;\n}\n\n.markdown-content h4 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #374151;\n  margin: 20px 0 10px 0;\n}\n\n.markdown-content p {\n  margin-bottom: 16px;\n  line-height: 1.7;\n  color: #4b5563;\n}\n\n.markdown-content strong {\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.markdown-content em {\n  font-style: italic;\n  color: #6b7280;\n}\n\n/* \\u5217\\u8868\\u6837\\u5F0F */\n.markdown-content ul,\n.markdown-content ol {\n  margin: 16px 0;\n  padding-left: 24px;\n}\n\n.markdown-content li {\n  margin-bottom: 8px;\n  line-height: 1.6;\n  color: #4b5563;\n}\n\n.markdown-content li strong {\n  color: #1f2937;\n}\n\n/* \\u4EE3\\u7801\\u6837\\u5F0F */\n.markdown-content code {\n  background: #f1f5f9;\n  color: #e11d48;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', monospace;\n  font-size: 0.9em;\n  border: 1px solid #e2e8f0;\n}\n\n.markdown-content pre {\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  padding: 16px;\n  margin: 20px 0;\n  overflow-x: auto;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', monospace;\n  font-size: 0.875rem;\n  line-height: 1.5;\n}\n\n.markdown-content pre code {\n  background: none;\n  color: #334155;\n  padding: 0;\n  border: none;\n  border-radius: 0;\n}\n\n/* \\u9AA8\\u67B6\\u5C4F\\u52A0\\u8F7D\\u52A8\\u753B */\n.article-skeleton {\n  padding: 20px 0;\n}\n\n.skeleton-title {\n  height: 32px;\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n  background-size: 200% 100%;\n  animation: skeleton-loading 1.5s infinite;\n  border-radius: 4px;\n  margin-bottom: 24px;\n  width: 60%;\n}\n\n.skeleton-line {\n  height: 16px;\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n  background-size: 200% 100%;\n  animation: skeleton-loading 1.5s infinite;\n  border-radius: 4px;\n  margin-bottom: 12px;\n  width: 100%;\n}\n\n.skeleton-line.short {\n  width: 70%;\n}\n\n.skeleton-diagram {\n  height: 200px;\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n  background-size: 200% 100%;\n  animation: skeleton-loading 1.5s infinite;\n  border-radius: 8px;\n  margin: 24px 0;\n}\n\n@keyframes skeleton-loading {\n  0% {\n    background-position: -200% 0;\n  }\n  100% {\n    background-position: 200% 0;\n  }\n}\n\n/* Mermaid \\u56FE\\u8868\\u589E\\u5F3A\\u6837\\u5F0F */\n.markdown-content .mermaid-diagram {\n  margin: 24px 0;\n  padding: 20px;\n  background: #fafbfc;\n  border: 1px solid #e1e5e9;\n  border-radius: 8px;\n  text-align: center;\n  overflow-x: auto;\n  min-height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  transition: all 0.3s ease;\n}\n\n.markdown-content .mermaid-diagram:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  transform: translateY(-2px);\n}\n\n.markdown-content .mermaid-diagram.mermaid-rendered {\n  background: #ffffff;\n  border: 1px solid #e5e7eb;\n  padding: 16px;\n  cursor: pointer;\n}\n\n.markdown-content .mermaid-diagram.mermaid-rendered::after {\n  content: \"\\u{1F50D} \\u70B9\\u51FB\\u67E5\\u770B\\u5927\\u56FE\";\n  position: absolute;\n  top: 8px;\n  right: 12px;\n  font-size: 12px;\n  color: #6b7280;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 4px 8px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.markdown-content .mermaid-diagram.mermaid-rendered:hover::after {\n  opacity: 1;\n}\n\n.markdown-content .mermaid-diagram svg {\n  max-width: 100%;\n  height: auto;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', monospace;\n  transition: transform 0.3s ease;\n}\n\n.markdown-content .mermaid-diagram.mermaid-rendered:hover svg {\n  transform: scale(1.02);\n}\n\n/* \\u5168\\u5C4F\\u67E5\\u770B\\u6A21\\u6001\\u6846 */\n.mermaid-fullscreen-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  opacity: 0;\n  animation: fadeIn 0.3s ease forwards;\n}\n\n.mermaid-fullscreen-content {\n  max-width: 95%;\n  max-height: 95%;\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  position: relative;\n  overflow: auto;\n  transform: scale(0.9);\n  animation: scaleIn 0.3s ease forwards;\n}\n\n.mermaid-fullscreen-close {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #666;\n  z-index: 1001;\n}\n\n.mermaid-fullscreen-close:hover {\n  color: #333;\n}\n\n@keyframes fadeIn {\n  to { opacity: 1; }\n}\n\n@keyframes scaleIn {\n  to { transform: scale(1); }\n}\n\n/* \\u4EE3\\u7801\\u5757\\u589E\\u5F3A */\n.markdown-content pre {\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  padding: 16px;\n  margin: 20px 0;\n  overflow-x: auto;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', monospace;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  position: relative;\n}\n\n.markdown-content pre:hover .copy-button {\n  opacity: 1;\n}\n\n.copy-button {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  background: #e5e7eb;\n  border: none;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 12px;\n  cursor: pointer;\n  opacity: 0;\n  transition: all 0.3s ease;\n}\n\n.copy-button:hover {\n  background: #d1d5db;\n}\n\n.copy-button.copied {\n  background: #10b981;\n  color: white;\n}\n\n/* \\u8FD4\\u56DE\\u9876\\u90E8\\u6309\\u94AE */\n.back-to-top {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 48px;\n  height: 48px;\n  cursor: pointer;\n  opacity: 0;\n  transform: translateY(20px);\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);\n}\n\n.back-to-top.visible {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.back-to-top:hover {\n  background: #2563eb;\n  transform: translateY(-2px);\n  box-shadow: 0 6px 16px rgba(59, 130, 246, 0.4);\n}\n\n/* \\u9605\\u8BFB\\u8FDB\\u5EA6\\u6761 */\n.reading-progress {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 0%;\n  height: 3px;\n  background: linear-gradient(90deg, #3b82f6, #8b5cf6);\n  z-index: 999;\n  transition: width 0.1s ease;\n}\n\n/* \\u94FE\\u63A5\\u6837\\u5F0F */\n.markdown-content a {\n  color: #3b82f6;\n  text-decoration: none;\n  border-bottom: 1px solid transparent;\n  transition: all 0.2s ease;\n}\n\n.markdown-content a:hover {\n  color: #1d4ed8;\n  border-bottom-color: #3b82f6;\n}\n\n/* \\u5F15\\u7528\\u5757\\u6837\\u5F0F */\n.markdown-content blockquote {\n  border-left: 4px solid #e5e7eb;\n  padding-left: 16px;\n  margin: 20px 0;\n  color: #6b7280;\n  font-style: italic;\n  background: #f9fafb;\n  padding: 16px;\n  border-radius: 0 8px 8px 0;\n}\n\n/* \\u8868\\u683C\\u6837\\u5F0F */\n.markdown-content table {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 20px 0;\n  background: #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.markdown-content th,\n.markdown-content td {\n  padding: 12px 16px;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.markdown-content th {\n  background: #f9fafb;\n  font-weight: 600;\n  color: #374151;\n}\n\n.markdown-content tr:hover {\n  background: #f9fafb;\n}\n\n/* \\u5206\\u9694\\u7EBF\\u6837\\u5F0F */\n.markdown-content hr {\n  border: none;\n  height: 1px;\n  background: #e5e7eb;\n  margin: 32px 0;\n}\n\n/* \\u54CD\\u5E94\\u5F0F\\u8BBE\\u8BA1 */\n@media (max-width: 768px) {\n  .practice-article {\n    margin: 10px;\n    padding: 16px;\n  }\n  \n  .markdown-content h1 {\n    font-size: 1.875rem;\n  }\n  \n  .markdown-content h2 {\n    font-size: 1.5rem;\n  }\n  \n  .markdown-content pre {\n    padding: 12px;\n    font-size: 0.8rem;\n  }\n}\n`;\n  function injectMarkdownStyles() {\n    if (document.getElementById(\"markdown-styles\")) {\n      return;\n    }\n    const style = document.createElement(\"style\");\n    style.id = \"markdown-styles\";\n    style.textContent = markdownStyles;\n    document.head.appendChild(style);\n  }\n\n  // src/client/bestPractices/handlers/EventHandler.ts\n  var EventHandler = class {\n    constructor(containerId) {\n      __publicField(this, \"containerId\");\n      __publicField(this, \"boundClickHandler\");\n      __publicField(this, \"articleService\");\n      __publicField(this, \"articleRenderer\");\n      this.containerId = containerId;\n      this.boundClickHandler = this.handleCardClick.bind(this);\n      this.articleService = new ArticleService();\n      this.articleRenderer = new ArticleRenderer();\n    }\n    bindEventListeners() {\n      console.log(\"\\u5F00\\u59CB\\u7ED1\\u5B9A\\u4E8B\\u4EF6\\u76D1\\u542C\\u5668\");\n      const container = document.getElementById(this.containerId);\n      if (!container) {\n        console.error(`\\u672A\\u627E\\u5230\\u5BB9\\u5668\\u5143\\u7D20: ${this.containerId}`);\n        return;\n      }\n      console.log(\"\\u627E\\u5230\\u5BB9\\u5668\\u5143\\u7D20:\", container);\n      this.removeExistingListeners(container);\n      this.addEventListeners(container);\n      console.log(\"\\u4E8B\\u4EF6\\u59D4\\u6258\\u7ED1\\u5B9A\\u5B8C\\u6210\");\n    }\n    removeExistingListeners(container) {\n      container.removeEventListener(\"click\", this.boundClickHandler);\n    }\n    addEventListeners(container) {\n      container.addEventListener(\"click\", this.boundClickHandler);\n      container.addEventListener(\"click\", function(e) {\n        console.log(\"\\u5BB9\\u5668\\u6536\\u5230\\u70B9\\u51FB\\u4E8B\\u4EF6:\", {\n          target: e.target,\n          targetClass: e.target.className,\n          targetTag: e.target.tagName\n        });\n      }, true);\n    }\n    handleCardClick(e) {\n      const event = e;\n      const target = event.target;\n      console.log(\"handleCardClick\\u88AB\\u8C03\\u7528:\", target);\n      const isInArticleView = document.querySelector(\".practice-article\");\n      if (isInArticleView) {\n        console.log(\"\\u5F53\\u524D\\u5728\\u6587\\u7AE0\\u8BE6\\u60C5\\u9875\\u9762\\uFF0C\\u5FFD\\u7565\\u70B9\\u51FB\\u4E8B\\u4EF6\");\n        return;\n      }\n      const button = target.closest(\".overview-card__action-btn\");\n      if (!button) {\n        console.log(\"\\u70B9\\u51FB\\u7684\\u4E0D\\u662F\\u64CD\\u4F5C\\u6309\\u94AE\");\n        return;\n      }\n      console.log(\"\\u627E\\u5230\\u64CD\\u4F5C\\u6309\\u94AE:\", button);\n      const cardId = button.getAttribute(\"data-card-id\");\n      if (!cardId) {\n        console.error(\"\\u6309\\u94AE\\u7F3A\\u5C11 data-card-id \\u5C5E\\u6027\");\n        return;\n      }\n      console.log(\"\\u51C6\\u5907\\u663E\\u793A\\u8BE6\\u7EC6\\u5185\\u5BB9:\", cardId);\n      this.showDetailedContent(cardId);\n    }\n    async showDetailedContent(cardId) {\n      const container = document.getElementById(this.containerId);\n      if (!container) {\n        console.error(`\\u672A\\u627E\\u5230\\u5BB9\\u5668\\u5143\\u7D20: ${this.containerId}`);\n        return;\n      }\n      try {\n        injectMarkdownStyles();\n        container.innerHTML = this.articleRenderer.renderLoadingState();\n        const article = await this.articleService.getArticle(cardId);\n        const articleHtml = this.articleRenderer.renderArticle(article.title, article.content);\n        container.innerHTML = articleHtml;\n        const markdownContainer = document.getElementById(\"markdown-content-container\");\n        if (markdownContainer) {\n          const renderer = new SafeMarkdownRenderer();\n          console.log(\"About to render raw markdown with SafeMarkdownRenderer\");\n          const renderedHtml = renderer.render(article.rawMarkdown);\n          markdownContainer.innerHTML = `<div class=\"markdown-content\">${renderedHtml}</div>`;\n          renderer.highlightCode(markdownContainer);\n          this.addEnhancedFeatures(markdownContainer);\n        }\n        window.showOverviewCards = () => {\n          window.initializeBestPractices();\n        };\n      } catch (error) {\n        console.error(\"\\u52A0\\u8F7D\\u6587\\u7AE0\\u5931\\u8D25:\", error);\n        const errorHtml = this.articleRenderer.renderErrorState(error.message);\n        container.innerHTML = errorHtml;\n      }\n    }\n    /**\n     * 添加增强功能\n     */\n    addEnhancedFeatures(container) {\n      this.addCopyButtonsToCodeBlocks(container);\n      this.addReadingProgress();\n      this.addBackToTopButton();\n    }\n    /**\n     * 为代码块添加复制按钮\n     */\n    addCopyButtonsToCodeBlocks(container) {\n      const codeBlocks = container.querySelectorAll(\"pre\");\n      codeBlocks.forEach((block) => {\n        if (!block.querySelector(\".copy-button\")) {\n          const copyButton = document.createElement(\"button\");\n          copyButton.className = \"copy-button\";\n          copyButton.textContent = \"\\u590D\\u5236\";\n          copyButton.onclick = () => this.copyCodeBlock(block, copyButton);\n          block.appendChild(copyButton);\n        }\n      });\n    }\n    /**\n     * 复制代码块内容\n     */\n    copyCodeBlock(block, button) {\n      const code = block.querySelector(\"code\");\n      if (code) {\n        navigator.clipboard.writeText(code.textContent || \"\").then(() => {\n          button.textContent = \"\\u5DF2\\u590D\\u5236\";\n          button.classList.add(\"copied\");\n          setTimeout(() => {\n            button.textContent = \"\\u590D\\u5236\";\n            button.classList.remove(\"copied\");\n          }, 2e3);\n        }).catch(() => {\n          button.textContent = \"\\u590D\\u5236\\u5931\\u8D25\";\n          setTimeout(() => {\n            button.textContent = \"\\u590D\\u5236\";\n          }, 2e3);\n        });\n      }\n    }\n    /**\n     * 添加阅读进度条\n     */\n    addReadingProgress() {\n      const existingProgress = document.querySelector(\".reading-progress\");\n      if (existingProgress) {\n        existingProgress.remove();\n      }\n      const progressBar = document.createElement(\"div\");\n      progressBar.className = \"reading-progress\";\n      document.body.appendChild(progressBar);\n      const updateProgress = () => {\n        const scrollTop = window.pageYOffset;\n        const docHeight = document.documentElement.scrollHeight - window.innerHeight;\n        const progress = scrollTop / docHeight * 100;\n        progressBar.style.width = `${Math.min(progress, 100)}%`;\n      };\n      window.addEventListener(\"scroll\", updateProgress);\n      updateProgress();\n    }\n    /**\n     * 添加返回顶部按钮\n     */\n    addBackToTopButton() {\n      const existingButton = document.querySelector(\".back-to-top\");\n      if (existingButton) {\n        existingButton.remove();\n      }\n      const backToTopButton = document.createElement(\"button\");\n      backToTopButton.className = \"back-to-top\";\n      backToTopButton.innerHTML = \"\\u2191\";\n      backToTopButton.onclick = () => {\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      };\n      document.body.appendChild(backToTopButton);\n      const toggleBackToTop = () => {\n        if (window.pageYOffset > 300) {\n          backToTopButton.classList.add(\"visible\");\n        } else {\n          backToTopButton.classList.remove(\"visible\");\n        }\n      };\n      window.addEventListener(\"scroll\", toggleBackToTop);\n      toggleBackToTop();\n    }\n  };\n\n  // src/client/bestPractices/handlers/NavigationHandler.ts\n  var NavigationHandler = class {\n    bindEventListeners() {\n      this.bindBreadcrumbNavigation();\n    }\n    bindBreadcrumbNavigation() {\n      document.addEventListener(\"click\", (e) => {\n        const target = e.target;\n        if (target.matches(\".breadcrumb-link\")) {\n          e.preventDefault();\n          const targetId = target.getAttribute(\"data-target\");\n          if (targetId) {\n            this.navigateToSection(targetId);\n          }\n        }\n      });\n    }\n    navigateToSection(sectionId) {\n      const element = document.getElementById(sectionId);\n      if (element) {\n        element.scrollIntoView({ behavior: \"smooth\" });\n      }\n    }\n  };\n\n  // src/client/bestPractices/data/cardsData.ts\n  var bestPracticesCards = [\n    {\n      id: \"workflow-overview\",\n      title: \"\\u6211\\u73B0\\u5728\\u7684\\u5DE5\\u4F5C\\u6D41\",\n      description: \"\\u57FA\\u4E8E Claude Code \\u7684\\u5B8C\\u6574\\u5F00\\u53D1\\u5DE5\\u4F5C\\u6D41\\uFF0C\\u4ECE\\u9700\\u6C42\\u5230\\u90E8\\u7F72\\u7684\\u5168\\u6D41\\u7A0B\\u6700\\u4F73\\u5B9E\\u8DF5\",\n      category: \"workflow\",\n      difficulty: \"intermediate\",\n      readTime: \"10 \\u5206\\u949F\",\n      tags: [\"workflow\", \"github\", \"tdd\", \"review\"],\n      overview: \"\\u5C55\\u793A\\u5982\\u4F55\\u4F7F\\u7528 Claude Code \\u6784\\u5EFA\\u9AD8\\u6548\\u7684\\u5F00\\u53D1\\u5DE5\\u4F5C\\u6D41\\uFF0C\\u5305\\u542B\\u65F6\\u5E8F\\u56FE\\u548C\\u8BE6\\u7EC6\\u7684\\u6D41\\u7A0B\\u6B65\\u9AA4\\u3002\",\n      sections: [\n        { title: \"\\u5DE5\\u4F5C\\u6D41\\u65F6\\u5E8F\\u56FE\", content: \"\\u5B8C\\u6574\\u7684\\u5F00\\u53D1\\u6D41\\u7A0B\\u53EF\\u89C6\\u5316\\u5C55\\u793A\", type: \"mermaid\" },\n        { title: \"\\u6838\\u5FC3\\u6B65\\u9AA4\", content: \"\\u4ECE\\u521B\\u5EFA\\u5DE5\\u4F5C\\u533A\\u5230\\u4EE3\\u7801\\u5BA1\\u67E5\\u76848\\u4E2A\\u5173\\u952E\\u6B65\\u9AA4\", type: \"list\" }\n      ],\n      tips: [{ type: \"success\", title: \"\\u6548\\u7387\\u63D0\\u5347\", content: \"\\u6574\\u4E2A\\u8FC7\\u7A0B\\u5F00\\u53D1\\u8005\\u53EA\\u9700\\u8981\\u63D0\\u51FA\\u9700\\u6C42\\u548CReview\\uFF0C\\u5927\\u5927\\u63D0\\u5347\\u5F00\\u53D1\\u6548\\u7387\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"environment-config\",\n      title: \"\\u81EA\\u5B9A\\u4E49\\u73AF\\u5883\\u914D\\u7F6E\",\n      description: \"\\u914D\\u7F6E CLAUDE.md \\u6587\\u4EF6\\u3001\\u6743\\u9650\\u7BA1\\u7406\\u548C GitHub CLI \\u96C6\\u6210\",\n      category: \"configuration\",\n      difficulty: \"beginner\",\n      readTime: \"8 \\u5206\\u949F\",\n      tags: [\"claude-md\", \"configuration\", \"github\", \"permissions\"],\n      overview: \"\\u5B66\\u4E60\\u5982\\u4F55\\u6B63\\u786E\\u914D\\u7F6E Claude Code \\u7684\\u5F00\\u53D1\\u73AF\\u5883\\uFF0C\\u5305\\u62EC\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\u3001\\u6743\\u9650\\u7B56\\u7565\\u548C\\u5DE5\\u5177\\u96C6\\u6210\\u3002\",\n      sections: [\n        { title: \"CLAUDE.md \\u6587\\u4EF6\\u914D\\u7F6E\", content: \"\\u521B\\u5EFA\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\uFF0C\\u81EA\\u52A8\\u6CE8\\u5165\\u4E0A\\u4E0B\\u6587\", type: \"code\" },\n        { title: \"\\u6743\\u9650\\u7BA1\\u7406\\u7B56\\u7565\", content: \"\\u5B89\\u5168\\u5730\\u7BA1\\u7406 Claude Code \\u7684\\u64CD\\u4F5C\\u6743\\u9650\", type: \"text\" },\n        { title: \"GitHub CLI \\u96C6\\u6210\", content: \"\\u65E0\\u7F1D\\u96C6\\u6210 GitHub \\u5DE5\\u4F5C\\u6D41\", type: \"code\" }\n      ],\n      tips: [{ type: \"info\", title: \"\\u6700\\u4F73\\u5B9E\\u8DF5\", content: \"CLAUDE.md \\u6587\\u4EF6\\u5E94\\u8BE5\\u653E\\u5728\\u9879\\u76EE\\u6839\\u76EE\\u5F55\\uFF0C\\u4F5C\\u4E3A\\u9879\\u76EE\\u7684\\u8BB0\\u5FC6\\u5E93\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"mcp-commands\",\n      title: \"MCP \\u4E0E\\u5E38\\u7528\\u547D\\u4EE4\",\n      description: \"MCP \\u670D\\u52A1\\u5668\\u96C6\\u6210\\u3001\\u5E38\\u7528\\u547D\\u4EE4\\u53C2\\u6570\\u548C\\u81EA\\u5B9A\\u4E49 Slash \\u547D\\u4EE4\",\n      category: \"mcp-commands\",\n      difficulty: \"intermediate\",\n      readTime: \"12 \\u5206\\u949F\",\n      tags: [\"mcp\", \"commands\", \"integration\", \"automation\"],\n      overview: \"\\u638C\\u63E1 MCP (Model Context Protocol) \\u670D\\u52A1\\u5668\\u7684\\u96C6\\u6210\\u548C\\u7BA1\\u7406\\uFF0C\\u4EE5\\u53CA\\u5982\\u4F55\\u521B\\u5EFA\\u548C\\u4F7F\\u7528\\u81EA\\u5B9A\\u4E49\\u547D\\u4EE4\\u3002\",\n      sections: [\n        { title: \"MCP \\u670D\\u52A1\\u5668\\u96C6\\u6210\", content: \"\\u914D\\u7F6E\\u548C\\u4F7F\\u7528 MCP \\u670D\\u52A1\\u5668\\u6269\\u5C55 Claude Code \\u529F\\u80FD\", type: \"code\" },\n        { title: \"\\u5E38\\u7528\\u547D\\u4EE4\\u53C2\\u6570\", content: \"\\u638C\\u63E1 Claude Code \\u7684\\u6838\\u5FC3\\u547D\\u4EE4\\u548C\\u53C2\\u6570\", type: \"list\" },\n        { title: \"\\u81EA\\u5B9A\\u4E49 Slash \\u547D\\u4EE4\", content: \"\\u521B\\u5EFA\\u9879\\u76EE\\u7279\\u5B9A\\u7684\\u5FEB\\u6377\\u547D\\u4EE4\", type: \"code\" }\n      ],\n      tips: [{ type: \"tip\", title: \"\\u6269\\u5C55\\u6027\", content: \"MCP \\u670D\\u52A1\\u5668\\u8BA9 Claude Code \\u5177\\u5907\\u65E0\\u9650\\u6269\\u5C55\\u7684\\u53EF\\u80FD\\u6027\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"core-workflow\",\n      title: \"\\u6838\\u5FC3\\u5DE5\\u4F5C\\u6D41\\u7A0B\",\n      description: \"\\u4EE3\\u7801\\u751F\\u6210\\u3001\\u8C03\\u8BD5\\u3001\\u91CD\\u6784\\u548C\\u6D4B\\u8BD5\\u7684\\u6838\\u5FC3\\u5DE5\\u4F5C\\u6D41\\u7A0B\",\n      category: \"workflow\",\n      difficulty: \"intermediate\",\n      readTime: \"15 \\u5206\\u949F\",\n      tags: [\"coding\", \"debugging\", \"refactoring\", \"testing\"],\n      overview: \"\\u6DF1\\u5165\\u4E86\\u89E3 Claude Code \\u5728\\u65E5\\u5E38\\u5F00\\u53D1\\u4E2D\\u7684\\u6838\\u5FC3\\u5DE5\\u4F5C\\u6D41\\u7A0B\\uFF0C\\u4ECE\\u4EE3\\u7801\\u751F\\u6210\\u5230\\u6D4B\\u8BD5\\u7684\\u5B8C\\u6574\\u94FE\\u8DEF\\u3002\",\n      sections: [\n        { title: \"\\u4EE3\\u7801\\u751F\\u6210\\u6700\\u4F73\\u5B9E\\u8DF5\", content: \"\\u5982\\u4F55\\u8BA9 Claude Code \\u751F\\u6210\\u9AD8\\u8D28\\u91CF\\u4EE3\\u7801\", type: \"text\" },\n        { title: \"\\u8C03\\u8BD5\\u548C\\u95EE\\u9898\\u89E3\\u51B3\", content: \"\\u4F7F\\u7528 Claude Code \\u8FDB\\u884C\\u9AD8\\u6548\\u8C03\\u8BD5\", type: \"code\" },\n        { title: \"\\u91CD\\u6784\\u548C\\u4F18\\u5316\", content: \"\\u4EE3\\u7801\\u91CD\\u6784\\u7684\\u7B56\\u7565\\u548C\\u6280\\u5DE7\", type: \"text\" },\n        { title: \"\\u6D4B\\u8BD5\\u9A71\\u52A8\\u5F00\\u53D1\", content: \"\\u7ED3\\u5408 TDD \\u7684\\u5F00\\u53D1\\u6D41\\u7A0B\", type: \"code\" }\n      ],\n      tips: [{ type: \"warning\", title: \"\\u6CE8\\u610F\\u4E8B\\u9879\", content: \"\\u59CB\\u7EC8\\u4FDD\\u6301\\u4EE3\\u7801\\u5BA1\\u67E5\\u7684\\u4E60\\u60EF\\uFF0CAI \\u751F\\u6210\\u7684\\u4EE3\\u7801\\u4E5F\\u9700\\u8981\\u4EBA\\u5DE5\\u9A8C\\u8BC1\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"context-management\",\n      title: \"\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\",\n      description: \"\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\u3001\\u4E0A\\u4E0B\\u6587\\u7A97\\u53E3\\u4F18\\u5316\\u548C\\u957F\\u671F\\u8BB0\\u5FC6\\u7BA1\\u7406\",\n      category: \"context\",\n      difficulty: \"advanced\",\n      readTime: \"18 \\u5206\\u949F\",\n      tags: [\"context\", \"memory\", \"optimization\", \"management\"],\n      overview: \"\\u638C\\u63E1 Claude Code \\u7684\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\\u6280\\u5DE7\\uFF0C\\u5305\\u62EC\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\u7684\\u4F7F\\u7528\\u548C\\u957F\\u671F\\u8BB0\\u5FC6\\u7684\\u7EF4\\u62A4\\u3002\",\n      sections: [\n        { title: \"\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\\u8BBE\\u8BA1\", content: \"\\u5982\\u4F55\\u8BBE\\u8BA1\\u6709\\u6548\\u7684\\u9879\\u76EE\\u8BB0\\u5FC6\\u5E93\", type: \"text\" },\n        { title: \"\\u4E0A\\u4E0B\\u6587\\u7A97\\u53E3\\u4F18\\u5316\", content: \"\\u6700\\u5927\\u5316\\u5229\\u7528\\u6709\\u9650\\u7684\\u4E0A\\u4E0B\\u6587\\u7A97\\u53E3\", type: \"list\" },\n        { title: \"\\u957F\\u671F\\u8BB0\\u5FC6\\u7BA1\\u7406\", content: \"\\u7EF4\\u62A4\\u9879\\u76EE\\u7684\\u957F\\u671F\\u8BB0\\u5FC6\\u548C\\u77E5\\u8BC6\\u5E93\", type: \"text\" }\n      ],\n      tips: [{ type: \"success\", title: \"\\u9AD8\\u7EA7\\u6280\\u5DE7\", content: \"\\u5408\\u7406\\u7684\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\\u53EF\\u4EE5\\u8BA9 Claude Code \\u7684\\u8868\\u73B0\\u63D0\\u5347 50% \\u4EE5\\u4E0A\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"automation-batch\",\n      title: \"\\u81EA\\u52A8\\u5316\\u4E0E\\u6279\\u5904\\u7406\",\n      description: \"\\u65E0\\u5934\\u6A21\\u5F0F\\u3001\\u81EA\\u52A8\\u5316\\u811A\\u672C\\u3001Pre-Commit Hooks \\u548C Claude Code Hooks\",\n      category: \"automation\",\n      difficulty: \"advanced\",\n      readTime: \"20 \\u5206\\u949F\",\n      tags: [\"automation\", \"batch\", \"hooks\", \"ci-cd\"],\n      overview: \"\\u5B66\\u4E60\\u5982\\u4F55\\u5C06 Claude Code \\u96C6\\u6210\\u5230\\u81EA\\u52A8\\u5316\\u5DE5\\u4F5C\\u6D41\\u4E2D\\uFF0C\\u5305\\u62EC CI/CD \\u6D41\\u7A0B\\u548C\\u6279\\u5904\\u7406\\u4EFB\\u52A1\\u3002\",\n      sections: [\n        { title: \"\\u65E0\\u5934\\u6A21\\u5F0F\\u4F7F\\u7528\", content: \"\\u5728\\u670D\\u52A1\\u5668\\u73AF\\u5883\\u4E2D\\u4F7F\\u7528 Claude Code\", type: \"code\" },\n        { title: \"\\u81EA\\u52A8\\u5316\\u811A\\u672C\\u7F16\\u5199\", content: \"\\u7F16\\u5199\\u9AD8\\u6548\\u7684\\u81EA\\u52A8\\u5316\\u811A\\u672C\", type: \"code\" },\n        { title: \"Git Hooks \\u96C6\\u6210\", content: \"\\u5728 Git \\u5DE5\\u4F5C\\u6D41\\u4E2D\\u96C6\\u6210 Claude Code\", type: \"code\" },\n        { title: \"CI/CD \\u6D41\\u7A0B\\u96C6\\u6210\", content: \"\\u5728\\u6301\\u7EED\\u96C6\\u6210\\u4E2D\\u4F7F\\u7528 Claude Code\", type: \"text\" }\n      ],\n      tips: [{ type: \"warning\", title: \"\\u5B89\\u5168\\u63D0\\u9192\", content: \"\\u5728\\u81EA\\u52A8\\u5316\\u73AF\\u5883\\u4E2D\\u4F7F\\u7528\\u65F6\\uFF0C\\u6CE8\\u610F API \\u5BC6\\u94A5\\u7684\\u5B89\\u5168\\u7BA1\\u7406\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    },\n    {\n      id: \"concurrent-claude\",\n      title: \"\\u591A Claude \\u5E76\\u53D1\\u5E72\\u6D3B\",\n      description: \"\\u591A\\u5B9E\\u4F8B\\u7BA1\\u7406\\u3001\\u4EFB\\u52A1\\u5206\\u914D\\u548C\\u5E76\\u53D1\\u4F18\\u5316\\u7B56\\u7565\",\n      category: \"concurrency\",\n      difficulty: \"expert\",\n      readTime: \"25 \\u5206\\u949F\",\n      tags: [\"concurrency\", \"multi-instance\", \"optimization\", \"scaling\"],\n      overview: \"\\u9AD8\\u7EA7\\u7528\\u6CD5\\uFF1A\\u5982\\u4F55\\u540C\\u65F6\\u4F7F\\u7528\\u591A\\u4E2A Claude Code \\u5B9E\\u4F8B\\u6765\\u5904\\u7406\\u590D\\u6742\\u9879\\u76EE\\u548C\\u5927\\u89C4\\u6A21\\u4EFB\\u52A1\\u3002\",\n      sections: [\n        { title: \"\\u591A\\u5B9E\\u4F8B\\u67B6\\u6784\\u8BBE\\u8BA1\", content: \"\\u8BBE\\u8BA1\\u591A Claude \\u534F\\u4F5C\\u7684\\u67B6\\u6784\", type: \"text\" },\n        { title: \"\\u4EFB\\u52A1\\u5206\\u914D\\u7B56\\u7565\", content: \"\\u5982\\u4F55\\u5408\\u7406\\u5206\\u914D\\u4EFB\\u52A1\\u7ED9\\u4E0D\\u540C\\u5B9E\\u4F8B\", type: \"list\" },\n        { title: \"\\u5E76\\u53D1\\u63A7\\u5236\\u548C\\u540C\\u6B65\", content: \"\\u907F\\u514D\\u51B2\\u7A81\\u548C\\u4FDD\\u6301\\u4E00\\u81F4\\u6027\", type: \"code\" },\n        { title: \"\\u6027\\u80FD\\u76D1\\u63A7\\u548C\\u4F18\\u5316\", content: \"\\u76D1\\u63A7\\u548C\\u4F18\\u5316\\u591A\\u5B9E\\u4F8B\\u6027\\u80FD\", type: \"text\" }\n      ],\n      tips: [{ type: \"expert\", title: \"\\u4E13\\u5BB6\\u7EA7\\u6280\\u5DE7\", content: \"\\u5408\\u7406\\u7684\\u591A\\u5B9E\\u4F8B\\u4F7F\\u7528\\u53EF\\u4EE5\\u5C06\\u5F00\\u53D1\\u6548\\u7387\\u63D0\\u5347 3-5 \\u500D\" }],\n      lastUpdated: \"2024-07-23\",\n      version: \"1.0.0\"\n    }\n  ];\n\n  // src/client/bestPractices/core/BestPracticesManager.ts\n  var BestPracticesManager = class {\n    constructor() {\n      __publicField(this, \"cardRenderer\");\n      __publicField(this, \"articleRenderer\");\n      __publicField(this, \"eventHandler\");\n      __publicField(this, \"navigationHandler\");\n      __publicField(this, \"articleService\");\n      __publicField(this, \"containerId\", \"best-practices-overview-cards\");\n      this.cardRenderer = new CardRenderer();\n      this.articleRenderer = new ArticleRenderer();\n      this.eventHandler = new EventHandler(this.containerId);\n      this.navigationHandler = new NavigationHandler();\n      this.articleService = new ArticleService();\n    }\n    /**\n     * 初始化最佳实践模块\n     */\n    initialize() {\n      this.renderBestPracticesOverviewCards();\n      this.bindEventListeners();\n    }\n    /**\n     * 渲染最佳实践概览卡片\n     */\n    renderBestPracticesOverviewCards() {\n      const container = document.getElementById(this.containerId);\n      if (!container) {\n        console.warn(`Container with id \"${this.containerId}\" not found`);\n        return;\n      }\n      const cardsHtml = this.cardRenderer.renderCards(bestPracticesCards);\n      container.innerHTML = cardsHtml;\n    }\n    /**\n     * 绑定事件监听器\n     */\n    bindEventListeners() {\n      this.eventHandler.bindEventListeners();\n      this.navigationHandler.bindEventListeners();\n    }\n  };\n\n  // src/client/bestPractices/utils/initialization.ts\n  function initializeApp(callback) {\n    if (document.readyState === \"loading\") {\n      document.addEventListener(\"DOMContentLoaded\", callback);\n    } else {\n      callback();\n    }\n  }\n\n  // src/client/bestPractices/index.ts\n  function initializeBestPractices() {\n    initializeApp(() => {\n      const manager = new BestPracticesManager();\n      manager.initialize();\n    });\n  }\n  window.initializeBestPractices = initializeBestPractices;\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", initializeBestPractices);\n  } else {\n    initializeBestPractices();\n  }\n})();\n";
