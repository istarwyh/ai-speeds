// 自动生成的How to Apply CC 客户端脚本包
// 构建时间: 2025-09-14T10:49:45.730Z
// 请勿手动修改此文件

export const howToApplyCCClientScript = "var HowToApplyCCApp = (() => {\n  var __create = Object.create;\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __getProtoOf = Object.getPrototypeOf;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\n  var __commonJS = (cb, mod) => function __require() {\n    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n  };\n  var __export = (target, all) => {\n    for (var name in all)\n      __defProp(target, name, { get: all[name], enumerable: true });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      for (let key of __getOwnPropNames(from))\n        if (!__hasOwnProp.call(to, key) && key !== except)\n          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n    }\n    return to;\n  };\n  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n    // If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n    mod\n  ));\n  var __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n  var __publicField = (obj, key, value) => {\n    __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n    return value;\n  };\n\n  // node_modules/entities/lib/maps/entities.json\n  var require_entities = __commonJS({\n    \"node_modules/entities/lib/maps/entities.json\"(exports, module) {\n      module.exports = { Aacute: \"\\xC1\", aacute: \"\\xE1\", Abreve: \"\\u0102\", abreve: \"\\u0103\", ac: \"\\u223E\", acd: \"\\u223F\", acE: \"\\u223E\\u0333\", Acirc: \"\\xC2\", acirc: \"\\xE2\", acute: \"\\xB4\", Acy: \"\\u0410\", acy: \"\\u0430\", AElig: \"\\xC6\", aelig: \"\\xE6\", af: \"\\u2061\", Afr: \"\\u{1D504}\", afr: \"\\u{1D51E}\", Agrave: \"\\xC0\", agrave: \"\\xE0\", alefsym: \"\\u2135\", aleph: \"\\u2135\", Alpha: \"\\u0391\", alpha: \"\\u03B1\", Amacr: \"\\u0100\", amacr: \"\\u0101\", amalg: \"\\u2A3F\", amp: \"&\", AMP: \"&\", andand: \"\\u2A55\", And: \"\\u2A53\", and: \"\\u2227\", andd: \"\\u2A5C\", andslope: \"\\u2A58\", andv: \"\\u2A5A\", ang: \"\\u2220\", ange: \"\\u29A4\", angle: \"\\u2220\", angmsdaa: \"\\u29A8\", angmsdab: \"\\u29A9\", angmsdac: \"\\u29AA\", angmsdad: \"\\u29AB\", angmsdae: \"\\u29AC\", angmsdaf: \"\\u29AD\", angmsdag: \"\\u29AE\", angmsdah: \"\\u29AF\", angmsd: \"\\u2221\", angrt: \"\\u221F\", angrtvb: \"\\u22BE\", angrtvbd: \"\\u299D\", angsph: \"\\u2222\", angst: \"\\xC5\", angzarr: \"\\u237C\", Aogon: \"\\u0104\", aogon: \"\\u0105\", Aopf: \"\\u{1D538}\", aopf: \"\\u{1D552}\", apacir: \"\\u2A6F\", ap: \"\\u2248\", apE: \"\\u2A70\", ape: \"\\u224A\", apid: \"\\u224B\", apos: \"'\", ApplyFunction: \"\\u2061\", approx: \"\\u2248\", approxeq: \"\\u224A\", Aring: \"\\xC5\", aring: \"\\xE5\", Ascr: \"\\u{1D49C}\", ascr: \"\\u{1D4B6}\", Assign: \"\\u2254\", ast: \"*\", asymp: \"\\u2248\", asympeq: \"\\u224D\", Atilde: \"\\xC3\", atilde: \"\\xE3\", Auml: \"\\xC4\", auml: \"\\xE4\", awconint: \"\\u2233\", awint: \"\\u2A11\", backcong: \"\\u224C\", backepsilon: \"\\u03F6\", backprime: \"\\u2035\", backsim: \"\\u223D\", backsimeq: \"\\u22CD\", Backslash: \"\\u2216\", Barv: \"\\u2AE7\", barvee: \"\\u22BD\", barwed: \"\\u2305\", Barwed: \"\\u2306\", barwedge: \"\\u2305\", bbrk: \"\\u23B5\", bbrktbrk: \"\\u23B6\", bcong: \"\\u224C\", Bcy: \"\\u0411\", bcy: \"\\u0431\", bdquo: \"\\u201E\", becaus: \"\\u2235\", because: \"\\u2235\", Because: \"\\u2235\", bemptyv: \"\\u29B0\", bepsi: \"\\u03F6\", bernou: \"\\u212C\", Bernoullis: \"\\u212C\", Beta: \"\\u0392\", beta: \"\\u03B2\", beth: \"\\u2136\", between: \"\\u226C\", Bfr: \"\\u{1D505}\", bfr: \"\\u{1D51F}\", bigcap: \"\\u22C2\", bigcirc: \"\\u25EF\", bigcup: \"\\u22C3\", bigodot: \"\\u2A00\", bigoplus: \"\\u2A01\", bigotimes: \"\\u2A02\", bigsqcup: \"\\u2A06\", bigstar: \"\\u2605\", bigtriangledown: \"\\u25BD\", bigtriangleup: \"\\u25B3\", biguplus: \"\\u2A04\", bigvee: \"\\u22C1\", bigwedge: \"\\u22C0\", bkarow: \"\\u290D\", blacklozenge: \"\\u29EB\", blacksquare: \"\\u25AA\", blacktriangle: \"\\u25B4\", blacktriangledown: \"\\u25BE\", blacktriangleleft: \"\\u25C2\", blacktriangleright: \"\\u25B8\", blank: \"\\u2423\", blk12: \"\\u2592\", blk14: \"\\u2591\", blk34: \"\\u2593\", block: \"\\u2588\", bne: \"=\\u20E5\", bnequiv: \"\\u2261\\u20E5\", bNot: \"\\u2AED\", bnot: \"\\u2310\", Bopf: \"\\u{1D539}\", bopf: \"\\u{1D553}\", bot: \"\\u22A5\", bottom: \"\\u22A5\", bowtie: \"\\u22C8\", boxbox: \"\\u29C9\", boxdl: \"\\u2510\", boxdL: \"\\u2555\", boxDl: \"\\u2556\", boxDL: \"\\u2557\", boxdr: \"\\u250C\", boxdR: \"\\u2552\", boxDr: \"\\u2553\", boxDR: \"\\u2554\", boxh: \"\\u2500\", boxH: \"\\u2550\", boxhd: \"\\u252C\", boxHd: \"\\u2564\", boxhD: \"\\u2565\", boxHD: \"\\u2566\", boxhu: \"\\u2534\", boxHu: \"\\u2567\", boxhU: \"\\u2568\", boxHU: \"\\u2569\", boxminus: \"\\u229F\", boxplus: \"\\u229E\", boxtimes: \"\\u22A0\", boxul: \"\\u2518\", boxuL: \"\\u255B\", boxUl: \"\\u255C\", boxUL: \"\\u255D\", boxur: \"\\u2514\", boxuR: \"\\u2558\", boxUr: \"\\u2559\", boxUR: \"\\u255A\", boxv: \"\\u2502\", boxV: \"\\u2551\", boxvh: \"\\u253C\", boxvH: \"\\u256A\", boxVh: \"\\u256B\", boxVH: \"\\u256C\", boxvl: \"\\u2524\", boxvL: \"\\u2561\", boxVl: \"\\u2562\", boxVL: \"\\u2563\", boxvr: \"\\u251C\", boxvR: \"\\u255E\", boxVr: \"\\u255F\", boxVR: \"\\u2560\", bprime: \"\\u2035\", breve: \"\\u02D8\", Breve: \"\\u02D8\", brvbar: \"\\xA6\", bscr: \"\\u{1D4B7}\", Bscr: \"\\u212C\", bsemi: \"\\u204F\", bsim: \"\\u223D\", bsime: \"\\u22CD\", bsolb: \"\\u29C5\", bsol: \"\\\\\", bsolhsub: \"\\u27C8\", bull: \"\\u2022\", bullet: \"\\u2022\", bump: \"\\u224E\", bumpE: \"\\u2AAE\", bumpe: \"\\u224F\", Bumpeq: \"\\u224E\", bumpeq: \"\\u224F\", Cacute: \"\\u0106\", cacute: \"\\u0107\", capand: \"\\u2A44\", capbrcup: \"\\u2A49\", capcap: \"\\u2A4B\", cap: \"\\u2229\", Cap: \"\\u22D2\", capcup: \"\\u2A47\", capdot: \"\\u2A40\", CapitalDifferentialD: \"\\u2145\", caps: \"\\u2229\\uFE00\", caret: \"\\u2041\", caron: \"\\u02C7\", Cayleys: \"\\u212D\", ccaps: \"\\u2A4D\", Ccaron: \"\\u010C\", ccaron: \"\\u010D\", Ccedil: \"\\xC7\", ccedil: \"\\xE7\", Ccirc: \"\\u0108\", ccirc: \"\\u0109\", Cconint: \"\\u2230\", ccups: \"\\u2A4C\", ccupssm: \"\\u2A50\", Cdot: \"\\u010A\", cdot: \"\\u010B\", cedil: \"\\xB8\", Cedilla: \"\\xB8\", cemptyv: \"\\u29B2\", cent: \"\\xA2\", centerdot: \"\\xB7\", CenterDot: \"\\xB7\", cfr: \"\\u{1D520}\", Cfr: \"\\u212D\", CHcy: \"\\u0427\", chcy: \"\\u0447\", check: \"\\u2713\", checkmark: \"\\u2713\", Chi: \"\\u03A7\", chi: \"\\u03C7\", circ: \"\\u02C6\", circeq: \"\\u2257\", circlearrowleft: \"\\u21BA\", circlearrowright: \"\\u21BB\", circledast: \"\\u229B\", circledcirc: \"\\u229A\", circleddash: \"\\u229D\", CircleDot: \"\\u2299\", circledR: \"\\xAE\", circledS: \"\\u24C8\", CircleMinus: \"\\u2296\", CirclePlus: \"\\u2295\", CircleTimes: \"\\u2297\", cir: \"\\u25CB\", cirE: \"\\u29C3\", cire: \"\\u2257\", cirfnint: \"\\u2A10\", cirmid: \"\\u2AEF\", cirscir: \"\\u29C2\", ClockwiseContourIntegral: \"\\u2232\", CloseCurlyDoubleQuote: \"\\u201D\", CloseCurlyQuote: \"\\u2019\", clubs: \"\\u2663\", clubsuit: \"\\u2663\", colon: \":\", Colon: \"\\u2237\", Colone: \"\\u2A74\", colone: \"\\u2254\", coloneq: \"\\u2254\", comma: \",\", commat: \"@\", comp: \"\\u2201\", compfn: \"\\u2218\", complement: \"\\u2201\", complexes: \"\\u2102\", cong: \"\\u2245\", congdot: \"\\u2A6D\", Congruent: \"\\u2261\", conint: \"\\u222E\", Conint: \"\\u222F\", ContourIntegral: \"\\u222E\", copf: \"\\u{1D554}\", Copf: \"\\u2102\", coprod: \"\\u2210\", Coproduct: \"\\u2210\", copy: \"\\xA9\", COPY: \"\\xA9\", copysr: \"\\u2117\", CounterClockwiseContourIntegral: \"\\u2233\", crarr: \"\\u21B5\", cross: \"\\u2717\", Cross: \"\\u2A2F\", Cscr: \"\\u{1D49E}\", cscr: \"\\u{1D4B8}\", csub: \"\\u2ACF\", csube: \"\\u2AD1\", csup: \"\\u2AD0\", csupe: \"\\u2AD2\", ctdot: \"\\u22EF\", cudarrl: \"\\u2938\", cudarrr: \"\\u2935\", cuepr: \"\\u22DE\", cuesc: \"\\u22DF\", cularr: \"\\u21B6\", cularrp: \"\\u293D\", cupbrcap: \"\\u2A48\", cupcap: \"\\u2A46\", CupCap: \"\\u224D\", cup: \"\\u222A\", Cup: \"\\u22D3\", cupcup: \"\\u2A4A\", cupdot: \"\\u228D\", cupor: \"\\u2A45\", cups: \"\\u222A\\uFE00\", curarr: \"\\u21B7\", curarrm: \"\\u293C\", curlyeqprec: \"\\u22DE\", curlyeqsucc: \"\\u22DF\", curlyvee: \"\\u22CE\", curlywedge: \"\\u22CF\", curren: \"\\xA4\", curvearrowleft: \"\\u21B6\", curvearrowright: \"\\u21B7\", cuvee: \"\\u22CE\", cuwed: \"\\u22CF\", cwconint: \"\\u2232\", cwint: \"\\u2231\", cylcty: \"\\u232D\", dagger: \"\\u2020\", Dagger: \"\\u2021\", daleth: \"\\u2138\", darr: \"\\u2193\", Darr: \"\\u21A1\", dArr: \"\\u21D3\", dash: \"\\u2010\", Dashv: \"\\u2AE4\", dashv: \"\\u22A3\", dbkarow: \"\\u290F\", dblac: \"\\u02DD\", Dcaron: \"\\u010E\", dcaron: \"\\u010F\", Dcy: \"\\u0414\", dcy: \"\\u0434\", ddagger: \"\\u2021\", ddarr: \"\\u21CA\", DD: \"\\u2145\", dd: \"\\u2146\", DDotrahd: \"\\u2911\", ddotseq: \"\\u2A77\", deg: \"\\xB0\", Del: \"\\u2207\", Delta: \"\\u0394\", delta: \"\\u03B4\", demptyv: \"\\u29B1\", dfisht: \"\\u297F\", Dfr: \"\\u{1D507}\", dfr: \"\\u{1D521}\", dHar: \"\\u2965\", dharl: \"\\u21C3\", dharr: \"\\u21C2\", DiacriticalAcute: \"\\xB4\", DiacriticalDot: \"\\u02D9\", DiacriticalDoubleAcute: \"\\u02DD\", DiacriticalGrave: \"`\", DiacriticalTilde: \"\\u02DC\", diam: \"\\u22C4\", diamond: \"\\u22C4\", Diamond: \"\\u22C4\", diamondsuit: \"\\u2666\", diams: \"\\u2666\", die: \"\\xA8\", DifferentialD: \"\\u2146\", digamma: \"\\u03DD\", disin: \"\\u22F2\", div: \"\\xF7\", divide: \"\\xF7\", divideontimes: \"\\u22C7\", divonx: \"\\u22C7\", DJcy: \"\\u0402\", djcy: \"\\u0452\", dlcorn: \"\\u231E\", dlcrop: \"\\u230D\", dollar: \"$\", Dopf: \"\\u{1D53B}\", dopf: \"\\u{1D555}\", Dot: \"\\xA8\", dot: \"\\u02D9\", DotDot: \"\\u20DC\", doteq: \"\\u2250\", doteqdot: \"\\u2251\", DotEqual: \"\\u2250\", dotminus: \"\\u2238\", dotplus: \"\\u2214\", dotsquare: \"\\u22A1\", doublebarwedge: \"\\u2306\", DoubleContourIntegral: \"\\u222F\", DoubleDot: \"\\xA8\", DoubleDownArrow: \"\\u21D3\", DoubleLeftArrow: \"\\u21D0\", DoubleLeftRightArrow: \"\\u21D4\", DoubleLeftTee: \"\\u2AE4\", DoubleLongLeftArrow: \"\\u27F8\", DoubleLongLeftRightArrow: \"\\u27FA\", DoubleLongRightArrow: \"\\u27F9\", DoubleRightArrow: \"\\u21D2\", DoubleRightTee: \"\\u22A8\", DoubleUpArrow: \"\\u21D1\", DoubleUpDownArrow: \"\\u21D5\", DoubleVerticalBar: \"\\u2225\", DownArrowBar: \"\\u2913\", downarrow: \"\\u2193\", DownArrow: \"\\u2193\", Downarrow: \"\\u21D3\", DownArrowUpArrow: \"\\u21F5\", DownBreve: \"\\u0311\", downdownarrows: \"\\u21CA\", downharpoonleft: \"\\u21C3\", downharpoonright: \"\\u21C2\", DownLeftRightVector: \"\\u2950\", DownLeftTeeVector: \"\\u295E\", DownLeftVectorBar: \"\\u2956\", DownLeftVector: \"\\u21BD\", DownRightTeeVector: \"\\u295F\", DownRightVectorBar: \"\\u2957\", DownRightVector: \"\\u21C1\", DownTeeArrow: \"\\u21A7\", DownTee: \"\\u22A4\", drbkarow: \"\\u2910\", drcorn: \"\\u231F\", drcrop: \"\\u230C\", Dscr: \"\\u{1D49F}\", dscr: \"\\u{1D4B9}\", DScy: \"\\u0405\", dscy: \"\\u0455\", dsol: \"\\u29F6\", Dstrok: \"\\u0110\", dstrok: \"\\u0111\", dtdot: \"\\u22F1\", dtri: \"\\u25BF\", dtrif: \"\\u25BE\", duarr: \"\\u21F5\", duhar: \"\\u296F\", dwangle: \"\\u29A6\", DZcy: \"\\u040F\", dzcy: \"\\u045F\", dzigrarr: \"\\u27FF\", Eacute: \"\\xC9\", eacute: \"\\xE9\", easter: \"\\u2A6E\", Ecaron: \"\\u011A\", ecaron: \"\\u011B\", Ecirc: \"\\xCA\", ecirc: \"\\xEA\", ecir: \"\\u2256\", ecolon: \"\\u2255\", Ecy: \"\\u042D\", ecy: \"\\u044D\", eDDot: \"\\u2A77\", Edot: \"\\u0116\", edot: \"\\u0117\", eDot: \"\\u2251\", ee: \"\\u2147\", efDot: \"\\u2252\", Efr: \"\\u{1D508}\", efr: \"\\u{1D522}\", eg: \"\\u2A9A\", Egrave: \"\\xC8\", egrave: \"\\xE8\", egs: \"\\u2A96\", egsdot: \"\\u2A98\", el: \"\\u2A99\", Element: \"\\u2208\", elinters: \"\\u23E7\", ell: \"\\u2113\", els: \"\\u2A95\", elsdot: \"\\u2A97\", Emacr: \"\\u0112\", emacr: \"\\u0113\", empty: \"\\u2205\", emptyset: \"\\u2205\", EmptySmallSquare: \"\\u25FB\", emptyv: \"\\u2205\", EmptyVerySmallSquare: \"\\u25AB\", emsp13: \"\\u2004\", emsp14: \"\\u2005\", emsp: \"\\u2003\", ENG: \"\\u014A\", eng: \"\\u014B\", ensp: \"\\u2002\", Eogon: \"\\u0118\", eogon: \"\\u0119\", Eopf: \"\\u{1D53C}\", eopf: \"\\u{1D556}\", epar: \"\\u22D5\", eparsl: \"\\u29E3\", eplus: \"\\u2A71\", epsi: \"\\u03B5\", Epsilon: \"\\u0395\", epsilon: \"\\u03B5\", epsiv: \"\\u03F5\", eqcirc: \"\\u2256\", eqcolon: \"\\u2255\", eqsim: \"\\u2242\", eqslantgtr: \"\\u2A96\", eqslantless: \"\\u2A95\", Equal: \"\\u2A75\", equals: \"=\", EqualTilde: \"\\u2242\", equest: \"\\u225F\", Equilibrium: \"\\u21CC\", equiv: \"\\u2261\", equivDD: \"\\u2A78\", eqvparsl: \"\\u29E5\", erarr: \"\\u2971\", erDot: \"\\u2253\", escr: \"\\u212F\", Escr: \"\\u2130\", esdot: \"\\u2250\", Esim: \"\\u2A73\", esim: \"\\u2242\", Eta: \"\\u0397\", eta: \"\\u03B7\", ETH: \"\\xD0\", eth: \"\\xF0\", Euml: \"\\xCB\", euml: \"\\xEB\", euro: \"\\u20AC\", excl: \"!\", exist: \"\\u2203\", Exists: \"\\u2203\", expectation: \"\\u2130\", exponentiale: \"\\u2147\", ExponentialE: \"\\u2147\", fallingdotseq: \"\\u2252\", Fcy: \"\\u0424\", fcy: \"\\u0444\", female: \"\\u2640\", ffilig: \"\\uFB03\", fflig: \"\\uFB00\", ffllig: \"\\uFB04\", Ffr: \"\\u{1D509}\", ffr: \"\\u{1D523}\", filig: \"\\uFB01\", FilledSmallSquare: \"\\u25FC\", FilledVerySmallSquare: \"\\u25AA\", fjlig: \"fj\", flat: \"\\u266D\", fllig: \"\\uFB02\", fltns: \"\\u25B1\", fnof: \"\\u0192\", Fopf: \"\\u{1D53D}\", fopf: \"\\u{1D557}\", forall: \"\\u2200\", ForAll: \"\\u2200\", fork: \"\\u22D4\", forkv: \"\\u2AD9\", Fouriertrf: \"\\u2131\", fpartint: \"\\u2A0D\", frac12: \"\\xBD\", frac13: \"\\u2153\", frac14: \"\\xBC\", frac15: \"\\u2155\", frac16: \"\\u2159\", frac18: \"\\u215B\", frac23: \"\\u2154\", frac25: \"\\u2156\", frac34: \"\\xBE\", frac35: \"\\u2157\", frac38: \"\\u215C\", frac45: \"\\u2158\", frac56: \"\\u215A\", frac58: \"\\u215D\", frac78: \"\\u215E\", frasl: \"\\u2044\", frown: \"\\u2322\", fscr: \"\\u{1D4BB}\", Fscr: \"\\u2131\", gacute: \"\\u01F5\", Gamma: \"\\u0393\", gamma: \"\\u03B3\", Gammad: \"\\u03DC\", gammad: \"\\u03DD\", gap: \"\\u2A86\", Gbreve: \"\\u011E\", gbreve: \"\\u011F\", Gcedil: \"\\u0122\", Gcirc: \"\\u011C\", gcirc: \"\\u011D\", Gcy: \"\\u0413\", gcy: \"\\u0433\", Gdot: \"\\u0120\", gdot: \"\\u0121\", ge: \"\\u2265\", gE: \"\\u2267\", gEl: \"\\u2A8C\", gel: \"\\u22DB\", geq: \"\\u2265\", geqq: \"\\u2267\", geqslant: \"\\u2A7E\", gescc: \"\\u2AA9\", ges: \"\\u2A7E\", gesdot: \"\\u2A80\", gesdoto: \"\\u2A82\", gesdotol: \"\\u2A84\", gesl: \"\\u22DB\\uFE00\", gesles: \"\\u2A94\", Gfr: \"\\u{1D50A}\", gfr: \"\\u{1D524}\", gg: \"\\u226B\", Gg: \"\\u22D9\", ggg: \"\\u22D9\", gimel: \"\\u2137\", GJcy: \"\\u0403\", gjcy: \"\\u0453\", gla: \"\\u2AA5\", gl: \"\\u2277\", glE: \"\\u2A92\", glj: \"\\u2AA4\", gnap: \"\\u2A8A\", gnapprox: \"\\u2A8A\", gne: \"\\u2A88\", gnE: \"\\u2269\", gneq: \"\\u2A88\", gneqq: \"\\u2269\", gnsim: \"\\u22E7\", Gopf: \"\\u{1D53E}\", gopf: \"\\u{1D558}\", grave: \"`\", GreaterEqual: \"\\u2265\", GreaterEqualLess: \"\\u22DB\", GreaterFullEqual: \"\\u2267\", GreaterGreater: \"\\u2AA2\", GreaterLess: \"\\u2277\", GreaterSlantEqual: \"\\u2A7E\", GreaterTilde: \"\\u2273\", Gscr: \"\\u{1D4A2}\", gscr: \"\\u210A\", gsim: \"\\u2273\", gsime: \"\\u2A8E\", gsiml: \"\\u2A90\", gtcc: \"\\u2AA7\", gtcir: \"\\u2A7A\", gt: \">\", GT: \">\", Gt: \"\\u226B\", gtdot: \"\\u22D7\", gtlPar: \"\\u2995\", gtquest: \"\\u2A7C\", gtrapprox: \"\\u2A86\", gtrarr: \"\\u2978\", gtrdot: \"\\u22D7\", gtreqless: \"\\u22DB\", gtreqqless: \"\\u2A8C\", gtrless: \"\\u2277\", gtrsim: \"\\u2273\", gvertneqq: \"\\u2269\\uFE00\", gvnE: \"\\u2269\\uFE00\", Hacek: \"\\u02C7\", hairsp: \"\\u200A\", half: \"\\xBD\", hamilt: \"\\u210B\", HARDcy: \"\\u042A\", hardcy: \"\\u044A\", harrcir: \"\\u2948\", harr: \"\\u2194\", hArr: \"\\u21D4\", harrw: \"\\u21AD\", Hat: \"^\", hbar: \"\\u210F\", Hcirc: \"\\u0124\", hcirc: \"\\u0125\", hearts: \"\\u2665\", heartsuit: \"\\u2665\", hellip: \"\\u2026\", hercon: \"\\u22B9\", hfr: \"\\u{1D525}\", Hfr: \"\\u210C\", HilbertSpace: \"\\u210B\", hksearow: \"\\u2925\", hkswarow: \"\\u2926\", hoarr: \"\\u21FF\", homtht: \"\\u223B\", hookleftarrow: \"\\u21A9\", hookrightarrow: \"\\u21AA\", hopf: \"\\u{1D559}\", Hopf: \"\\u210D\", horbar: \"\\u2015\", HorizontalLine: \"\\u2500\", hscr: \"\\u{1D4BD}\", Hscr: \"\\u210B\", hslash: \"\\u210F\", Hstrok: \"\\u0126\", hstrok: \"\\u0127\", HumpDownHump: \"\\u224E\", HumpEqual: \"\\u224F\", hybull: \"\\u2043\", hyphen: \"\\u2010\", Iacute: \"\\xCD\", iacute: \"\\xED\", ic: \"\\u2063\", Icirc: \"\\xCE\", icirc: \"\\xEE\", Icy: \"\\u0418\", icy: \"\\u0438\", Idot: \"\\u0130\", IEcy: \"\\u0415\", iecy: \"\\u0435\", iexcl: \"\\xA1\", iff: \"\\u21D4\", ifr: \"\\u{1D526}\", Ifr: \"\\u2111\", Igrave: \"\\xCC\", igrave: \"\\xEC\", ii: \"\\u2148\", iiiint: \"\\u2A0C\", iiint: \"\\u222D\", iinfin: \"\\u29DC\", iiota: \"\\u2129\", IJlig: \"\\u0132\", ijlig: \"\\u0133\", Imacr: \"\\u012A\", imacr: \"\\u012B\", image: \"\\u2111\", ImaginaryI: \"\\u2148\", imagline: \"\\u2110\", imagpart: \"\\u2111\", imath: \"\\u0131\", Im: \"\\u2111\", imof: \"\\u22B7\", imped: \"\\u01B5\", Implies: \"\\u21D2\", incare: \"\\u2105\", in: \"\\u2208\", infin: \"\\u221E\", infintie: \"\\u29DD\", inodot: \"\\u0131\", intcal: \"\\u22BA\", int: \"\\u222B\", Int: \"\\u222C\", integers: \"\\u2124\", Integral: \"\\u222B\", intercal: \"\\u22BA\", Intersection: \"\\u22C2\", intlarhk: \"\\u2A17\", intprod: \"\\u2A3C\", InvisibleComma: \"\\u2063\", InvisibleTimes: \"\\u2062\", IOcy: \"\\u0401\", iocy: \"\\u0451\", Iogon: \"\\u012E\", iogon: \"\\u012F\", Iopf: \"\\u{1D540}\", iopf: \"\\u{1D55A}\", Iota: \"\\u0399\", iota: \"\\u03B9\", iprod: \"\\u2A3C\", iquest: \"\\xBF\", iscr: \"\\u{1D4BE}\", Iscr: \"\\u2110\", isin: \"\\u2208\", isindot: \"\\u22F5\", isinE: \"\\u22F9\", isins: \"\\u22F4\", isinsv: \"\\u22F3\", isinv: \"\\u2208\", it: \"\\u2062\", Itilde: \"\\u0128\", itilde: \"\\u0129\", Iukcy: \"\\u0406\", iukcy: \"\\u0456\", Iuml: \"\\xCF\", iuml: \"\\xEF\", Jcirc: \"\\u0134\", jcirc: \"\\u0135\", Jcy: \"\\u0419\", jcy: \"\\u0439\", Jfr: \"\\u{1D50D}\", jfr: \"\\u{1D527}\", jmath: \"\\u0237\", Jopf: \"\\u{1D541}\", jopf: \"\\u{1D55B}\", Jscr: \"\\u{1D4A5}\", jscr: \"\\u{1D4BF}\", Jsercy: \"\\u0408\", jsercy: \"\\u0458\", Jukcy: \"\\u0404\", jukcy: \"\\u0454\", Kappa: \"\\u039A\", kappa: \"\\u03BA\", kappav: \"\\u03F0\", Kcedil: \"\\u0136\", kcedil: \"\\u0137\", Kcy: \"\\u041A\", kcy: \"\\u043A\", Kfr: \"\\u{1D50E}\", kfr: \"\\u{1D528}\", kgreen: \"\\u0138\", KHcy: \"\\u0425\", khcy: \"\\u0445\", KJcy: \"\\u040C\", kjcy: \"\\u045C\", Kopf: \"\\u{1D542}\", kopf: \"\\u{1D55C}\", Kscr: \"\\u{1D4A6}\", kscr: \"\\u{1D4C0}\", lAarr: \"\\u21DA\", Lacute: \"\\u0139\", lacute: \"\\u013A\", laemptyv: \"\\u29B4\", lagran: \"\\u2112\", Lambda: \"\\u039B\", lambda: \"\\u03BB\", lang: \"\\u27E8\", Lang: \"\\u27EA\", langd: \"\\u2991\", langle: \"\\u27E8\", lap: \"\\u2A85\", Laplacetrf: \"\\u2112\", laquo: \"\\xAB\", larrb: \"\\u21E4\", larrbfs: \"\\u291F\", larr: \"\\u2190\", Larr: \"\\u219E\", lArr: \"\\u21D0\", larrfs: \"\\u291D\", larrhk: \"\\u21A9\", larrlp: \"\\u21AB\", larrpl: \"\\u2939\", larrsim: \"\\u2973\", larrtl: \"\\u21A2\", latail: \"\\u2919\", lAtail: \"\\u291B\", lat: \"\\u2AAB\", late: \"\\u2AAD\", lates: \"\\u2AAD\\uFE00\", lbarr: \"\\u290C\", lBarr: \"\\u290E\", lbbrk: \"\\u2772\", lbrace: \"{\", lbrack: \"[\", lbrke: \"\\u298B\", lbrksld: \"\\u298F\", lbrkslu: \"\\u298D\", Lcaron: \"\\u013D\", lcaron: \"\\u013E\", Lcedil: \"\\u013B\", lcedil: \"\\u013C\", lceil: \"\\u2308\", lcub: \"{\", Lcy: \"\\u041B\", lcy: \"\\u043B\", ldca: \"\\u2936\", ldquo: \"\\u201C\", ldquor: \"\\u201E\", ldrdhar: \"\\u2967\", ldrushar: \"\\u294B\", ldsh: \"\\u21B2\", le: \"\\u2264\", lE: \"\\u2266\", LeftAngleBracket: \"\\u27E8\", LeftArrowBar: \"\\u21E4\", leftarrow: \"\\u2190\", LeftArrow: \"\\u2190\", Leftarrow: \"\\u21D0\", LeftArrowRightArrow: \"\\u21C6\", leftarrowtail: \"\\u21A2\", LeftCeiling: \"\\u2308\", LeftDoubleBracket: \"\\u27E6\", LeftDownTeeVector: \"\\u2961\", LeftDownVectorBar: \"\\u2959\", LeftDownVector: \"\\u21C3\", LeftFloor: \"\\u230A\", leftharpoondown: \"\\u21BD\", leftharpoonup: \"\\u21BC\", leftleftarrows: \"\\u21C7\", leftrightarrow: \"\\u2194\", LeftRightArrow: \"\\u2194\", Leftrightarrow: \"\\u21D4\", leftrightarrows: \"\\u21C6\", leftrightharpoons: \"\\u21CB\", leftrightsquigarrow: \"\\u21AD\", LeftRightVector: \"\\u294E\", LeftTeeArrow: \"\\u21A4\", LeftTee: \"\\u22A3\", LeftTeeVector: \"\\u295A\", leftthreetimes: \"\\u22CB\", LeftTriangleBar: \"\\u29CF\", LeftTriangle: \"\\u22B2\", LeftTriangleEqual: \"\\u22B4\", LeftUpDownVector: \"\\u2951\", LeftUpTeeVector: \"\\u2960\", LeftUpVectorBar: \"\\u2958\", LeftUpVector: \"\\u21BF\", LeftVectorBar: \"\\u2952\", LeftVector: \"\\u21BC\", lEg: \"\\u2A8B\", leg: \"\\u22DA\", leq: \"\\u2264\", leqq: \"\\u2266\", leqslant: \"\\u2A7D\", lescc: \"\\u2AA8\", les: \"\\u2A7D\", lesdot: \"\\u2A7F\", lesdoto: \"\\u2A81\", lesdotor: \"\\u2A83\", lesg: \"\\u22DA\\uFE00\", lesges: \"\\u2A93\", lessapprox: \"\\u2A85\", lessdot: \"\\u22D6\", lesseqgtr: \"\\u22DA\", lesseqqgtr: \"\\u2A8B\", LessEqualGreater: \"\\u22DA\", LessFullEqual: \"\\u2266\", LessGreater: \"\\u2276\", lessgtr: \"\\u2276\", LessLess: \"\\u2AA1\", lesssim: \"\\u2272\", LessSlantEqual: \"\\u2A7D\", LessTilde: \"\\u2272\", lfisht: \"\\u297C\", lfloor: \"\\u230A\", Lfr: \"\\u{1D50F}\", lfr: \"\\u{1D529}\", lg: \"\\u2276\", lgE: \"\\u2A91\", lHar: \"\\u2962\", lhard: \"\\u21BD\", lharu: \"\\u21BC\", lharul: \"\\u296A\", lhblk: \"\\u2584\", LJcy: \"\\u0409\", ljcy: \"\\u0459\", llarr: \"\\u21C7\", ll: \"\\u226A\", Ll: \"\\u22D8\", llcorner: \"\\u231E\", Lleftarrow: \"\\u21DA\", llhard: \"\\u296B\", lltri: \"\\u25FA\", Lmidot: \"\\u013F\", lmidot: \"\\u0140\", lmoustache: \"\\u23B0\", lmoust: \"\\u23B0\", lnap: \"\\u2A89\", lnapprox: \"\\u2A89\", lne: \"\\u2A87\", lnE: \"\\u2268\", lneq: \"\\u2A87\", lneqq: \"\\u2268\", lnsim: \"\\u22E6\", loang: \"\\u27EC\", loarr: \"\\u21FD\", lobrk: \"\\u27E6\", longleftarrow: \"\\u27F5\", LongLeftArrow: \"\\u27F5\", Longleftarrow: \"\\u27F8\", longleftrightarrow: \"\\u27F7\", LongLeftRightArrow: \"\\u27F7\", Longleftrightarrow: \"\\u27FA\", longmapsto: \"\\u27FC\", longrightarrow: \"\\u27F6\", LongRightArrow: \"\\u27F6\", Longrightarrow: \"\\u27F9\", looparrowleft: \"\\u21AB\", looparrowright: \"\\u21AC\", lopar: \"\\u2985\", Lopf: \"\\u{1D543}\", lopf: \"\\u{1D55D}\", loplus: \"\\u2A2D\", lotimes: \"\\u2A34\", lowast: \"\\u2217\", lowbar: \"_\", LowerLeftArrow: \"\\u2199\", LowerRightArrow: \"\\u2198\", loz: \"\\u25CA\", lozenge: \"\\u25CA\", lozf: \"\\u29EB\", lpar: \"(\", lparlt: \"\\u2993\", lrarr: \"\\u21C6\", lrcorner: \"\\u231F\", lrhar: \"\\u21CB\", lrhard: \"\\u296D\", lrm: \"\\u200E\", lrtri: \"\\u22BF\", lsaquo: \"\\u2039\", lscr: \"\\u{1D4C1}\", Lscr: \"\\u2112\", lsh: \"\\u21B0\", Lsh: \"\\u21B0\", lsim: \"\\u2272\", lsime: \"\\u2A8D\", lsimg: \"\\u2A8F\", lsqb: \"[\", lsquo: \"\\u2018\", lsquor: \"\\u201A\", Lstrok: \"\\u0141\", lstrok: \"\\u0142\", ltcc: \"\\u2AA6\", ltcir: \"\\u2A79\", lt: \"<\", LT: \"<\", Lt: \"\\u226A\", ltdot: \"\\u22D6\", lthree: \"\\u22CB\", ltimes: \"\\u22C9\", ltlarr: \"\\u2976\", ltquest: \"\\u2A7B\", ltri: \"\\u25C3\", ltrie: \"\\u22B4\", ltrif: \"\\u25C2\", ltrPar: \"\\u2996\", lurdshar: \"\\u294A\", luruhar: \"\\u2966\", lvertneqq: \"\\u2268\\uFE00\", lvnE: \"\\u2268\\uFE00\", macr: \"\\xAF\", male: \"\\u2642\", malt: \"\\u2720\", maltese: \"\\u2720\", Map: \"\\u2905\", map: \"\\u21A6\", mapsto: \"\\u21A6\", mapstodown: \"\\u21A7\", mapstoleft: \"\\u21A4\", mapstoup: \"\\u21A5\", marker: \"\\u25AE\", mcomma: \"\\u2A29\", Mcy: \"\\u041C\", mcy: \"\\u043C\", mdash: \"\\u2014\", mDDot: \"\\u223A\", measuredangle: \"\\u2221\", MediumSpace: \"\\u205F\", Mellintrf: \"\\u2133\", Mfr: \"\\u{1D510}\", mfr: \"\\u{1D52A}\", mho: \"\\u2127\", micro: \"\\xB5\", midast: \"*\", midcir: \"\\u2AF0\", mid: \"\\u2223\", middot: \"\\xB7\", minusb: \"\\u229F\", minus: \"\\u2212\", minusd: \"\\u2238\", minusdu: \"\\u2A2A\", MinusPlus: \"\\u2213\", mlcp: \"\\u2ADB\", mldr: \"\\u2026\", mnplus: \"\\u2213\", models: \"\\u22A7\", Mopf: \"\\u{1D544}\", mopf: \"\\u{1D55E}\", mp: \"\\u2213\", mscr: \"\\u{1D4C2}\", Mscr: \"\\u2133\", mstpos: \"\\u223E\", Mu: \"\\u039C\", mu: \"\\u03BC\", multimap: \"\\u22B8\", mumap: \"\\u22B8\", nabla: \"\\u2207\", Nacute: \"\\u0143\", nacute: \"\\u0144\", nang: \"\\u2220\\u20D2\", nap: \"\\u2249\", napE: \"\\u2A70\\u0338\", napid: \"\\u224B\\u0338\", napos: \"\\u0149\", napprox: \"\\u2249\", natural: \"\\u266E\", naturals: \"\\u2115\", natur: \"\\u266E\", nbsp: \"\\xA0\", nbump: \"\\u224E\\u0338\", nbumpe: \"\\u224F\\u0338\", ncap: \"\\u2A43\", Ncaron: \"\\u0147\", ncaron: \"\\u0148\", Ncedil: \"\\u0145\", ncedil: \"\\u0146\", ncong: \"\\u2247\", ncongdot: \"\\u2A6D\\u0338\", ncup: \"\\u2A42\", Ncy: \"\\u041D\", ncy: \"\\u043D\", ndash: \"\\u2013\", nearhk: \"\\u2924\", nearr: \"\\u2197\", neArr: \"\\u21D7\", nearrow: \"\\u2197\", ne: \"\\u2260\", nedot: \"\\u2250\\u0338\", NegativeMediumSpace: \"\\u200B\", NegativeThickSpace: \"\\u200B\", NegativeThinSpace: \"\\u200B\", NegativeVeryThinSpace: \"\\u200B\", nequiv: \"\\u2262\", nesear: \"\\u2928\", nesim: \"\\u2242\\u0338\", NestedGreaterGreater: \"\\u226B\", NestedLessLess: \"\\u226A\", NewLine: \"\\n\", nexist: \"\\u2204\", nexists: \"\\u2204\", Nfr: \"\\u{1D511}\", nfr: \"\\u{1D52B}\", ngE: \"\\u2267\\u0338\", nge: \"\\u2271\", ngeq: \"\\u2271\", ngeqq: \"\\u2267\\u0338\", ngeqslant: \"\\u2A7E\\u0338\", nges: \"\\u2A7E\\u0338\", nGg: \"\\u22D9\\u0338\", ngsim: \"\\u2275\", nGt: \"\\u226B\\u20D2\", ngt: \"\\u226F\", ngtr: \"\\u226F\", nGtv: \"\\u226B\\u0338\", nharr: \"\\u21AE\", nhArr: \"\\u21CE\", nhpar: \"\\u2AF2\", ni: \"\\u220B\", nis: \"\\u22FC\", nisd: \"\\u22FA\", niv: \"\\u220B\", NJcy: \"\\u040A\", njcy: \"\\u045A\", nlarr: \"\\u219A\", nlArr: \"\\u21CD\", nldr: \"\\u2025\", nlE: \"\\u2266\\u0338\", nle: \"\\u2270\", nleftarrow: \"\\u219A\", nLeftarrow: \"\\u21CD\", nleftrightarrow: \"\\u21AE\", nLeftrightarrow: \"\\u21CE\", nleq: \"\\u2270\", nleqq: \"\\u2266\\u0338\", nleqslant: \"\\u2A7D\\u0338\", nles: \"\\u2A7D\\u0338\", nless: \"\\u226E\", nLl: \"\\u22D8\\u0338\", nlsim: \"\\u2274\", nLt: \"\\u226A\\u20D2\", nlt: \"\\u226E\", nltri: \"\\u22EA\", nltrie: \"\\u22EC\", nLtv: \"\\u226A\\u0338\", nmid: \"\\u2224\", NoBreak: \"\\u2060\", NonBreakingSpace: \"\\xA0\", nopf: \"\\u{1D55F}\", Nopf: \"\\u2115\", Not: \"\\u2AEC\", not: \"\\xAC\", NotCongruent: \"\\u2262\", NotCupCap: \"\\u226D\", NotDoubleVerticalBar: \"\\u2226\", NotElement: \"\\u2209\", NotEqual: \"\\u2260\", NotEqualTilde: \"\\u2242\\u0338\", NotExists: \"\\u2204\", NotGreater: \"\\u226F\", NotGreaterEqual: \"\\u2271\", NotGreaterFullEqual: \"\\u2267\\u0338\", NotGreaterGreater: \"\\u226B\\u0338\", NotGreaterLess: \"\\u2279\", NotGreaterSlantEqual: \"\\u2A7E\\u0338\", NotGreaterTilde: \"\\u2275\", NotHumpDownHump: \"\\u224E\\u0338\", NotHumpEqual: \"\\u224F\\u0338\", notin: \"\\u2209\", notindot: \"\\u22F5\\u0338\", notinE: \"\\u22F9\\u0338\", notinva: \"\\u2209\", notinvb: \"\\u22F7\", notinvc: \"\\u22F6\", NotLeftTriangleBar: \"\\u29CF\\u0338\", NotLeftTriangle: \"\\u22EA\", NotLeftTriangleEqual: \"\\u22EC\", NotLess: \"\\u226E\", NotLessEqual: \"\\u2270\", NotLessGreater: \"\\u2278\", NotLessLess: \"\\u226A\\u0338\", NotLessSlantEqual: \"\\u2A7D\\u0338\", NotLessTilde: \"\\u2274\", NotNestedGreaterGreater: \"\\u2AA2\\u0338\", NotNestedLessLess: \"\\u2AA1\\u0338\", notni: \"\\u220C\", notniva: \"\\u220C\", notnivb: \"\\u22FE\", notnivc: \"\\u22FD\", NotPrecedes: \"\\u2280\", NotPrecedesEqual: \"\\u2AAF\\u0338\", NotPrecedesSlantEqual: \"\\u22E0\", NotReverseElement: \"\\u220C\", NotRightTriangleBar: \"\\u29D0\\u0338\", NotRightTriangle: \"\\u22EB\", NotRightTriangleEqual: \"\\u22ED\", NotSquareSubset: \"\\u228F\\u0338\", NotSquareSubsetEqual: \"\\u22E2\", NotSquareSuperset: \"\\u2290\\u0338\", NotSquareSupersetEqual: \"\\u22E3\", NotSubset: \"\\u2282\\u20D2\", NotSubsetEqual: \"\\u2288\", NotSucceeds: \"\\u2281\", NotSucceedsEqual: \"\\u2AB0\\u0338\", NotSucceedsSlantEqual: \"\\u22E1\", NotSucceedsTilde: \"\\u227F\\u0338\", NotSuperset: \"\\u2283\\u20D2\", NotSupersetEqual: \"\\u2289\", NotTilde: \"\\u2241\", NotTildeEqual: \"\\u2244\", NotTildeFullEqual: \"\\u2247\", NotTildeTilde: \"\\u2249\", NotVerticalBar: \"\\u2224\", nparallel: \"\\u2226\", npar: \"\\u2226\", nparsl: \"\\u2AFD\\u20E5\", npart: \"\\u2202\\u0338\", npolint: \"\\u2A14\", npr: \"\\u2280\", nprcue: \"\\u22E0\", nprec: \"\\u2280\", npreceq: \"\\u2AAF\\u0338\", npre: \"\\u2AAF\\u0338\", nrarrc: \"\\u2933\\u0338\", nrarr: \"\\u219B\", nrArr: \"\\u21CF\", nrarrw: \"\\u219D\\u0338\", nrightarrow: \"\\u219B\", nRightarrow: \"\\u21CF\", nrtri: \"\\u22EB\", nrtrie: \"\\u22ED\", nsc: \"\\u2281\", nsccue: \"\\u22E1\", nsce: \"\\u2AB0\\u0338\", Nscr: \"\\u{1D4A9}\", nscr: \"\\u{1D4C3}\", nshortmid: \"\\u2224\", nshortparallel: \"\\u2226\", nsim: \"\\u2241\", nsime: \"\\u2244\", nsimeq: \"\\u2244\", nsmid: \"\\u2224\", nspar: \"\\u2226\", nsqsube: \"\\u22E2\", nsqsupe: \"\\u22E3\", nsub: \"\\u2284\", nsubE: \"\\u2AC5\\u0338\", nsube: \"\\u2288\", nsubset: \"\\u2282\\u20D2\", nsubseteq: \"\\u2288\", nsubseteqq: \"\\u2AC5\\u0338\", nsucc: \"\\u2281\", nsucceq: \"\\u2AB0\\u0338\", nsup: \"\\u2285\", nsupE: \"\\u2AC6\\u0338\", nsupe: \"\\u2289\", nsupset: \"\\u2283\\u20D2\", nsupseteq: \"\\u2289\", nsupseteqq: \"\\u2AC6\\u0338\", ntgl: \"\\u2279\", Ntilde: \"\\xD1\", ntilde: \"\\xF1\", ntlg: \"\\u2278\", ntriangleleft: \"\\u22EA\", ntrianglelefteq: \"\\u22EC\", ntriangleright: \"\\u22EB\", ntrianglerighteq: \"\\u22ED\", Nu: \"\\u039D\", nu: \"\\u03BD\", num: \"#\", numero: \"\\u2116\", numsp: \"\\u2007\", nvap: \"\\u224D\\u20D2\", nvdash: \"\\u22AC\", nvDash: \"\\u22AD\", nVdash: \"\\u22AE\", nVDash: \"\\u22AF\", nvge: \"\\u2265\\u20D2\", nvgt: \">\\u20D2\", nvHarr: \"\\u2904\", nvinfin: \"\\u29DE\", nvlArr: \"\\u2902\", nvle: \"\\u2264\\u20D2\", nvlt: \"<\\u20D2\", nvltrie: \"\\u22B4\\u20D2\", nvrArr: \"\\u2903\", nvrtrie: \"\\u22B5\\u20D2\", nvsim: \"\\u223C\\u20D2\", nwarhk: \"\\u2923\", nwarr: \"\\u2196\", nwArr: \"\\u21D6\", nwarrow: \"\\u2196\", nwnear: \"\\u2927\", Oacute: \"\\xD3\", oacute: \"\\xF3\", oast: \"\\u229B\", Ocirc: \"\\xD4\", ocirc: \"\\xF4\", ocir: \"\\u229A\", Ocy: \"\\u041E\", ocy: \"\\u043E\", odash: \"\\u229D\", Odblac: \"\\u0150\", odblac: \"\\u0151\", odiv: \"\\u2A38\", odot: \"\\u2299\", odsold: \"\\u29BC\", OElig: \"\\u0152\", oelig: \"\\u0153\", ofcir: \"\\u29BF\", Ofr: \"\\u{1D512}\", ofr: \"\\u{1D52C}\", ogon: \"\\u02DB\", Ograve: \"\\xD2\", ograve: \"\\xF2\", ogt: \"\\u29C1\", ohbar: \"\\u29B5\", ohm: \"\\u03A9\", oint: \"\\u222E\", olarr: \"\\u21BA\", olcir: \"\\u29BE\", olcross: \"\\u29BB\", oline: \"\\u203E\", olt: \"\\u29C0\", Omacr: \"\\u014C\", omacr: \"\\u014D\", Omega: \"\\u03A9\", omega: \"\\u03C9\", Omicron: \"\\u039F\", omicron: \"\\u03BF\", omid: \"\\u29B6\", ominus: \"\\u2296\", Oopf: \"\\u{1D546}\", oopf: \"\\u{1D560}\", opar: \"\\u29B7\", OpenCurlyDoubleQuote: \"\\u201C\", OpenCurlyQuote: \"\\u2018\", operp: \"\\u29B9\", oplus: \"\\u2295\", orarr: \"\\u21BB\", Or: \"\\u2A54\", or: \"\\u2228\", ord: \"\\u2A5D\", order: \"\\u2134\", orderof: \"\\u2134\", ordf: \"\\xAA\", ordm: \"\\xBA\", origof: \"\\u22B6\", oror: \"\\u2A56\", orslope: \"\\u2A57\", orv: \"\\u2A5B\", oS: \"\\u24C8\", Oscr: \"\\u{1D4AA}\", oscr: \"\\u2134\", Oslash: \"\\xD8\", oslash: \"\\xF8\", osol: \"\\u2298\", Otilde: \"\\xD5\", otilde: \"\\xF5\", otimesas: \"\\u2A36\", Otimes: \"\\u2A37\", otimes: \"\\u2297\", Ouml: \"\\xD6\", ouml: \"\\xF6\", ovbar: \"\\u233D\", OverBar: \"\\u203E\", OverBrace: \"\\u23DE\", OverBracket: \"\\u23B4\", OverParenthesis: \"\\u23DC\", para: \"\\xB6\", parallel: \"\\u2225\", par: \"\\u2225\", parsim: \"\\u2AF3\", parsl: \"\\u2AFD\", part: \"\\u2202\", PartialD: \"\\u2202\", Pcy: \"\\u041F\", pcy: \"\\u043F\", percnt: \"%\", period: \".\", permil: \"\\u2030\", perp: \"\\u22A5\", pertenk: \"\\u2031\", Pfr: \"\\u{1D513}\", pfr: \"\\u{1D52D}\", Phi: \"\\u03A6\", phi: \"\\u03C6\", phiv: \"\\u03D5\", phmmat: \"\\u2133\", phone: \"\\u260E\", Pi: \"\\u03A0\", pi: \"\\u03C0\", pitchfork: \"\\u22D4\", piv: \"\\u03D6\", planck: \"\\u210F\", planckh: \"\\u210E\", plankv: \"\\u210F\", plusacir: \"\\u2A23\", plusb: \"\\u229E\", pluscir: \"\\u2A22\", plus: \"+\", plusdo: \"\\u2214\", plusdu: \"\\u2A25\", pluse: \"\\u2A72\", PlusMinus: \"\\xB1\", plusmn: \"\\xB1\", plussim: \"\\u2A26\", plustwo: \"\\u2A27\", pm: \"\\xB1\", Poincareplane: \"\\u210C\", pointint: \"\\u2A15\", popf: \"\\u{1D561}\", Popf: \"\\u2119\", pound: \"\\xA3\", prap: \"\\u2AB7\", Pr: \"\\u2ABB\", pr: \"\\u227A\", prcue: \"\\u227C\", precapprox: \"\\u2AB7\", prec: \"\\u227A\", preccurlyeq: \"\\u227C\", Precedes: \"\\u227A\", PrecedesEqual: \"\\u2AAF\", PrecedesSlantEqual: \"\\u227C\", PrecedesTilde: \"\\u227E\", preceq: \"\\u2AAF\", precnapprox: \"\\u2AB9\", precneqq: \"\\u2AB5\", precnsim: \"\\u22E8\", pre: \"\\u2AAF\", prE: \"\\u2AB3\", precsim: \"\\u227E\", prime: \"\\u2032\", Prime: \"\\u2033\", primes: \"\\u2119\", prnap: \"\\u2AB9\", prnE: \"\\u2AB5\", prnsim: \"\\u22E8\", prod: \"\\u220F\", Product: \"\\u220F\", profalar: \"\\u232E\", profline: \"\\u2312\", profsurf: \"\\u2313\", prop: \"\\u221D\", Proportional: \"\\u221D\", Proportion: \"\\u2237\", propto: \"\\u221D\", prsim: \"\\u227E\", prurel: \"\\u22B0\", Pscr: \"\\u{1D4AB}\", pscr: \"\\u{1D4C5}\", Psi: \"\\u03A8\", psi: \"\\u03C8\", puncsp: \"\\u2008\", Qfr: \"\\u{1D514}\", qfr: \"\\u{1D52E}\", qint: \"\\u2A0C\", qopf: \"\\u{1D562}\", Qopf: \"\\u211A\", qprime: \"\\u2057\", Qscr: \"\\u{1D4AC}\", qscr: \"\\u{1D4C6}\", quaternions: \"\\u210D\", quatint: \"\\u2A16\", quest: \"?\", questeq: \"\\u225F\", quot: '\"', QUOT: '\"', rAarr: \"\\u21DB\", race: \"\\u223D\\u0331\", Racute: \"\\u0154\", racute: \"\\u0155\", radic: \"\\u221A\", raemptyv: \"\\u29B3\", rang: \"\\u27E9\", Rang: \"\\u27EB\", rangd: \"\\u2992\", range: \"\\u29A5\", rangle: \"\\u27E9\", raquo: \"\\xBB\", rarrap: \"\\u2975\", rarrb: \"\\u21E5\", rarrbfs: \"\\u2920\", rarrc: \"\\u2933\", rarr: \"\\u2192\", Rarr: \"\\u21A0\", rArr: \"\\u21D2\", rarrfs: \"\\u291E\", rarrhk: \"\\u21AA\", rarrlp: \"\\u21AC\", rarrpl: \"\\u2945\", rarrsim: \"\\u2974\", Rarrtl: \"\\u2916\", rarrtl: \"\\u21A3\", rarrw: \"\\u219D\", ratail: \"\\u291A\", rAtail: \"\\u291C\", ratio: \"\\u2236\", rationals: \"\\u211A\", rbarr: \"\\u290D\", rBarr: \"\\u290F\", RBarr: \"\\u2910\", rbbrk: \"\\u2773\", rbrace: \"}\", rbrack: \"]\", rbrke: \"\\u298C\", rbrksld: \"\\u298E\", rbrkslu: \"\\u2990\", Rcaron: \"\\u0158\", rcaron: \"\\u0159\", Rcedil: \"\\u0156\", rcedil: \"\\u0157\", rceil: \"\\u2309\", rcub: \"}\", Rcy: \"\\u0420\", rcy: \"\\u0440\", rdca: \"\\u2937\", rdldhar: \"\\u2969\", rdquo: \"\\u201D\", rdquor: \"\\u201D\", rdsh: \"\\u21B3\", real: \"\\u211C\", realine: \"\\u211B\", realpart: \"\\u211C\", reals: \"\\u211D\", Re: \"\\u211C\", rect: \"\\u25AD\", reg: \"\\xAE\", REG: \"\\xAE\", ReverseElement: \"\\u220B\", ReverseEquilibrium: \"\\u21CB\", ReverseUpEquilibrium: \"\\u296F\", rfisht: \"\\u297D\", rfloor: \"\\u230B\", rfr: \"\\u{1D52F}\", Rfr: \"\\u211C\", rHar: \"\\u2964\", rhard: \"\\u21C1\", rharu: \"\\u21C0\", rharul: \"\\u296C\", Rho: \"\\u03A1\", rho: \"\\u03C1\", rhov: \"\\u03F1\", RightAngleBracket: \"\\u27E9\", RightArrowBar: \"\\u21E5\", rightarrow: \"\\u2192\", RightArrow: \"\\u2192\", Rightarrow: \"\\u21D2\", RightArrowLeftArrow: \"\\u21C4\", rightarrowtail: \"\\u21A3\", RightCeiling: \"\\u2309\", RightDoubleBracket: \"\\u27E7\", RightDownTeeVector: \"\\u295D\", RightDownVectorBar: \"\\u2955\", RightDownVector: \"\\u21C2\", RightFloor: \"\\u230B\", rightharpoondown: \"\\u21C1\", rightharpoonup: \"\\u21C0\", rightleftarrows: \"\\u21C4\", rightleftharpoons: \"\\u21CC\", rightrightarrows: \"\\u21C9\", rightsquigarrow: \"\\u219D\", RightTeeArrow: \"\\u21A6\", RightTee: \"\\u22A2\", RightTeeVector: \"\\u295B\", rightthreetimes: \"\\u22CC\", RightTriangleBar: \"\\u29D0\", RightTriangle: \"\\u22B3\", RightTriangleEqual: \"\\u22B5\", RightUpDownVector: \"\\u294F\", RightUpTeeVector: \"\\u295C\", RightUpVectorBar: \"\\u2954\", RightUpVector: \"\\u21BE\", RightVectorBar: \"\\u2953\", RightVector: \"\\u21C0\", ring: \"\\u02DA\", risingdotseq: \"\\u2253\", rlarr: \"\\u21C4\", rlhar: \"\\u21CC\", rlm: \"\\u200F\", rmoustache: \"\\u23B1\", rmoust: \"\\u23B1\", rnmid: \"\\u2AEE\", roang: \"\\u27ED\", roarr: \"\\u21FE\", robrk: \"\\u27E7\", ropar: \"\\u2986\", ropf: \"\\u{1D563}\", Ropf: \"\\u211D\", roplus: \"\\u2A2E\", rotimes: \"\\u2A35\", RoundImplies: \"\\u2970\", rpar: \")\", rpargt: \"\\u2994\", rppolint: \"\\u2A12\", rrarr: \"\\u21C9\", Rrightarrow: \"\\u21DB\", rsaquo: \"\\u203A\", rscr: \"\\u{1D4C7}\", Rscr: \"\\u211B\", rsh: \"\\u21B1\", Rsh: \"\\u21B1\", rsqb: \"]\", rsquo: \"\\u2019\", rsquor: \"\\u2019\", rthree: \"\\u22CC\", rtimes: \"\\u22CA\", rtri: \"\\u25B9\", rtrie: \"\\u22B5\", rtrif: \"\\u25B8\", rtriltri: \"\\u29CE\", RuleDelayed: \"\\u29F4\", ruluhar: \"\\u2968\", rx: \"\\u211E\", Sacute: \"\\u015A\", sacute: \"\\u015B\", sbquo: \"\\u201A\", scap: \"\\u2AB8\", Scaron: \"\\u0160\", scaron: \"\\u0161\", Sc: \"\\u2ABC\", sc: \"\\u227B\", sccue: \"\\u227D\", sce: \"\\u2AB0\", scE: \"\\u2AB4\", Scedil: \"\\u015E\", scedil: \"\\u015F\", Scirc: \"\\u015C\", scirc: \"\\u015D\", scnap: \"\\u2ABA\", scnE: \"\\u2AB6\", scnsim: \"\\u22E9\", scpolint: \"\\u2A13\", scsim: \"\\u227F\", Scy: \"\\u0421\", scy: \"\\u0441\", sdotb: \"\\u22A1\", sdot: \"\\u22C5\", sdote: \"\\u2A66\", searhk: \"\\u2925\", searr: \"\\u2198\", seArr: \"\\u21D8\", searrow: \"\\u2198\", sect: \"\\xA7\", semi: \";\", seswar: \"\\u2929\", setminus: \"\\u2216\", setmn: \"\\u2216\", sext: \"\\u2736\", Sfr: \"\\u{1D516}\", sfr: \"\\u{1D530}\", sfrown: \"\\u2322\", sharp: \"\\u266F\", SHCHcy: \"\\u0429\", shchcy: \"\\u0449\", SHcy: \"\\u0428\", shcy: \"\\u0448\", ShortDownArrow: \"\\u2193\", ShortLeftArrow: \"\\u2190\", shortmid: \"\\u2223\", shortparallel: \"\\u2225\", ShortRightArrow: \"\\u2192\", ShortUpArrow: \"\\u2191\", shy: \"\\xAD\", Sigma: \"\\u03A3\", sigma: \"\\u03C3\", sigmaf: \"\\u03C2\", sigmav: \"\\u03C2\", sim: \"\\u223C\", simdot: \"\\u2A6A\", sime: \"\\u2243\", simeq: \"\\u2243\", simg: \"\\u2A9E\", simgE: \"\\u2AA0\", siml: \"\\u2A9D\", simlE: \"\\u2A9F\", simne: \"\\u2246\", simplus: \"\\u2A24\", simrarr: \"\\u2972\", slarr: \"\\u2190\", SmallCircle: \"\\u2218\", smallsetminus: \"\\u2216\", smashp: \"\\u2A33\", smeparsl: \"\\u29E4\", smid: \"\\u2223\", smile: \"\\u2323\", smt: \"\\u2AAA\", smte: \"\\u2AAC\", smtes: \"\\u2AAC\\uFE00\", SOFTcy: \"\\u042C\", softcy: \"\\u044C\", solbar: \"\\u233F\", solb: \"\\u29C4\", sol: \"/\", Sopf: \"\\u{1D54A}\", sopf: \"\\u{1D564}\", spades: \"\\u2660\", spadesuit: \"\\u2660\", spar: \"\\u2225\", sqcap: \"\\u2293\", sqcaps: \"\\u2293\\uFE00\", sqcup: \"\\u2294\", sqcups: \"\\u2294\\uFE00\", Sqrt: \"\\u221A\", sqsub: \"\\u228F\", sqsube: \"\\u2291\", sqsubset: \"\\u228F\", sqsubseteq: \"\\u2291\", sqsup: \"\\u2290\", sqsupe: \"\\u2292\", sqsupset: \"\\u2290\", sqsupseteq: \"\\u2292\", square: \"\\u25A1\", Square: \"\\u25A1\", SquareIntersection: \"\\u2293\", SquareSubset: \"\\u228F\", SquareSubsetEqual: \"\\u2291\", SquareSuperset: \"\\u2290\", SquareSupersetEqual: \"\\u2292\", SquareUnion: \"\\u2294\", squarf: \"\\u25AA\", squ: \"\\u25A1\", squf: \"\\u25AA\", srarr: \"\\u2192\", Sscr: \"\\u{1D4AE}\", sscr: \"\\u{1D4C8}\", ssetmn: \"\\u2216\", ssmile: \"\\u2323\", sstarf: \"\\u22C6\", Star: \"\\u22C6\", star: \"\\u2606\", starf: \"\\u2605\", straightepsilon: \"\\u03F5\", straightphi: \"\\u03D5\", strns: \"\\xAF\", sub: \"\\u2282\", Sub: \"\\u22D0\", subdot: \"\\u2ABD\", subE: \"\\u2AC5\", sube: \"\\u2286\", subedot: \"\\u2AC3\", submult: \"\\u2AC1\", subnE: \"\\u2ACB\", subne: \"\\u228A\", subplus: \"\\u2ABF\", subrarr: \"\\u2979\", subset: \"\\u2282\", Subset: \"\\u22D0\", subseteq: \"\\u2286\", subseteqq: \"\\u2AC5\", SubsetEqual: \"\\u2286\", subsetneq: \"\\u228A\", subsetneqq: \"\\u2ACB\", subsim: \"\\u2AC7\", subsub: \"\\u2AD5\", subsup: \"\\u2AD3\", succapprox: \"\\u2AB8\", succ: \"\\u227B\", succcurlyeq: \"\\u227D\", Succeeds: \"\\u227B\", SucceedsEqual: \"\\u2AB0\", SucceedsSlantEqual: \"\\u227D\", SucceedsTilde: \"\\u227F\", succeq: \"\\u2AB0\", succnapprox: \"\\u2ABA\", succneqq: \"\\u2AB6\", succnsim: \"\\u22E9\", succsim: \"\\u227F\", SuchThat: \"\\u220B\", sum: \"\\u2211\", Sum: \"\\u2211\", sung: \"\\u266A\", sup1: \"\\xB9\", sup2: \"\\xB2\", sup3: \"\\xB3\", sup: \"\\u2283\", Sup: \"\\u22D1\", supdot: \"\\u2ABE\", supdsub: \"\\u2AD8\", supE: \"\\u2AC6\", supe: \"\\u2287\", supedot: \"\\u2AC4\", Superset: \"\\u2283\", SupersetEqual: \"\\u2287\", suphsol: \"\\u27C9\", suphsub: \"\\u2AD7\", suplarr: \"\\u297B\", supmult: \"\\u2AC2\", supnE: \"\\u2ACC\", supne: \"\\u228B\", supplus: \"\\u2AC0\", supset: \"\\u2283\", Supset: \"\\u22D1\", supseteq: \"\\u2287\", supseteqq: \"\\u2AC6\", supsetneq: \"\\u228B\", supsetneqq: \"\\u2ACC\", supsim: \"\\u2AC8\", supsub: \"\\u2AD4\", supsup: \"\\u2AD6\", swarhk: \"\\u2926\", swarr: \"\\u2199\", swArr: \"\\u21D9\", swarrow: \"\\u2199\", swnwar: \"\\u292A\", szlig: \"\\xDF\", Tab: \"\t\", target: \"\\u2316\", Tau: \"\\u03A4\", tau: \"\\u03C4\", tbrk: \"\\u23B4\", Tcaron: \"\\u0164\", tcaron: \"\\u0165\", Tcedil: \"\\u0162\", tcedil: \"\\u0163\", Tcy: \"\\u0422\", tcy: \"\\u0442\", tdot: \"\\u20DB\", telrec: \"\\u2315\", Tfr: \"\\u{1D517}\", tfr: \"\\u{1D531}\", there4: \"\\u2234\", therefore: \"\\u2234\", Therefore: \"\\u2234\", Theta: \"\\u0398\", theta: \"\\u03B8\", thetasym: \"\\u03D1\", thetav: \"\\u03D1\", thickapprox: \"\\u2248\", thicksim: \"\\u223C\", ThickSpace: \"\\u205F\\u200A\", ThinSpace: \"\\u2009\", thinsp: \"\\u2009\", thkap: \"\\u2248\", thksim: \"\\u223C\", THORN: \"\\xDE\", thorn: \"\\xFE\", tilde: \"\\u02DC\", Tilde: \"\\u223C\", TildeEqual: \"\\u2243\", TildeFullEqual: \"\\u2245\", TildeTilde: \"\\u2248\", timesbar: \"\\u2A31\", timesb: \"\\u22A0\", times: \"\\xD7\", timesd: \"\\u2A30\", tint: \"\\u222D\", toea: \"\\u2928\", topbot: \"\\u2336\", topcir: \"\\u2AF1\", top: \"\\u22A4\", Topf: \"\\u{1D54B}\", topf: \"\\u{1D565}\", topfork: \"\\u2ADA\", tosa: \"\\u2929\", tprime: \"\\u2034\", trade: \"\\u2122\", TRADE: \"\\u2122\", triangle: \"\\u25B5\", triangledown: \"\\u25BF\", triangleleft: \"\\u25C3\", trianglelefteq: \"\\u22B4\", triangleq: \"\\u225C\", triangleright: \"\\u25B9\", trianglerighteq: \"\\u22B5\", tridot: \"\\u25EC\", trie: \"\\u225C\", triminus: \"\\u2A3A\", TripleDot: \"\\u20DB\", triplus: \"\\u2A39\", trisb: \"\\u29CD\", tritime: \"\\u2A3B\", trpezium: \"\\u23E2\", Tscr: \"\\u{1D4AF}\", tscr: \"\\u{1D4C9}\", TScy: \"\\u0426\", tscy: \"\\u0446\", TSHcy: \"\\u040B\", tshcy: \"\\u045B\", Tstrok: \"\\u0166\", tstrok: \"\\u0167\", twixt: \"\\u226C\", twoheadleftarrow: \"\\u219E\", twoheadrightarrow: \"\\u21A0\", Uacute: \"\\xDA\", uacute: \"\\xFA\", uarr: \"\\u2191\", Uarr: \"\\u219F\", uArr: \"\\u21D1\", Uarrocir: \"\\u2949\", Ubrcy: \"\\u040E\", ubrcy: \"\\u045E\", Ubreve: \"\\u016C\", ubreve: \"\\u016D\", Ucirc: \"\\xDB\", ucirc: \"\\xFB\", Ucy: \"\\u0423\", ucy: \"\\u0443\", udarr: \"\\u21C5\", Udblac: \"\\u0170\", udblac: \"\\u0171\", udhar: \"\\u296E\", ufisht: \"\\u297E\", Ufr: \"\\u{1D518}\", ufr: \"\\u{1D532}\", Ugrave: \"\\xD9\", ugrave: \"\\xF9\", uHar: \"\\u2963\", uharl: \"\\u21BF\", uharr: \"\\u21BE\", uhblk: \"\\u2580\", ulcorn: \"\\u231C\", ulcorner: \"\\u231C\", ulcrop: \"\\u230F\", ultri: \"\\u25F8\", Umacr: \"\\u016A\", umacr: \"\\u016B\", uml: \"\\xA8\", UnderBar: \"_\", UnderBrace: \"\\u23DF\", UnderBracket: \"\\u23B5\", UnderParenthesis: \"\\u23DD\", Union: \"\\u22C3\", UnionPlus: \"\\u228E\", Uogon: \"\\u0172\", uogon: \"\\u0173\", Uopf: \"\\u{1D54C}\", uopf: \"\\u{1D566}\", UpArrowBar: \"\\u2912\", uparrow: \"\\u2191\", UpArrow: \"\\u2191\", Uparrow: \"\\u21D1\", UpArrowDownArrow: \"\\u21C5\", updownarrow: \"\\u2195\", UpDownArrow: \"\\u2195\", Updownarrow: \"\\u21D5\", UpEquilibrium: \"\\u296E\", upharpoonleft: \"\\u21BF\", upharpoonright: \"\\u21BE\", uplus: \"\\u228E\", UpperLeftArrow: \"\\u2196\", UpperRightArrow: \"\\u2197\", upsi: \"\\u03C5\", Upsi: \"\\u03D2\", upsih: \"\\u03D2\", Upsilon: \"\\u03A5\", upsilon: \"\\u03C5\", UpTeeArrow: \"\\u21A5\", UpTee: \"\\u22A5\", upuparrows: \"\\u21C8\", urcorn: \"\\u231D\", urcorner: \"\\u231D\", urcrop: \"\\u230E\", Uring: \"\\u016E\", uring: \"\\u016F\", urtri: \"\\u25F9\", Uscr: \"\\u{1D4B0}\", uscr: \"\\u{1D4CA}\", utdot: \"\\u22F0\", Utilde: \"\\u0168\", utilde: \"\\u0169\", utri: \"\\u25B5\", utrif: \"\\u25B4\", uuarr: \"\\u21C8\", Uuml: \"\\xDC\", uuml: \"\\xFC\", uwangle: \"\\u29A7\", vangrt: \"\\u299C\", varepsilon: \"\\u03F5\", varkappa: \"\\u03F0\", varnothing: \"\\u2205\", varphi: \"\\u03D5\", varpi: \"\\u03D6\", varpropto: \"\\u221D\", varr: \"\\u2195\", vArr: \"\\u21D5\", varrho: \"\\u03F1\", varsigma: \"\\u03C2\", varsubsetneq: \"\\u228A\\uFE00\", varsubsetneqq: \"\\u2ACB\\uFE00\", varsupsetneq: \"\\u228B\\uFE00\", varsupsetneqq: \"\\u2ACC\\uFE00\", vartheta: \"\\u03D1\", vartriangleleft: \"\\u22B2\", vartriangleright: \"\\u22B3\", vBar: \"\\u2AE8\", Vbar: \"\\u2AEB\", vBarv: \"\\u2AE9\", Vcy: \"\\u0412\", vcy: \"\\u0432\", vdash: \"\\u22A2\", vDash: \"\\u22A8\", Vdash: \"\\u22A9\", VDash: \"\\u22AB\", Vdashl: \"\\u2AE6\", veebar: \"\\u22BB\", vee: \"\\u2228\", Vee: \"\\u22C1\", veeeq: \"\\u225A\", vellip: \"\\u22EE\", verbar: \"|\", Verbar: \"\\u2016\", vert: \"|\", Vert: \"\\u2016\", VerticalBar: \"\\u2223\", VerticalLine: \"|\", VerticalSeparator: \"\\u2758\", VerticalTilde: \"\\u2240\", VeryThinSpace: \"\\u200A\", Vfr: \"\\u{1D519}\", vfr: \"\\u{1D533}\", vltri: \"\\u22B2\", vnsub: \"\\u2282\\u20D2\", vnsup: \"\\u2283\\u20D2\", Vopf: \"\\u{1D54D}\", vopf: \"\\u{1D567}\", vprop: \"\\u221D\", vrtri: \"\\u22B3\", Vscr: \"\\u{1D4B1}\", vscr: \"\\u{1D4CB}\", vsubnE: \"\\u2ACB\\uFE00\", vsubne: \"\\u228A\\uFE00\", vsupnE: \"\\u2ACC\\uFE00\", vsupne: \"\\u228B\\uFE00\", Vvdash: \"\\u22AA\", vzigzag: \"\\u299A\", Wcirc: \"\\u0174\", wcirc: \"\\u0175\", wedbar: \"\\u2A5F\", wedge: \"\\u2227\", Wedge: \"\\u22C0\", wedgeq: \"\\u2259\", weierp: \"\\u2118\", Wfr: \"\\u{1D51A}\", wfr: \"\\u{1D534}\", Wopf: \"\\u{1D54E}\", wopf: \"\\u{1D568}\", wp: \"\\u2118\", wr: \"\\u2240\", wreath: \"\\u2240\", Wscr: \"\\u{1D4B2}\", wscr: \"\\u{1D4CC}\", xcap: \"\\u22C2\", xcirc: \"\\u25EF\", xcup: \"\\u22C3\", xdtri: \"\\u25BD\", Xfr: \"\\u{1D51B}\", xfr: \"\\u{1D535}\", xharr: \"\\u27F7\", xhArr: \"\\u27FA\", Xi: \"\\u039E\", xi: \"\\u03BE\", xlarr: \"\\u27F5\", xlArr: \"\\u27F8\", xmap: \"\\u27FC\", xnis: \"\\u22FB\", xodot: \"\\u2A00\", Xopf: \"\\u{1D54F}\", xopf: \"\\u{1D569}\", xoplus: \"\\u2A01\", xotime: \"\\u2A02\", xrarr: \"\\u27F6\", xrArr: \"\\u27F9\", Xscr: \"\\u{1D4B3}\", xscr: \"\\u{1D4CD}\", xsqcup: \"\\u2A06\", xuplus: \"\\u2A04\", xutri: \"\\u25B3\", xvee: \"\\u22C1\", xwedge: \"\\u22C0\", Yacute: \"\\xDD\", yacute: \"\\xFD\", YAcy: \"\\u042F\", yacy: \"\\u044F\", Ycirc: \"\\u0176\", ycirc: \"\\u0177\", Ycy: \"\\u042B\", ycy: \"\\u044B\", yen: \"\\xA5\", Yfr: \"\\u{1D51C}\", yfr: \"\\u{1D536}\", YIcy: \"\\u0407\", yicy: \"\\u0457\", Yopf: \"\\u{1D550}\", yopf: \"\\u{1D56A}\", Yscr: \"\\u{1D4B4}\", yscr: \"\\u{1D4CE}\", YUcy: \"\\u042E\", yucy: \"\\u044E\", yuml: \"\\xFF\", Yuml: \"\\u0178\", Zacute: \"\\u0179\", zacute: \"\\u017A\", Zcaron: \"\\u017D\", zcaron: \"\\u017E\", Zcy: \"\\u0417\", zcy: \"\\u0437\", Zdot: \"\\u017B\", zdot: \"\\u017C\", zeetrf: \"\\u2128\", ZeroWidthSpace: \"\\u200B\", Zeta: \"\\u0396\", zeta: \"\\u03B6\", zfr: \"\\u{1D537}\", Zfr: \"\\u2128\", ZHcy: \"\\u0416\", zhcy: \"\\u0436\", zigrarr: \"\\u21DD\", zopf: \"\\u{1D56B}\", Zopf: \"\\u2124\", Zscr: \"\\u{1D4B5}\", zscr: \"\\u{1D4CF}\", zwj: \"\\u200D\", zwnj: \"\\u200C\" };\n    }\n  });\n\n  // node_modules/markdown-it/lib/common/entities.js\n  var require_entities2 = __commonJS({\n    \"node_modules/markdown-it/lib/common/entities.js\"(exports, module) {\n      \"use strict\";\n      module.exports = require_entities();\n    }\n  });\n\n  // node_modules/uc.micro/categories/P/regex.js\n  var require_regex = __commonJS({\n    \"node_modules/uc.micro/categories/P/regex.js\"(exports, module) {\n      module.exports = /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/;\n    }\n  });\n\n  // node_modules/mdurl/encode.js\n  var require_encode = __commonJS({\n    \"node_modules/mdurl/encode.js\"(exports, module) {\n      \"use strict\";\n      var encodeCache = {};\n      function getEncodeCache(exclude) {\n        var i, ch, cache = encodeCache[exclude];\n        if (cache) {\n          return cache;\n        }\n        cache = encodeCache[exclude] = [];\n        for (i = 0; i < 128; i++) {\n          ch = String.fromCharCode(i);\n          if (/^[0-9a-z]$/i.test(ch)) {\n            cache.push(ch);\n          } else {\n            cache.push(\"%\" + (\"0\" + i.toString(16).toUpperCase()).slice(-2));\n          }\n        }\n        for (i = 0; i < exclude.length; i++) {\n          cache[exclude.charCodeAt(i)] = exclude[i];\n        }\n        return cache;\n      }\n      function encode(string, exclude, keepEscaped) {\n        var i, l, code, nextCode, cache, result = \"\";\n        if (typeof exclude !== \"string\") {\n          keepEscaped = exclude;\n          exclude = encode.defaultChars;\n        }\n        if (typeof keepEscaped === \"undefined\") {\n          keepEscaped = true;\n        }\n        cache = getEncodeCache(exclude);\n        for (i = 0, l = string.length; i < l; i++) {\n          code = string.charCodeAt(i);\n          if (keepEscaped && code === 37 && i + 2 < l) {\n            if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n              result += string.slice(i, i + 3);\n              i += 2;\n              continue;\n            }\n          }\n          if (code < 128) {\n            result += cache[code];\n            continue;\n          }\n          if (code >= 55296 && code <= 57343) {\n            if (code >= 55296 && code <= 56319 && i + 1 < l) {\n              nextCode = string.charCodeAt(i + 1);\n              if (nextCode >= 56320 && nextCode <= 57343) {\n                result += encodeURIComponent(string[i] + string[i + 1]);\n                i++;\n                continue;\n              }\n            }\n            result += \"%EF%BF%BD\";\n            continue;\n          }\n          result += encodeURIComponent(string[i]);\n        }\n        return result;\n      }\n      encode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\n      encode.componentChars = \"-_.!~*'()\";\n      module.exports = encode;\n    }\n  });\n\n  // node_modules/mdurl/decode.js\n  var require_decode = __commonJS({\n    \"node_modules/mdurl/decode.js\"(exports, module) {\n      \"use strict\";\n      var decodeCache = {};\n      function getDecodeCache(exclude) {\n        var i, ch, cache = decodeCache[exclude];\n        if (cache) {\n          return cache;\n        }\n        cache = decodeCache[exclude] = [];\n        for (i = 0; i < 128; i++) {\n          ch = String.fromCharCode(i);\n          cache.push(ch);\n        }\n        for (i = 0; i < exclude.length; i++) {\n          ch = exclude.charCodeAt(i);\n          cache[ch] = \"%\" + (\"0\" + ch.toString(16).toUpperCase()).slice(-2);\n        }\n        return cache;\n      }\n      function decode(string, exclude) {\n        var cache;\n        if (typeof exclude !== \"string\") {\n          exclude = decode.defaultChars;\n        }\n        cache = getDecodeCache(exclude);\n        return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n          var i, l, b1, b2, b3, b4, chr, result = \"\";\n          for (i = 0, l = seq.length; i < l; i += 3) {\n            b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n            if (b1 < 128) {\n              result += cache[b1];\n              continue;\n            }\n            if ((b1 & 224) === 192 && i + 3 < l) {\n              b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n              if ((b2 & 192) === 128) {\n                chr = b1 << 6 & 1984 | b2 & 63;\n                if (chr < 128) {\n                  result += \"\\uFFFD\\uFFFD\";\n                } else {\n                  result += String.fromCharCode(chr);\n                }\n                i += 3;\n                continue;\n              }\n            }\n            if ((b1 & 240) === 224 && i + 6 < l) {\n              b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n              b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n              if ((b2 & 192) === 128 && (b3 & 192) === 128) {\n                chr = b1 << 12 & 61440 | b2 << 6 & 4032 | b3 & 63;\n                if (chr < 2048 || chr >= 55296 && chr <= 57343) {\n                  result += \"\\uFFFD\\uFFFD\\uFFFD\";\n                } else {\n                  result += String.fromCharCode(chr);\n                }\n                i += 6;\n                continue;\n              }\n            }\n            if ((b1 & 248) === 240 && i + 9 < l) {\n              b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n              b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n              b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n              if ((b2 & 192) === 128 && (b3 & 192) === 128 && (b4 & 192) === 128) {\n                chr = b1 << 18 & 1835008 | b2 << 12 & 258048 | b3 << 6 & 4032 | b4 & 63;\n                if (chr < 65536 || chr > 1114111) {\n                  result += \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\";\n                } else {\n                  chr -= 65536;\n                  result += String.fromCharCode(55296 + (chr >> 10), 56320 + (chr & 1023));\n                }\n                i += 9;\n                continue;\n              }\n            }\n            result += \"\\uFFFD\";\n          }\n          return result;\n        });\n      }\n      decode.defaultChars = \";/?:@&=+$,#\";\n      decode.componentChars = \"\";\n      module.exports = decode;\n    }\n  });\n\n  // node_modules/mdurl/format.js\n  var require_format = __commonJS({\n    \"node_modules/mdurl/format.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function format(url) {\n        var result = \"\";\n        result += url.protocol || \"\";\n        result += url.slashes ? \"//\" : \"\";\n        result += url.auth ? url.auth + \"@\" : \"\";\n        if (url.hostname && url.hostname.indexOf(\":\") !== -1) {\n          result += \"[\" + url.hostname + \"]\";\n        } else {\n          result += url.hostname || \"\";\n        }\n        result += url.port ? \":\" + url.port : \"\";\n        result += url.pathname || \"\";\n        result += url.search || \"\";\n        result += url.hash || \"\";\n        return result;\n      };\n    }\n  });\n\n  // node_modules/mdurl/parse.js\n  var require_parse = __commonJS({\n    \"node_modules/mdurl/parse.js\"(exports, module) {\n      \"use strict\";\n      function Url() {\n        this.protocol = null;\n        this.slashes = null;\n        this.auth = null;\n        this.port = null;\n        this.hostname = null;\n        this.hash = null;\n        this.search = null;\n        this.pathname = null;\n      }\n      var protocolPattern = /^([a-z0-9.+-]+:)/i;\n      var portPattern = /:[0-9]*$/;\n      var simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/;\n      var delims = [\"<\", \">\", '\"', \"`\", \" \", \"\\r\", \"\\n\", \"\t\"];\n      var unwise = [\"{\", \"}\", \"|\", \"\\\\\", \"^\", \"`\"].concat(delims);\n      var autoEscape = [\"'\"].concat(unwise);\n      var nonHostChars = [\"%\", \"/\", \"?\", \";\", \"#\"].concat(autoEscape);\n      var hostEndingChars = [\"/\", \"?\", \"#\"];\n      var hostnameMaxLen = 255;\n      var hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/;\n      var hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/;\n      var hostlessProtocol = {\n        \"javascript\": true,\n        \"javascript:\": true\n      };\n      var slashedProtocol = {\n        \"http\": true,\n        \"https\": true,\n        \"ftp\": true,\n        \"gopher\": true,\n        \"file\": true,\n        \"http:\": true,\n        \"https:\": true,\n        \"ftp:\": true,\n        \"gopher:\": true,\n        \"file:\": true\n      };\n      function urlParse(url, slashesDenoteHost) {\n        if (url && url instanceof Url) {\n          return url;\n        }\n        var u = new Url();\n        u.parse(url, slashesDenoteHost);\n        return u;\n      }\n      Url.prototype.parse = function(url, slashesDenoteHost) {\n        var i, l, lowerProto, hec, slashes, rest = url;\n        rest = rest.trim();\n        if (!slashesDenoteHost && url.split(\"#\").length === 1) {\n          var simplePath = simplePathPattern.exec(rest);\n          if (simplePath) {\n            this.pathname = simplePath[1];\n            if (simplePath[2]) {\n              this.search = simplePath[2];\n            }\n            return this;\n          }\n        }\n        var proto = protocolPattern.exec(rest);\n        if (proto) {\n          proto = proto[0];\n          lowerProto = proto.toLowerCase();\n          this.protocol = proto;\n          rest = rest.substr(proto.length);\n        }\n        if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n          slashes = rest.substr(0, 2) === \"//\";\n          if (slashes && !(proto && hostlessProtocol[proto])) {\n            rest = rest.substr(2);\n            this.slashes = true;\n          }\n        }\n        if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n          var hostEnd = -1;\n          for (i = 0; i < hostEndingChars.length; i++) {\n            hec = rest.indexOf(hostEndingChars[i]);\n            if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n              hostEnd = hec;\n            }\n          }\n          var auth, atSign;\n          if (hostEnd === -1) {\n            atSign = rest.lastIndexOf(\"@\");\n          } else {\n            atSign = rest.lastIndexOf(\"@\", hostEnd);\n          }\n          if (atSign !== -1) {\n            auth = rest.slice(0, atSign);\n            rest = rest.slice(atSign + 1);\n            this.auth = auth;\n          }\n          hostEnd = -1;\n          for (i = 0; i < nonHostChars.length; i++) {\n            hec = rest.indexOf(nonHostChars[i]);\n            if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n              hostEnd = hec;\n            }\n          }\n          if (hostEnd === -1) {\n            hostEnd = rest.length;\n          }\n          if (rest[hostEnd - 1] === \":\") {\n            hostEnd--;\n          }\n          var host = rest.slice(0, hostEnd);\n          rest = rest.slice(hostEnd);\n          this.parseHost(host);\n          this.hostname = this.hostname || \"\";\n          var ipv6Hostname = this.hostname[0] === \"[\" && this.hostname[this.hostname.length - 1] === \"]\";\n          if (!ipv6Hostname) {\n            var hostparts = this.hostname.split(/\\./);\n            for (i = 0, l = hostparts.length; i < l; i++) {\n              var part = hostparts[i];\n              if (!part) {\n                continue;\n              }\n              if (!part.match(hostnamePartPattern)) {\n                var newpart = \"\";\n                for (var j = 0, k = part.length; j < k; j++) {\n                  if (part.charCodeAt(j) > 127) {\n                    newpart += \"x\";\n                  } else {\n                    newpart += part[j];\n                  }\n                }\n                if (!newpart.match(hostnamePartPattern)) {\n                  var validParts = hostparts.slice(0, i);\n                  var notHost = hostparts.slice(i + 1);\n                  var bit = part.match(hostnamePartStart);\n                  if (bit) {\n                    validParts.push(bit[1]);\n                    notHost.unshift(bit[2]);\n                  }\n                  if (notHost.length) {\n                    rest = notHost.join(\".\") + rest;\n                  }\n                  this.hostname = validParts.join(\".\");\n                  break;\n                }\n              }\n            }\n          }\n          if (this.hostname.length > hostnameMaxLen) {\n            this.hostname = \"\";\n          }\n          if (ipv6Hostname) {\n            this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n          }\n        }\n        var hash = rest.indexOf(\"#\");\n        if (hash !== -1) {\n          this.hash = rest.substr(hash);\n          rest = rest.slice(0, hash);\n        }\n        var qm = rest.indexOf(\"?\");\n        if (qm !== -1) {\n          this.search = rest.substr(qm);\n          rest = rest.slice(0, qm);\n        }\n        if (rest) {\n          this.pathname = rest;\n        }\n        if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n          this.pathname = \"\";\n        }\n        return this;\n      };\n      Url.prototype.parseHost = function(host) {\n        var port = portPattern.exec(host);\n        if (port) {\n          port = port[0];\n          if (port !== \":\") {\n            this.port = port.substr(1);\n          }\n          host = host.substr(0, host.length - port.length);\n        }\n        if (host) {\n          this.hostname = host;\n        }\n      };\n      module.exports = urlParse;\n    }\n  });\n\n  // node_modules/mdurl/index.js\n  var require_mdurl = __commonJS({\n    \"node_modules/mdurl/index.js\"(exports, module) {\n      \"use strict\";\n      module.exports.encode = require_encode();\n      module.exports.decode = require_decode();\n      module.exports.format = require_format();\n      module.exports.parse = require_parse();\n    }\n  });\n\n  // node_modules/uc.micro/properties/Any/regex.js\n  var require_regex2 = __commonJS({\n    \"node_modules/uc.micro/properties/Any/regex.js\"(exports, module) {\n      module.exports = /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n    }\n  });\n\n  // node_modules/uc.micro/categories/Cc/regex.js\n  var require_regex3 = __commonJS({\n    \"node_modules/uc.micro/categories/Cc/regex.js\"(exports, module) {\n      module.exports = /[\\0-\\x1F\\x7F-\\x9F]/;\n    }\n  });\n\n  // node_modules/uc.micro/categories/Cf/regex.js\n  var require_regex4 = __commonJS({\n    \"node_modules/uc.micro/categories/Cf/regex.js\"(exports, module) {\n      module.exports = /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/;\n    }\n  });\n\n  // node_modules/uc.micro/categories/Z/regex.js\n  var require_regex5 = __commonJS({\n    \"node_modules/uc.micro/categories/Z/regex.js\"(exports, module) {\n      module.exports = /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n    }\n  });\n\n  // node_modules/uc.micro/index.js\n  var require_uc = __commonJS({\n    \"node_modules/uc.micro/index.js\"(exports) {\n      \"use strict\";\n      exports.Any = require_regex2();\n      exports.Cc = require_regex3();\n      exports.Cf = require_regex4();\n      exports.P = require_regex();\n      exports.Z = require_regex5();\n    }\n  });\n\n  // node_modules/markdown-it/lib/common/utils.js\n  var require_utils = __commonJS({\n    \"node_modules/markdown-it/lib/common/utils.js\"(exports) {\n      \"use strict\";\n      function _class(obj) {\n        return Object.prototype.toString.call(obj);\n      }\n      function isString(obj) {\n        return _class(obj) === \"[object String]\";\n      }\n      var _hasOwnProperty = Object.prototype.hasOwnProperty;\n      function has(object, key) {\n        return _hasOwnProperty.call(object, key);\n      }\n      function assign(obj) {\n        var sources = Array.prototype.slice.call(arguments, 1);\n        sources.forEach(function(source) {\n          if (!source) {\n            return;\n          }\n          if (typeof source !== \"object\") {\n            throw new TypeError(source + \"must be object\");\n          }\n          Object.keys(source).forEach(function(key) {\n            obj[key] = source[key];\n          });\n        });\n        return obj;\n      }\n      function arrayReplaceAt(src, pos, newElements) {\n        return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n      }\n      function isValidEntityCode(c) {\n        if (c >= 55296 && c <= 57343) {\n          return false;\n        }\n        if (c >= 64976 && c <= 65007) {\n          return false;\n        }\n        if ((c & 65535) === 65535 || (c & 65535) === 65534) {\n          return false;\n        }\n        if (c >= 0 && c <= 8) {\n          return false;\n        }\n        if (c === 11) {\n          return false;\n        }\n        if (c >= 14 && c <= 31) {\n          return false;\n        }\n        if (c >= 127 && c <= 159) {\n          return false;\n        }\n        if (c > 1114111) {\n          return false;\n        }\n        return true;\n      }\n      function fromCodePoint(c) {\n        if (c > 65535) {\n          c -= 65536;\n          var surrogate1 = 55296 + (c >> 10), surrogate2 = 56320 + (c & 1023);\n          return String.fromCharCode(surrogate1, surrogate2);\n        }\n        return String.fromCharCode(c);\n      }\n      var UNESCAPE_MD_RE = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\n      var ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\n      var UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + \"|\" + ENTITY_RE.source, \"gi\");\n      var DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\n      var entities = require_entities2();\n      function replaceEntityPattern(match, name) {\n        var code;\n        if (has(entities, name)) {\n          return entities[name];\n        }\n        if (name.charCodeAt(0) === 35 && DIGITAL_ENTITY_TEST_RE.test(name)) {\n          code = name[1].toLowerCase() === \"x\" ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n          if (isValidEntityCode(code)) {\n            return fromCodePoint(code);\n          }\n        }\n        return match;\n      }\n      function unescapeMd(str) {\n        if (str.indexOf(\"\\\\\") < 0) {\n          return str;\n        }\n        return str.replace(UNESCAPE_MD_RE, \"$1\");\n      }\n      function unescapeAll(str) {\n        if (str.indexOf(\"\\\\\") < 0 && str.indexOf(\"&\") < 0) {\n          return str;\n        }\n        return str.replace(UNESCAPE_ALL_RE, function(match, escaped, entity) {\n          if (escaped) {\n            return escaped;\n          }\n          return replaceEntityPattern(match, entity);\n        });\n      }\n      var HTML_ESCAPE_TEST_RE = /[&<>\"]/;\n      var HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\n      var HTML_REPLACEMENTS = {\n        \"&\": \"&amp;\",\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\",\n        '\"': \"&quot;\"\n      };\n      function replaceUnsafeChar(ch) {\n        return HTML_REPLACEMENTS[ch];\n      }\n      function escapeHtml(str) {\n        if (HTML_ESCAPE_TEST_RE.test(str)) {\n          return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n        }\n        return str;\n      }\n      var REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n      function escapeRE(str) {\n        return str.replace(REGEXP_ESCAPE_RE, \"\\\\$&\");\n      }\n      function isSpace(code) {\n        switch (code) {\n          case 9:\n          case 32:\n            return true;\n        }\n        return false;\n      }\n      function isWhiteSpace(code) {\n        if (code >= 8192 && code <= 8202) {\n          return true;\n        }\n        switch (code) {\n          case 9:\n          case 10:\n          case 11:\n          case 12:\n          case 13:\n          case 32:\n          case 160:\n          case 5760:\n          case 8239:\n          case 8287:\n          case 12288:\n            return true;\n        }\n        return false;\n      }\n      var UNICODE_PUNCT_RE = require_regex();\n      function isPunctChar(ch) {\n        return UNICODE_PUNCT_RE.test(ch);\n      }\n      function isMdAsciiPunct(ch) {\n        switch (ch) {\n          case 33:\n          case 34:\n          case 35:\n          case 36:\n          case 37:\n          case 38:\n          case 39:\n          case 40:\n          case 41:\n          case 42:\n          case 43:\n          case 44:\n          case 45:\n          case 46:\n          case 47:\n          case 58:\n          case 59:\n          case 60:\n          case 61:\n          case 62:\n          case 63:\n          case 64:\n          case 91:\n          case 92:\n          case 93:\n          case 94:\n          case 95:\n          case 96:\n          case 123:\n          case 124:\n          case 125:\n          case 126:\n            return true;\n          default:\n            return false;\n        }\n      }\n      function normalizeReference(str) {\n        str = str.trim().replace(/\\s+/g, \" \");\n        if (\"\\u1E9E\".toLowerCase() === \"\\u1E7E\") {\n          str = str.replace(/ẞ/g, \"\\xDF\");\n        }\n        return str.toLowerCase().toUpperCase();\n      }\n      exports.lib = {};\n      exports.lib.mdurl = require_mdurl();\n      exports.lib.ucmicro = require_uc();\n      exports.assign = assign;\n      exports.isString = isString;\n      exports.has = has;\n      exports.unescapeMd = unescapeMd;\n      exports.unescapeAll = unescapeAll;\n      exports.isValidEntityCode = isValidEntityCode;\n      exports.fromCodePoint = fromCodePoint;\n      exports.escapeHtml = escapeHtml;\n      exports.arrayReplaceAt = arrayReplaceAt;\n      exports.isSpace = isSpace;\n      exports.isWhiteSpace = isWhiteSpace;\n      exports.isMdAsciiPunct = isMdAsciiPunct;\n      exports.isPunctChar = isPunctChar;\n      exports.escapeRE = escapeRE;\n      exports.normalizeReference = normalizeReference;\n    }\n  });\n\n  // node_modules/markdown-it/lib/helpers/parse_link_label.js\n  var require_parse_link_label = __commonJS({\n    \"node_modules/markdown-it/lib/helpers/parse_link_label.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function parseLinkLabel(state, start, disableNested) {\n        var level, found, marker, prevPos, labelEnd = -1, max = state.posMax, oldPos = state.pos;\n        state.pos = start + 1;\n        level = 1;\n        while (state.pos < max) {\n          marker = state.src.charCodeAt(state.pos);\n          if (marker === 93) {\n            level--;\n            if (level === 0) {\n              found = true;\n              break;\n            }\n          }\n          prevPos = state.pos;\n          state.md.inline.skipToken(state);\n          if (marker === 91) {\n            if (prevPos === state.pos - 1) {\n              level++;\n            } else if (disableNested) {\n              state.pos = oldPos;\n              return -1;\n            }\n          }\n        }\n        if (found) {\n          labelEnd = state.pos;\n        }\n        state.pos = oldPos;\n        return labelEnd;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/helpers/parse_link_destination.js\n  var require_parse_link_destination = __commonJS({\n    \"node_modules/markdown-it/lib/helpers/parse_link_destination.js\"(exports, module) {\n      \"use strict\";\n      var unescapeAll = require_utils().unescapeAll;\n      module.exports = function parseLinkDestination(str, start, max) {\n        var code, level, pos = start, result = {\n          ok: false,\n          pos: 0,\n          lines: 0,\n          str: \"\"\n        };\n        if (str.charCodeAt(pos) === 60) {\n          pos++;\n          while (pos < max) {\n            code = str.charCodeAt(pos);\n            if (code === 10) {\n              return result;\n            }\n            if (code === 60) {\n              return result;\n            }\n            if (code === 62) {\n              result.pos = pos + 1;\n              result.str = unescapeAll(str.slice(start + 1, pos));\n              result.ok = true;\n              return result;\n            }\n            if (code === 92 && pos + 1 < max) {\n              pos += 2;\n              continue;\n            }\n            pos++;\n          }\n          return result;\n        }\n        level = 0;\n        while (pos < max) {\n          code = str.charCodeAt(pos);\n          if (code === 32) {\n            break;\n          }\n          if (code < 32 || code === 127) {\n            break;\n          }\n          if (code === 92 && pos + 1 < max) {\n            if (str.charCodeAt(pos + 1) === 32) {\n              break;\n            }\n            pos += 2;\n            continue;\n          }\n          if (code === 40) {\n            level++;\n            if (level > 32) {\n              return result;\n            }\n          }\n          if (code === 41) {\n            if (level === 0) {\n              break;\n            }\n            level--;\n          }\n          pos++;\n        }\n        if (start === pos) {\n          return result;\n        }\n        if (level !== 0) {\n          return result;\n        }\n        result.str = unescapeAll(str.slice(start, pos));\n        result.pos = pos;\n        result.ok = true;\n        return result;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/helpers/parse_link_title.js\n  var require_parse_link_title = __commonJS({\n    \"node_modules/markdown-it/lib/helpers/parse_link_title.js\"(exports, module) {\n      \"use strict\";\n      var unescapeAll = require_utils().unescapeAll;\n      module.exports = function parseLinkTitle(str, start, max) {\n        var code, marker, lines = 0, pos = start, result = {\n          ok: false,\n          pos: 0,\n          lines: 0,\n          str: \"\"\n        };\n        if (pos >= max) {\n          return result;\n        }\n        marker = str.charCodeAt(pos);\n        if (marker !== 34 && marker !== 39 && marker !== 40) {\n          return result;\n        }\n        pos++;\n        if (marker === 40) {\n          marker = 41;\n        }\n        while (pos < max) {\n          code = str.charCodeAt(pos);\n          if (code === marker) {\n            result.pos = pos + 1;\n            result.lines = lines;\n            result.str = unescapeAll(str.slice(start + 1, pos));\n            result.ok = true;\n            return result;\n          } else if (code === 40 && marker === 41) {\n            return result;\n          } else if (code === 10) {\n            lines++;\n          } else if (code === 92 && pos + 1 < max) {\n            pos++;\n            if (str.charCodeAt(pos) === 10) {\n              lines++;\n            }\n          }\n          pos++;\n        }\n        return result;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/helpers/index.js\n  var require_helpers = __commonJS({\n    \"node_modules/markdown-it/lib/helpers/index.js\"(exports) {\n      \"use strict\";\n      exports.parseLinkLabel = require_parse_link_label();\n      exports.parseLinkDestination = require_parse_link_destination();\n      exports.parseLinkTitle = require_parse_link_title();\n    }\n  });\n\n  // node_modules/markdown-it/lib/renderer.js\n  var require_renderer = __commonJS({\n    \"node_modules/markdown-it/lib/renderer.js\"(exports, module) {\n      \"use strict\";\n      var assign = require_utils().assign;\n      var unescapeAll = require_utils().unescapeAll;\n      var escapeHtml = require_utils().escapeHtml;\n      var default_rules = {};\n      default_rules.code_inline = function(tokens, idx, options, env, slf) {\n        var token = tokens[idx];\n        return \"<code\" + slf.renderAttrs(token) + \">\" + escapeHtml(token.content) + \"</code>\";\n      };\n      default_rules.code_block = function(tokens, idx, options, env, slf) {\n        var token = tokens[idx];\n        return \"<pre\" + slf.renderAttrs(token) + \"><code>\" + escapeHtml(tokens[idx].content) + \"</code></pre>\\n\";\n      };\n      default_rules.fence = function(tokens, idx, options, env, slf) {\n        var token = tokens[idx], info = token.info ? unescapeAll(token.info).trim() : \"\", langName = \"\", langAttrs = \"\", highlighted, i, arr, tmpAttrs, tmpToken;\n        if (info) {\n          arr = info.split(/(\\s+)/g);\n          langName = arr[0];\n          langAttrs = arr.slice(2).join(\"\");\n        }\n        if (options.highlight) {\n          highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n        } else {\n          highlighted = escapeHtml(token.content);\n        }\n        if (highlighted.indexOf(\"<pre\") === 0) {\n          return highlighted + \"\\n\";\n        }\n        if (info) {\n          i = token.attrIndex(\"class\");\n          tmpAttrs = token.attrs ? token.attrs.slice() : [];\n          if (i < 0) {\n            tmpAttrs.push([\"class\", options.langPrefix + langName]);\n          } else {\n            tmpAttrs[i] = tmpAttrs[i].slice();\n            tmpAttrs[i][1] += \" \" + options.langPrefix + langName;\n          }\n          tmpToken = {\n            attrs: tmpAttrs\n          };\n          return \"<pre><code\" + slf.renderAttrs(tmpToken) + \">\" + highlighted + \"</code></pre>\\n\";\n        }\n        return \"<pre><code\" + slf.renderAttrs(token) + \">\" + highlighted + \"</code></pre>\\n\";\n      };\n      default_rules.image = function(tokens, idx, options, env, slf) {\n        var token = tokens[idx];\n        token.attrs[token.attrIndex(\"alt\")][1] = slf.renderInlineAsText(token.children, options, env);\n        return slf.renderToken(tokens, idx, options);\n      };\n      default_rules.hardbreak = function(tokens, idx, options) {\n        return options.xhtmlOut ? \"<br />\\n\" : \"<br>\\n\";\n      };\n      default_rules.softbreak = function(tokens, idx, options) {\n        return options.breaks ? options.xhtmlOut ? \"<br />\\n\" : \"<br>\\n\" : \"\\n\";\n      };\n      default_rules.text = function(tokens, idx) {\n        return escapeHtml(tokens[idx].content);\n      };\n      default_rules.html_block = function(tokens, idx) {\n        return tokens[idx].content;\n      };\n      default_rules.html_inline = function(tokens, idx) {\n        return tokens[idx].content;\n      };\n      function Renderer() {\n        this.rules = assign({}, default_rules);\n      }\n      Renderer.prototype.renderAttrs = function renderAttrs(token) {\n        var i, l, result;\n        if (!token.attrs) {\n          return \"\";\n        }\n        result = \"\";\n        for (i = 0, l = token.attrs.length; i < l; i++) {\n          result += \" \" + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n        }\n        return result;\n      };\n      Renderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n        var nextToken, result = \"\", needLf = false, token = tokens[idx];\n        if (token.hidden) {\n          return \"\";\n        }\n        if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n          result += \"\\n\";\n        }\n        result += (token.nesting === -1 ? \"</\" : \"<\") + token.tag;\n        result += this.renderAttrs(token);\n        if (token.nesting === 0 && options.xhtmlOut) {\n          result += \" /\";\n        }\n        if (token.block) {\n          needLf = true;\n          if (token.nesting === 1) {\n            if (idx + 1 < tokens.length) {\n              nextToken = tokens[idx + 1];\n              if (nextToken.type === \"inline\" || nextToken.hidden) {\n                needLf = false;\n              } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n                needLf = false;\n              }\n            }\n          }\n        }\n        result += needLf ? \">\\n\" : \">\";\n        return result;\n      };\n      Renderer.prototype.renderInline = function(tokens, options, env) {\n        var type, result = \"\", rules = this.rules;\n        for (var i = 0, len = tokens.length; i < len; i++) {\n          type = tokens[i].type;\n          if (typeof rules[type] !== \"undefined\") {\n            result += rules[type](tokens, i, options, env, this);\n          } else {\n            result += this.renderToken(tokens, i, options);\n          }\n        }\n        return result;\n      };\n      Renderer.prototype.renderInlineAsText = function(tokens, options, env) {\n        var result = \"\";\n        for (var i = 0, len = tokens.length; i < len; i++) {\n          if (tokens[i].type === \"text\") {\n            result += tokens[i].content;\n          } else if (tokens[i].type === \"image\") {\n            result += this.renderInlineAsText(tokens[i].children, options, env);\n          } else if (tokens[i].type === \"softbreak\") {\n            result += \"\\n\";\n          }\n        }\n        return result;\n      };\n      Renderer.prototype.render = function(tokens, options, env) {\n        var i, len, type, result = \"\", rules = this.rules;\n        for (i = 0, len = tokens.length; i < len; i++) {\n          type = tokens[i].type;\n          if (type === \"inline\") {\n            result += this.renderInline(tokens[i].children, options, env);\n          } else if (typeof rules[type] !== \"undefined\") {\n            result += rules[type](tokens, i, options, env, this);\n          } else {\n            result += this.renderToken(tokens, i, options, env);\n          }\n        }\n        return result;\n      };\n      module.exports = Renderer;\n    }\n  });\n\n  // node_modules/markdown-it/lib/ruler.js\n  var require_ruler = __commonJS({\n    \"node_modules/markdown-it/lib/ruler.js\"(exports, module) {\n      \"use strict\";\n      function Ruler() {\n        this.__rules__ = [];\n        this.__cache__ = null;\n      }\n      Ruler.prototype.__find__ = function(name) {\n        for (var i = 0; i < this.__rules__.length; i++) {\n          if (this.__rules__[i].name === name) {\n            return i;\n          }\n        }\n        return -1;\n      };\n      Ruler.prototype.__compile__ = function() {\n        var self = this;\n        var chains = [\"\"];\n        self.__rules__.forEach(function(rule) {\n          if (!rule.enabled) {\n            return;\n          }\n          rule.alt.forEach(function(altName) {\n            if (chains.indexOf(altName) < 0) {\n              chains.push(altName);\n            }\n          });\n        });\n        self.__cache__ = {};\n        chains.forEach(function(chain) {\n          self.__cache__[chain] = [];\n          self.__rules__.forEach(function(rule) {\n            if (!rule.enabled) {\n              return;\n            }\n            if (chain && rule.alt.indexOf(chain) < 0) {\n              return;\n            }\n            self.__cache__[chain].push(rule.fn);\n          });\n        });\n      };\n      Ruler.prototype.at = function(name, fn, options) {\n        var index = this.__find__(name);\n        var opt = options || {};\n        if (index === -1) {\n          throw new Error(\"Parser rule not found: \" + name);\n        }\n        this.__rules__[index].fn = fn;\n        this.__rules__[index].alt = opt.alt || [];\n        this.__cache__ = null;\n      };\n      Ruler.prototype.before = function(beforeName, ruleName, fn, options) {\n        var index = this.__find__(beforeName);\n        var opt = options || {};\n        if (index === -1) {\n          throw new Error(\"Parser rule not found: \" + beforeName);\n        }\n        this.__rules__.splice(index, 0, {\n          name: ruleName,\n          enabled: true,\n          fn,\n          alt: opt.alt || []\n        });\n        this.__cache__ = null;\n      };\n      Ruler.prototype.after = function(afterName, ruleName, fn, options) {\n        var index = this.__find__(afterName);\n        var opt = options || {};\n        if (index === -1) {\n          throw new Error(\"Parser rule not found: \" + afterName);\n        }\n        this.__rules__.splice(index + 1, 0, {\n          name: ruleName,\n          enabled: true,\n          fn,\n          alt: opt.alt || []\n        });\n        this.__cache__ = null;\n      };\n      Ruler.prototype.push = function(ruleName, fn, options) {\n        var opt = options || {};\n        this.__rules__.push({\n          name: ruleName,\n          enabled: true,\n          fn,\n          alt: opt.alt || []\n        });\n        this.__cache__ = null;\n      };\n      Ruler.prototype.enable = function(list, ignoreInvalid) {\n        if (!Array.isArray(list)) {\n          list = [list];\n        }\n        var result = [];\n        list.forEach(function(name) {\n          var idx = this.__find__(name);\n          if (idx < 0) {\n            if (ignoreInvalid) {\n              return;\n            }\n            throw new Error(\"Rules manager: invalid rule name \" + name);\n          }\n          this.__rules__[idx].enabled = true;\n          result.push(name);\n        }, this);\n        this.__cache__ = null;\n        return result;\n      };\n      Ruler.prototype.enableOnly = function(list, ignoreInvalid) {\n        if (!Array.isArray(list)) {\n          list = [list];\n        }\n        this.__rules__.forEach(function(rule) {\n          rule.enabled = false;\n        });\n        this.enable(list, ignoreInvalid);\n      };\n      Ruler.prototype.disable = function(list, ignoreInvalid) {\n        if (!Array.isArray(list)) {\n          list = [list];\n        }\n        var result = [];\n        list.forEach(function(name) {\n          var idx = this.__find__(name);\n          if (idx < 0) {\n            if (ignoreInvalid) {\n              return;\n            }\n            throw new Error(\"Rules manager: invalid rule name \" + name);\n          }\n          this.__rules__[idx].enabled = false;\n          result.push(name);\n        }, this);\n        this.__cache__ = null;\n        return result;\n      };\n      Ruler.prototype.getRules = function(chainName) {\n        if (this.__cache__ === null) {\n          this.__compile__();\n        }\n        return this.__cache__[chainName] || [];\n      };\n      module.exports = Ruler;\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_core/normalize.js\n  var require_normalize = __commonJS({\n    \"node_modules/markdown-it/lib/rules_core/normalize.js\"(exports, module) {\n      \"use strict\";\n      var NEWLINES_RE = /\\r\\n?|\\n/g;\n      var NULL_RE = /\\0/g;\n      module.exports = function normalize(state) {\n        var str;\n        str = state.src.replace(NEWLINES_RE, \"\\n\");\n        str = str.replace(NULL_RE, \"\\uFFFD\");\n        state.src = str;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_core/block.js\n  var require_block = __commonJS({\n    \"node_modules/markdown-it/lib/rules_core/block.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function block(state) {\n        var token;\n        if (state.inlineMode) {\n          token = new state.Token(\"inline\", \"\", 0);\n          token.content = state.src;\n          token.map = [0, 1];\n          token.children = [];\n          state.tokens.push(token);\n        } else {\n          state.md.block.parse(state.src, state.md, state.env, state.tokens);\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_core/inline.js\n  var require_inline = __commonJS({\n    \"node_modules/markdown-it/lib/rules_core/inline.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function inline(state) {\n        var tokens = state.tokens, tok, i, l;\n        for (i = 0, l = tokens.length; i < l; i++) {\n          tok = tokens[i];\n          if (tok.type === \"inline\") {\n            state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n          }\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_core/linkify.js\n  var require_linkify = __commonJS({\n    \"node_modules/markdown-it/lib/rules_core/linkify.js\"(exports, module) {\n      \"use strict\";\n      var arrayReplaceAt = require_utils().arrayReplaceAt;\n      function isLinkOpen(str) {\n        return /^<a[>\\s]/i.test(str);\n      }\n      function isLinkClose(str) {\n        return /^<\\/a\\s*>/i.test(str);\n      }\n      module.exports = function linkify(state) {\n        var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos, level, htmlLinkLevel, url, fullUrl, urlText, blockTokens = state.tokens, links;\n        if (!state.md.options.linkify) {\n          return;\n        }\n        for (j = 0, l = blockTokens.length; j < l; j++) {\n          if (blockTokens[j].type !== \"inline\" || !state.md.linkify.pretest(blockTokens[j].content)) {\n            continue;\n          }\n          tokens = blockTokens[j].children;\n          htmlLinkLevel = 0;\n          for (i = tokens.length - 1; i >= 0; i--) {\n            currentToken = tokens[i];\n            if (currentToken.type === \"link_close\") {\n              i--;\n              while (tokens[i].level !== currentToken.level && tokens[i].type !== \"link_open\") {\n                i--;\n              }\n              continue;\n            }\n            if (currentToken.type === \"html_inline\") {\n              if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n                htmlLinkLevel--;\n              }\n              if (isLinkClose(currentToken.content)) {\n                htmlLinkLevel++;\n              }\n            }\n            if (htmlLinkLevel > 0) {\n              continue;\n            }\n            if (currentToken.type === \"text\" && state.md.linkify.test(currentToken.content)) {\n              text = currentToken.content;\n              links = state.md.linkify.match(text);\n              nodes = [];\n              level = currentToken.level;\n              lastPos = 0;\n              if (links.length > 0 && links[0].index === 0 && i > 0 && tokens[i - 1].type === \"text_special\") {\n                links = links.slice(1);\n              }\n              for (ln = 0; ln < links.length; ln++) {\n                url = links[ln].url;\n                fullUrl = state.md.normalizeLink(url);\n                if (!state.md.validateLink(fullUrl)) {\n                  continue;\n                }\n                urlText = links[ln].text;\n                if (!links[ln].schema) {\n                  urlText = state.md.normalizeLinkText(\"http://\" + urlText).replace(/^http:\\/\\//, \"\");\n                } else if (links[ln].schema === \"mailto:\" && !/^mailto:/i.test(urlText)) {\n                  urlText = state.md.normalizeLinkText(\"mailto:\" + urlText).replace(/^mailto:/, \"\");\n                } else {\n                  urlText = state.md.normalizeLinkText(urlText);\n                }\n                pos = links[ln].index;\n                if (pos > lastPos) {\n                  token = new state.Token(\"text\", \"\", 0);\n                  token.content = text.slice(lastPos, pos);\n                  token.level = level;\n                  nodes.push(token);\n                }\n                token = new state.Token(\"link_open\", \"a\", 1);\n                token.attrs = [[\"href\", fullUrl]];\n                token.level = level++;\n                token.markup = \"linkify\";\n                token.info = \"auto\";\n                nodes.push(token);\n                token = new state.Token(\"text\", \"\", 0);\n                token.content = urlText;\n                token.level = level;\n                nodes.push(token);\n                token = new state.Token(\"link_close\", \"a\", -1);\n                token.level = --level;\n                token.markup = \"linkify\";\n                token.info = \"auto\";\n                nodes.push(token);\n                lastPos = links[ln].lastIndex;\n              }\n              if (lastPos < text.length) {\n                token = new state.Token(\"text\", \"\", 0);\n                token.content = text.slice(lastPos);\n                token.level = level;\n                nodes.push(token);\n              }\n              blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n            }\n          }\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_core/replacements.js\n  var require_replacements = __commonJS({\n    \"node_modules/markdown-it/lib/rules_core/replacements.js\"(exports, module) {\n      \"use strict\";\n      var RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n      var SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n      var SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\n      var SCOPED_ABBR = {\n        c: \"\\xA9\",\n        r: \"\\xAE\",\n        tm: \"\\u2122\"\n      };\n      function replaceFn(match, name) {\n        return SCOPED_ABBR[name.toLowerCase()];\n      }\n      function replace_scoped(inlineTokens) {\n        var i, token, inside_autolink = 0;\n        for (i = inlineTokens.length - 1; i >= 0; i--) {\n          token = inlineTokens[i];\n          if (token.type === \"text\" && !inside_autolink) {\n            token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n          }\n          if (token.type === \"link_open\" && token.info === \"auto\") {\n            inside_autolink--;\n          }\n          if (token.type === \"link_close\" && token.info === \"auto\") {\n            inside_autolink++;\n          }\n        }\n      }\n      function replace_rare(inlineTokens) {\n        var i, token, inside_autolink = 0;\n        for (i = inlineTokens.length - 1; i >= 0; i--) {\n          token = inlineTokens[i];\n          if (token.type === \"text\" && !inside_autolink) {\n            if (RARE_RE.test(token.content)) {\n              token.content = token.content.replace(/\\+-/g, \"\\xB1\").replace(/\\.{2,}/g, \"\\u2026\").replace(/([?!])…/g, \"$1..\").replace(/([?!]){4,}/g, \"$1$1$1\").replace(/,{2,}/g, \",\").replace(/(^|[^-])---(?=[^-]|$)/mg, \"$1\\u2014\").replace(/(^|\\s)--(?=\\s|$)/mg, \"$1\\u2013\").replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, \"$1\\u2013\");\n            }\n          }\n          if (token.type === \"link_open\" && token.info === \"auto\") {\n            inside_autolink--;\n          }\n          if (token.type === \"link_close\" && token.info === \"auto\") {\n            inside_autolink++;\n          }\n        }\n      }\n      module.exports = function replace(state) {\n        var blkIdx;\n        if (!state.md.options.typographer) {\n          return;\n        }\n        for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n          if (state.tokens[blkIdx].type !== \"inline\") {\n            continue;\n          }\n          if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n            replace_scoped(state.tokens[blkIdx].children);\n          }\n          if (RARE_RE.test(state.tokens[blkIdx].content)) {\n            replace_rare(state.tokens[blkIdx].children);\n          }\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_core/smartquotes.js\n  var require_smartquotes = __commonJS({\n    \"node_modules/markdown-it/lib/rules_core/smartquotes.js\"(exports, module) {\n      \"use strict\";\n      var isWhiteSpace = require_utils().isWhiteSpace;\n      var isPunctChar = require_utils().isPunctChar;\n      var isMdAsciiPunct = require_utils().isMdAsciiPunct;\n      var QUOTE_TEST_RE = /['\"]/;\n      var QUOTE_RE = /['\"]/g;\n      var APOSTROPHE = \"\\u2019\";\n      function replaceAt(str, index, ch) {\n        return str.slice(0, index) + ch + str.slice(index + 1);\n      }\n      function process_inlines(tokens, state) {\n        var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n        stack = [];\n        for (i = 0; i < tokens.length; i++) {\n          token = tokens[i];\n          thisLevel = tokens[i].level;\n          for (j = stack.length - 1; j >= 0; j--) {\n            if (stack[j].level <= thisLevel) {\n              break;\n            }\n          }\n          stack.length = j + 1;\n          if (token.type !== \"text\") {\n            continue;\n          }\n          text = token.content;\n          pos = 0;\n          max = text.length;\n          OUTER:\n            while (pos < max) {\n              QUOTE_RE.lastIndex = pos;\n              t = QUOTE_RE.exec(text);\n              if (!t) {\n                break;\n              }\n              canOpen = canClose = true;\n              pos = t.index + 1;\n              isSingle = t[0] === \"'\";\n              lastChar = 32;\n              if (t.index - 1 >= 0) {\n                lastChar = text.charCodeAt(t.index - 1);\n              } else {\n                for (j = i - 1; j >= 0; j--) {\n                  if (tokens[j].type === \"softbreak\" || tokens[j].type === \"hardbreak\")\n                    break;\n                  if (!tokens[j].content)\n                    continue;\n                  lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n                  break;\n                }\n              }\n              nextChar = 32;\n              if (pos < max) {\n                nextChar = text.charCodeAt(pos);\n              } else {\n                for (j = i + 1; j < tokens.length; j++) {\n                  if (tokens[j].type === \"softbreak\" || tokens[j].type === \"hardbreak\")\n                    break;\n                  if (!tokens[j].content)\n                    continue;\n                  nextChar = tokens[j].content.charCodeAt(0);\n                  break;\n                }\n              }\n              isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n              isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n              isLastWhiteSpace = isWhiteSpace(lastChar);\n              isNextWhiteSpace = isWhiteSpace(nextChar);\n              if (isNextWhiteSpace) {\n                canOpen = false;\n              } else if (isNextPunctChar) {\n                if (!(isLastWhiteSpace || isLastPunctChar)) {\n                  canOpen = false;\n                }\n              }\n              if (isLastWhiteSpace) {\n                canClose = false;\n              } else if (isLastPunctChar) {\n                if (!(isNextWhiteSpace || isNextPunctChar)) {\n                  canClose = false;\n                }\n              }\n              if (nextChar === 34 && t[0] === '\"') {\n                if (lastChar >= 48 && lastChar <= 57) {\n                  canClose = canOpen = false;\n                }\n              }\n              if (canOpen && canClose) {\n                canOpen = isLastPunctChar;\n                canClose = isNextPunctChar;\n              }\n              if (!canOpen && !canClose) {\n                if (isSingle) {\n                  token.content = replaceAt(token.content, t.index, APOSTROPHE);\n                }\n                continue;\n              }\n              if (canClose) {\n                for (j = stack.length - 1; j >= 0; j--) {\n                  item = stack[j];\n                  if (stack[j].level < thisLevel) {\n                    break;\n                  }\n                  if (item.single === isSingle && stack[j].level === thisLevel) {\n                    item = stack[j];\n                    if (isSingle) {\n                      openQuote = state.md.options.quotes[2];\n                      closeQuote = state.md.options.quotes[3];\n                    } else {\n                      openQuote = state.md.options.quotes[0];\n                      closeQuote = state.md.options.quotes[1];\n                    }\n                    token.content = replaceAt(token.content, t.index, closeQuote);\n                    tokens[item.token].content = replaceAt(\n                      tokens[item.token].content,\n                      item.pos,\n                      openQuote\n                    );\n                    pos += closeQuote.length - 1;\n                    if (item.token === i) {\n                      pos += openQuote.length - 1;\n                    }\n                    text = token.content;\n                    max = text.length;\n                    stack.length = j;\n                    continue OUTER;\n                  }\n                }\n              }\n              if (canOpen) {\n                stack.push({\n                  token: i,\n                  pos: t.index,\n                  single: isSingle,\n                  level: thisLevel\n                });\n              } else if (canClose && isSingle) {\n                token.content = replaceAt(token.content, t.index, APOSTROPHE);\n              }\n            }\n        }\n      }\n      module.exports = function smartquotes(state) {\n        var blkIdx;\n        if (!state.md.options.typographer) {\n          return;\n        }\n        for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n          if (state.tokens[blkIdx].type !== \"inline\" || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n            continue;\n          }\n          process_inlines(state.tokens[blkIdx].children, state);\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_core/text_join.js\n  var require_text_join = __commonJS({\n    \"node_modules/markdown-it/lib/rules_core/text_join.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function text_join(state) {\n        var j, l, tokens, curr, max, last, blockTokens = state.tokens;\n        for (j = 0, l = blockTokens.length; j < l; j++) {\n          if (blockTokens[j].type !== \"inline\")\n            continue;\n          tokens = blockTokens[j].children;\n          max = tokens.length;\n          for (curr = 0; curr < max; curr++) {\n            if (tokens[curr].type === \"text_special\") {\n              tokens[curr].type = \"text\";\n            }\n          }\n          for (curr = last = 0; curr < max; curr++) {\n            if (tokens[curr].type === \"text\" && curr + 1 < max && tokens[curr + 1].type === \"text\") {\n              tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n            } else {\n              if (curr !== last) {\n                tokens[last] = tokens[curr];\n              }\n              last++;\n            }\n          }\n          if (curr !== last) {\n            tokens.length = last;\n          }\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/token.js\n  var require_token = __commonJS({\n    \"node_modules/markdown-it/lib/token.js\"(exports, module) {\n      \"use strict\";\n      function Token(type, tag, nesting) {\n        this.type = type;\n        this.tag = tag;\n        this.attrs = null;\n        this.map = null;\n        this.nesting = nesting;\n        this.level = 0;\n        this.children = null;\n        this.content = \"\";\n        this.markup = \"\";\n        this.info = \"\";\n        this.meta = null;\n        this.block = false;\n        this.hidden = false;\n      }\n      Token.prototype.attrIndex = function attrIndex(name) {\n        var attrs, i, len;\n        if (!this.attrs) {\n          return -1;\n        }\n        attrs = this.attrs;\n        for (i = 0, len = attrs.length; i < len; i++) {\n          if (attrs[i][0] === name) {\n            return i;\n          }\n        }\n        return -1;\n      };\n      Token.prototype.attrPush = function attrPush(attrData) {\n        if (this.attrs) {\n          this.attrs.push(attrData);\n        } else {\n          this.attrs = [attrData];\n        }\n      };\n      Token.prototype.attrSet = function attrSet(name, value) {\n        var idx = this.attrIndex(name), attrData = [name, value];\n        if (idx < 0) {\n          this.attrPush(attrData);\n        } else {\n          this.attrs[idx] = attrData;\n        }\n      };\n      Token.prototype.attrGet = function attrGet(name) {\n        var idx = this.attrIndex(name), value = null;\n        if (idx >= 0) {\n          value = this.attrs[idx][1];\n        }\n        return value;\n      };\n      Token.prototype.attrJoin = function attrJoin(name, value) {\n        var idx = this.attrIndex(name);\n        if (idx < 0) {\n          this.attrPush([name, value]);\n        } else {\n          this.attrs[idx][1] = this.attrs[idx][1] + \" \" + value;\n        }\n      };\n      module.exports = Token;\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_core/state_core.js\n  var require_state_core = __commonJS({\n    \"node_modules/markdown-it/lib/rules_core/state_core.js\"(exports, module) {\n      \"use strict\";\n      var Token = require_token();\n      function StateCore(src, md, env) {\n        this.src = src;\n        this.env = env;\n        this.tokens = [];\n        this.inlineMode = false;\n        this.md = md;\n      }\n      StateCore.prototype.Token = Token;\n      module.exports = StateCore;\n    }\n  });\n\n  // node_modules/markdown-it/lib/parser_core.js\n  var require_parser_core = __commonJS({\n    \"node_modules/markdown-it/lib/parser_core.js\"(exports, module) {\n      \"use strict\";\n      var Ruler = require_ruler();\n      var _rules = [\n        [\"normalize\", require_normalize()],\n        [\"block\", require_block()],\n        [\"inline\", require_inline()],\n        [\"linkify\", require_linkify()],\n        [\"replacements\", require_replacements()],\n        [\"smartquotes\", require_smartquotes()],\n        // `text_join` finds `text_special` tokens (for escape sequences)\n        // and joins them with the rest of the text\n        [\"text_join\", require_text_join()]\n      ];\n      function Core() {\n        this.ruler = new Ruler();\n        for (var i = 0; i < _rules.length; i++) {\n          this.ruler.push(_rules[i][0], _rules[i][1]);\n        }\n      }\n      Core.prototype.process = function(state) {\n        var i, l, rules;\n        rules = this.ruler.getRules(\"\");\n        for (i = 0, l = rules.length; i < l; i++) {\n          rules[i](state);\n        }\n      };\n      Core.prototype.State = require_state_core();\n      module.exports = Core;\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/table.js\n  var require_table = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/table.js\"(exports, module) {\n      \"use strict\";\n      var isSpace = require_utils().isSpace;\n      function getLine(state, line) {\n        var pos = state.bMarks[line] + state.tShift[line], max = state.eMarks[line];\n        return state.src.slice(pos, max);\n      }\n      function escapedSplit(str) {\n        var result = [], pos = 0, max = str.length, ch, isEscaped = false, lastPos = 0, current = \"\";\n        ch = str.charCodeAt(pos);\n        while (pos < max) {\n          if (ch === 124) {\n            if (!isEscaped) {\n              result.push(current + str.substring(lastPos, pos));\n              current = \"\";\n              lastPos = pos + 1;\n            } else {\n              current += str.substring(lastPos, pos - 1);\n              lastPos = pos;\n            }\n          }\n          isEscaped = ch === 92;\n          pos++;\n          ch = str.charCodeAt(pos);\n        }\n        result.push(current + str.substring(lastPos));\n        return result;\n      }\n      module.exports = function table(state, startLine, endLine, silent) {\n        var ch, lineText, pos, i, l, nextLine, columns, columnCount, token, aligns, t, tableLines, tbodyLines, oldParentType, terminate, terminatorRules, firstCh, secondCh;\n        if (startLine + 2 > endLine) {\n          return false;\n        }\n        nextLine = startLine + 1;\n        if (state.sCount[nextLine] < state.blkIndent) {\n          return false;\n        }\n        if (state.sCount[nextLine] - state.blkIndent >= 4) {\n          return false;\n        }\n        pos = state.bMarks[nextLine] + state.tShift[nextLine];\n        if (pos >= state.eMarks[nextLine]) {\n          return false;\n        }\n        firstCh = state.src.charCodeAt(pos++);\n        if (firstCh !== 124 && firstCh !== 45 && firstCh !== 58) {\n          return false;\n        }\n        if (pos >= state.eMarks[nextLine]) {\n          return false;\n        }\n        secondCh = state.src.charCodeAt(pos++);\n        if (secondCh !== 124 && secondCh !== 45 && secondCh !== 58 && !isSpace(secondCh)) {\n          return false;\n        }\n        if (firstCh === 45 && isSpace(secondCh)) {\n          return false;\n        }\n        while (pos < state.eMarks[nextLine]) {\n          ch = state.src.charCodeAt(pos);\n          if (ch !== 124 && ch !== 45 && ch !== 58 && !isSpace(ch)) {\n            return false;\n          }\n          pos++;\n        }\n        lineText = getLine(state, startLine + 1);\n        columns = lineText.split(\"|\");\n        aligns = [];\n        for (i = 0; i < columns.length; i++) {\n          t = columns[i].trim();\n          if (!t) {\n            if (i === 0 || i === columns.length - 1) {\n              continue;\n            } else {\n              return false;\n            }\n          }\n          if (!/^:?-+:?$/.test(t)) {\n            return false;\n          }\n          if (t.charCodeAt(t.length - 1) === 58) {\n            aligns.push(t.charCodeAt(0) === 58 ? \"center\" : \"right\");\n          } else if (t.charCodeAt(0) === 58) {\n            aligns.push(\"left\");\n          } else {\n            aligns.push(\"\");\n          }\n        }\n        lineText = getLine(state, startLine).trim();\n        if (lineText.indexOf(\"|\") === -1) {\n          return false;\n        }\n        if (state.sCount[startLine] - state.blkIndent >= 4) {\n          return false;\n        }\n        columns = escapedSplit(lineText);\n        if (columns.length && columns[0] === \"\")\n          columns.shift();\n        if (columns.length && columns[columns.length - 1] === \"\")\n          columns.pop();\n        columnCount = columns.length;\n        if (columnCount === 0 || columnCount !== aligns.length) {\n          return false;\n        }\n        if (silent) {\n          return true;\n        }\n        oldParentType = state.parentType;\n        state.parentType = \"table\";\n        terminatorRules = state.md.block.ruler.getRules(\"blockquote\");\n        token = state.push(\"table_open\", \"table\", 1);\n        token.map = tableLines = [startLine, 0];\n        token = state.push(\"thead_open\", \"thead\", 1);\n        token.map = [startLine, startLine + 1];\n        token = state.push(\"tr_open\", \"tr\", 1);\n        token.map = [startLine, startLine + 1];\n        for (i = 0; i < columns.length; i++) {\n          token = state.push(\"th_open\", \"th\", 1);\n          if (aligns[i]) {\n            token.attrs = [[\"style\", \"text-align:\" + aligns[i]]];\n          }\n          token = state.push(\"inline\", \"\", 0);\n          token.content = columns[i].trim();\n          token.children = [];\n          token = state.push(\"th_close\", \"th\", -1);\n        }\n        token = state.push(\"tr_close\", \"tr\", -1);\n        token = state.push(\"thead_close\", \"thead\", -1);\n        for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n          if (state.sCount[nextLine] < state.blkIndent) {\n            break;\n          }\n          terminate = false;\n          for (i = 0, l = terminatorRules.length; i < l; i++) {\n            if (terminatorRules[i](state, nextLine, endLine, true)) {\n              terminate = true;\n              break;\n            }\n          }\n          if (terminate) {\n            break;\n          }\n          lineText = getLine(state, nextLine).trim();\n          if (!lineText) {\n            break;\n          }\n          if (state.sCount[nextLine] - state.blkIndent >= 4) {\n            break;\n          }\n          columns = escapedSplit(lineText);\n          if (columns.length && columns[0] === \"\")\n            columns.shift();\n          if (columns.length && columns[columns.length - 1] === \"\")\n            columns.pop();\n          if (nextLine === startLine + 2) {\n            token = state.push(\"tbody_open\", \"tbody\", 1);\n            token.map = tbodyLines = [startLine + 2, 0];\n          }\n          token = state.push(\"tr_open\", \"tr\", 1);\n          token.map = [nextLine, nextLine + 1];\n          for (i = 0; i < columnCount; i++) {\n            token = state.push(\"td_open\", \"td\", 1);\n            if (aligns[i]) {\n              token.attrs = [[\"style\", \"text-align:\" + aligns[i]]];\n            }\n            token = state.push(\"inline\", \"\", 0);\n            token.content = columns[i] ? columns[i].trim() : \"\";\n            token.children = [];\n            token = state.push(\"td_close\", \"td\", -1);\n          }\n          token = state.push(\"tr_close\", \"tr\", -1);\n        }\n        if (tbodyLines) {\n          token = state.push(\"tbody_close\", \"tbody\", -1);\n          tbodyLines[1] = nextLine;\n        }\n        token = state.push(\"table_close\", \"table\", -1);\n        tableLines[1] = nextLine;\n        state.parentType = oldParentType;\n        state.line = nextLine;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/code.js\n  var require_code = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/code.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function code(state, startLine, endLine) {\n        var nextLine, last, token;\n        if (state.sCount[startLine] - state.blkIndent < 4) {\n          return false;\n        }\n        last = nextLine = startLine + 1;\n        while (nextLine < endLine) {\n          if (state.isEmpty(nextLine)) {\n            nextLine++;\n            continue;\n          }\n          if (state.sCount[nextLine] - state.blkIndent >= 4) {\n            nextLine++;\n            last = nextLine;\n            continue;\n          }\n          break;\n        }\n        state.line = last;\n        token = state.push(\"code_block\", \"code\", 0);\n        token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + \"\\n\";\n        token.map = [startLine, state.line];\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/fence.js\n  var require_fence = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/fence.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function fence(state, startLine, endLine, silent) {\n        var marker, len, params, nextLine, mem, token, markup, haveEndMarker = false, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];\n        if (state.sCount[startLine] - state.blkIndent >= 4) {\n          return false;\n        }\n        if (pos + 3 > max) {\n          return false;\n        }\n        marker = state.src.charCodeAt(pos);\n        if (marker !== 126 && marker !== 96) {\n          return false;\n        }\n        mem = pos;\n        pos = state.skipChars(pos, marker);\n        len = pos - mem;\n        if (len < 3) {\n          return false;\n        }\n        markup = state.src.slice(mem, pos);\n        params = state.src.slice(pos, max);\n        if (marker === 96) {\n          if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n            return false;\n          }\n        }\n        if (silent) {\n          return true;\n        }\n        nextLine = startLine;\n        for (; ; ) {\n          nextLine++;\n          if (nextLine >= endLine) {\n            break;\n          }\n          pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n          max = state.eMarks[nextLine];\n          if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n            break;\n          }\n          if (state.src.charCodeAt(pos) !== marker) {\n            continue;\n          }\n          if (state.sCount[nextLine] - state.blkIndent >= 4) {\n            continue;\n          }\n          pos = state.skipChars(pos, marker);\n          if (pos - mem < len) {\n            continue;\n          }\n          pos = state.skipSpaces(pos);\n          if (pos < max) {\n            continue;\n          }\n          haveEndMarker = true;\n          break;\n        }\n        len = state.sCount[startLine];\n        state.line = nextLine + (haveEndMarker ? 1 : 0);\n        token = state.push(\"fence\", \"code\", 0);\n        token.info = params;\n        token.content = state.getLines(startLine + 1, nextLine, len, true);\n        token.markup = markup;\n        token.map = [startLine, state.line];\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/blockquote.js\n  var require_blockquote = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/blockquote.js\"(exports, module) {\n      \"use strict\";\n      var isSpace = require_utils().isSpace;\n      module.exports = function blockquote(state, startLine, endLine, silent) {\n        var adjustTab, ch, i, initial, l, lastLineEmpty, lines, nextLine, offset, oldBMarks, oldBSCount, oldIndent, oldParentType, oldSCount, oldTShift, spaceAfterMarker, terminate, terminatorRules, token, isOutdented, oldLineMax = state.lineMax, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];\n        if (state.sCount[startLine] - state.blkIndent >= 4) {\n          return false;\n        }\n        if (state.src.charCodeAt(pos) !== 62) {\n          return false;\n        }\n        if (silent) {\n          return true;\n        }\n        oldBMarks = [];\n        oldBSCount = [];\n        oldSCount = [];\n        oldTShift = [];\n        terminatorRules = state.md.block.ruler.getRules(\"blockquote\");\n        oldParentType = state.parentType;\n        state.parentType = \"blockquote\";\n        for (nextLine = startLine; nextLine < endLine; nextLine++) {\n          isOutdented = state.sCount[nextLine] < state.blkIndent;\n          pos = state.bMarks[nextLine] + state.tShift[nextLine];\n          max = state.eMarks[nextLine];\n          if (pos >= max) {\n            break;\n          }\n          if (state.src.charCodeAt(pos++) === 62 && !isOutdented) {\n            initial = state.sCount[nextLine] + 1;\n            if (state.src.charCodeAt(pos) === 32) {\n              pos++;\n              initial++;\n              adjustTab = false;\n              spaceAfterMarker = true;\n            } else if (state.src.charCodeAt(pos) === 9) {\n              spaceAfterMarker = true;\n              if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n                pos++;\n                initial++;\n                adjustTab = false;\n              } else {\n                adjustTab = true;\n              }\n            } else {\n              spaceAfterMarker = false;\n            }\n            offset = initial;\n            oldBMarks.push(state.bMarks[nextLine]);\n            state.bMarks[nextLine] = pos;\n            while (pos < max) {\n              ch = state.src.charCodeAt(pos);\n              if (isSpace(ch)) {\n                if (ch === 9) {\n                  offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n                } else {\n                  offset++;\n                }\n              } else {\n                break;\n              }\n              pos++;\n            }\n            lastLineEmpty = pos >= max;\n            oldBSCount.push(state.bsCount[nextLine]);\n            state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n            oldSCount.push(state.sCount[nextLine]);\n            state.sCount[nextLine] = offset - initial;\n            oldTShift.push(state.tShift[nextLine]);\n            state.tShift[nextLine] = pos - state.bMarks[nextLine];\n            continue;\n          }\n          if (lastLineEmpty) {\n            break;\n          }\n          terminate = false;\n          for (i = 0, l = terminatorRules.length; i < l; i++) {\n            if (terminatorRules[i](state, nextLine, endLine, true)) {\n              terminate = true;\n              break;\n            }\n          }\n          if (terminate) {\n            state.lineMax = nextLine;\n            if (state.blkIndent !== 0) {\n              oldBMarks.push(state.bMarks[nextLine]);\n              oldBSCount.push(state.bsCount[nextLine]);\n              oldTShift.push(state.tShift[nextLine]);\n              oldSCount.push(state.sCount[nextLine]);\n              state.sCount[nextLine] -= state.blkIndent;\n            }\n            break;\n          }\n          oldBMarks.push(state.bMarks[nextLine]);\n          oldBSCount.push(state.bsCount[nextLine]);\n          oldTShift.push(state.tShift[nextLine]);\n          oldSCount.push(state.sCount[nextLine]);\n          state.sCount[nextLine] = -1;\n        }\n        oldIndent = state.blkIndent;\n        state.blkIndent = 0;\n        token = state.push(\"blockquote_open\", \"blockquote\", 1);\n        token.markup = \">\";\n        token.map = lines = [startLine, 0];\n        state.md.block.tokenize(state, startLine, nextLine);\n        token = state.push(\"blockquote_close\", \"blockquote\", -1);\n        token.markup = \">\";\n        state.lineMax = oldLineMax;\n        state.parentType = oldParentType;\n        lines[1] = state.line;\n        for (i = 0; i < oldTShift.length; i++) {\n          state.bMarks[i + startLine] = oldBMarks[i];\n          state.tShift[i + startLine] = oldTShift[i];\n          state.sCount[i + startLine] = oldSCount[i];\n          state.bsCount[i + startLine] = oldBSCount[i];\n        }\n        state.blkIndent = oldIndent;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/hr.js\n  var require_hr = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/hr.js\"(exports, module) {\n      \"use strict\";\n      var isSpace = require_utils().isSpace;\n      module.exports = function hr(state, startLine, endLine, silent) {\n        var marker, cnt, ch, token, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];\n        if (state.sCount[startLine] - state.blkIndent >= 4) {\n          return false;\n        }\n        marker = state.src.charCodeAt(pos++);\n        if (marker !== 42 && marker !== 45 && marker !== 95) {\n          return false;\n        }\n        cnt = 1;\n        while (pos < max) {\n          ch = state.src.charCodeAt(pos++);\n          if (ch !== marker && !isSpace(ch)) {\n            return false;\n          }\n          if (ch === marker) {\n            cnt++;\n          }\n        }\n        if (cnt < 3) {\n          return false;\n        }\n        if (silent) {\n          return true;\n        }\n        state.line = startLine + 1;\n        token = state.push(\"hr\", \"hr\", 0);\n        token.map = [startLine, state.line];\n        token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/list.js\n  var require_list = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/list.js\"(exports, module) {\n      \"use strict\";\n      var isSpace = require_utils().isSpace;\n      function skipBulletListMarker(state, startLine) {\n        var marker, pos, max, ch;\n        pos = state.bMarks[startLine] + state.tShift[startLine];\n        max = state.eMarks[startLine];\n        marker = state.src.charCodeAt(pos++);\n        if (marker !== 42 && marker !== 45 && marker !== 43) {\n          return -1;\n        }\n        if (pos < max) {\n          ch = state.src.charCodeAt(pos);\n          if (!isSpace(ch)) {\n            return -1;\n          }\n        }\n        return pos;\n      }\n      function skipOrderedListMarker(state, startLine) {\n        var ch, start = state.bMarks[startLine] + state.tShift[startLine], pos = start, max = state.eMarks[startLine];\n        if (pos + 1 >= max) {\n          return -1;\n        }\n        ch = state.src.charCodeAt(pos++);\n        if (ch < 48 || ch > 57) {\n          return -1;\n        }\n        for (; ; ) {\n          if (pos >= max) {\n            return -1;\n          }\n          ch = state.src.charCodeAt(pos++);\n          if (ch >= 48 && ch <= 57) {\n            if (pos - start >= 10) {\n              return -1;\n            }\n            continue;\n          }\n          if (ch === 41 || ch === 46) {\n            break;\n          }\n          return -1;\n        }\n        if (pos < max) {\n          ch = state.src.charCodeAt(pos);\n          if (!isSpace(ch)) {\n            return -1;\n          }\n        }\n        return pos;\n      }\n      function markTightParagraphs(state, idx) {\n        var i, l, level = state.level + 2;\n        for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n          if (state.tokens[i].level === level && state.tokens[i].type === \"paragraph_open\") {\n            state.tokens[i + 2].hidden = true;\n            state.tokens[i].hidden = true;\n            i += 2;\n          }\n        }\n      }\n      module.exports = function list(state, startLine, endLine, silent) {\n        var ch, contentStart, i, indent, indentAfterMarker, initial, isOrdered, itemLines, l, listLines, listTokIdx, markerCharCode, markerValue, max, offset, oldListIndent, oldParentType, oldSCount, oldTShift, oldTight, pos, posAfterMarker, prevEmptyEnd, start, terminate, terminatorRules, token, nextLine = startLine, isTerminatingParagraph = false, tight = true;\n        if (state.sCount[nextLine] - state.blkIndent >= 4) {\n          return false;\n        }\n        if (state.listIndent >= 0 && state.sCount[nextLine] - state.listIndent >= 4 && state.sCount[nextLine] < state.blkIndent) {\n          return false;\n        }\n        if (silent && state.parentType === \"paragraph\") {\n          if (state.sCount[nextLine] >= state.blkIndent) {\n            isTerminatingParagraph = true;\n          }\n        }\n        if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n          isOrdered = true;\n          start = state.bMarks[nextLine] + state.tShift[nextLine];\n          markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n          if (isTerminatingParagraph && markerValue !== 1)\n            return false;\n        } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n          isOrdered = false;\n        } else {\n          return false;\n        }\n        if (isTerminatingParagraph) {\n          if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine])\n            return false;\n        }\n        if (silent) {\n          return true;\n        }\n        markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n        listTokIdx = state.tokens.length;\n        if (isOrdered) {\n          token = state.push(\"ordered_list_open\", \"ol\", 1);\n          if (markerValue !== 1) {\n            token.attrs = [[\"start\", markerValue]];\n          }\n        } else {\n          token = state.push(\"bullet_list_open\", \"ul\", 1);\n        }\n        token.map = listLines = [nextLine, 0];\n        token.markup = String.fromCharCode(markerCharCode);\n        prevEmptyEnd = false;\n        terminatorRules = state.md.block.ruler.getRules(\"list\");\n        oldParentType = state.parentType;\n        state.parentType = \"list\";\n        while (nextLine < endLine) {\n          pos = posAfterMarker;\n          max = state.eMarks[nextLine];\n          initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine]);\n          while (pos < max) {\n            ch = state.src.charCodeAt(pos);\n            if (ch === 9) {\n              offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n            } else if (ch === 32) {\n              offset++;\n            } else {\n              break;\n            }\n            pos++;\n          }\n          contentStart = pos;\n          if (contentStart >= max) {\n            indentAfterMarker = 1;\n          } else {\n            indentAfterMarker = offset - initial;\n          }\n          if (indentAfterMarker > 4) {\n            indentAfterMarker = 1;\n          }\n          indent = initial + indentAfterMarker;\n          token = state.push(\"list_item_open\", \"li\", 1);\n          token.markup = String.fromCharCode(markerCharCode);\n          token.map = itemLines = [nextLine, 0];\n          if (isOrdered) {\n            token.info = state.src.slice(start, posAfterMarker - 1);\n          }\n          oldTight = state.tight;\n          oldTShift = state.tShift[nextLine];\n          oldSCount = state.sCount[nextLine];\n          oldListIndent = state.listIndent;\n          state.listIndent = state.blkIndent;\n          state.blkIndent = indent;\n          state.tight = true;\n          state.tShift[nextLine] = contentStart - state.bMarks[nextLine];\n          state.sCount[nextLine] = offset;\n          if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n            state.line = Math.min(state.line + 2, endLine);\n          } else {\n            state.md.block.tokenize(state, nextLine, endLine, true);\n          }\n          if (!state.tight || prevEmptyEnd) {\n            tight = false;\n          }\n          prevEmptyEnd = state.line - nextLine > 1 && state.isEmpty(state.line - 1);\n          state.blkIndent = state.listIndent;\n          state.listIndent = oldListIndent;\n          state.tShift[nextLine] = oldTShift;\n          state.sCount[nextLine] = oldSCount;\n          state.tight = oldTight;\n          token = state.push(\"list_item_close\", \"li\", -1);\n          token.markup = String.fromCharCode(markerCharCode);\n          nextLine = state.line;\n          itemLines[1] = nextLine;\n          if (nextLine >= endLine) {\n            break;\n          }\n          if (state.sCount[nextLine] < state.blkIndent) {\n            break;\n          }\n          if (state.sCount[nextLine] - state.blkIndent >= 4) {\n            break;\n          }\n          terminate = false;\n          for (i = 0, l = terminatorRules.length; i < l; i++) {\n            if (terminatorRules[i](state, nextLine, endLine, true)) {\n              terminate = true;\n              break;\n            }\n          }\n          if (terminate) {\n            break;\n          }\n          if (isOrdered) {\n            posAfterMarker = skipOrderedListMarker(state, nextLine);\n            if (posAfterMarker < 0) {\n              break;\n            }\n            start = state.bMarks[nextLine] + state.tShift[nextLine];\n          } else {\n            posAfterMarker = skipBulletListMarker(state, nextLine);\n            if (posAfterMarker < 0) {\n              break;\n            }\n          }\n          if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n            break;\n          }\n        }\n        if (isOrdered) {\n          token = state.push(\"ordered_list_close\", \"ol\", -1);\n        } else {\n          token = state.push(\"bullet_list_close\", \"ul\", -1);\n        }\n        token.markup = String.fromCharCode(markerCharCode);\n        listLines[1] = nextLine;\n        state.line = nextLine;\n        state.parentType = oldParentType;\n        if (tight) {\n          markTightParagraphs(state, listTokIdx);\n        }\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/reference.js\n  var require_reference = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/reference.js\"(exports, module) {\n      \"use strict\";\n      var normalizeReference = require_utils().normalizeReference;\n      var isSpace = require_utils().isSpace;\n      module.exports = function reference(state, startLine, _endLine, silent) {\n        var ch, destEndPos, destEndLineNo, endLine, href, i, l, label, labelEnd, oldParentType, res, start, str, terminate, terminatorRules, title, lines = 0, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine], nextLine = startLine + 1;\n        if (state.sCount[startLine] - state.blkIndent >= 4) {\n          return false;\n        }\n        if (state.src.charCodeAt(pos) !== 91) {\n          return false;\n        }\n        while (++pos < max) {\n          if (state.src.charCodeAt(pos) === 93 && state.src.charCodeAt(pos - 1) !== 92) {\n            if (pos + 1 === max) {\n              return false;\n            }\n            if (state.src.charCodeAt(pos + 1) !== 58) {\n              return false;\n            }\n            break;\n          }\n        }\n        endLine = state.lineMax;\n        terminatorRules = state.md.block.ruler.getRules(\"reference\");\n        oldParentType = state.parentType;\n        state.parentType = \"reference\";\n        for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n          if (state.sCount[nextLine] - state.blkIndent > 3) {\n            continue;\n          }\n          if (state.sCount[nextLine] < 0) {\n            continue;\n          }\n          terminate = false;\n          for (i = 0, l = terminatorRules.length; i < l; i++) {\n            if (terminatorRules[i](state, nextLine, endLine, true)) {\n              terminate = true;\n              break;\n            }\n          }\n          if (terminate) {\n            break;\n          }\n        }\n        str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n        max = str.length;\n        for (pos = 1; pos < max; pos++) {\n          ch = str.charCodeAt(pos);\n          if (ch === 91) {\n            return false;\n          } else if (ch === 93) {\n            labelEnd = pos;\n            break;\n          } else if (ch === 10) {\n            lines++;\n          } else if (ch === 92) {\n            pos++;\n            if (pos < max && str.charCodeAt(pos) === 10) {\n              lines++;\n            }\n          }\n        }\n        if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 58) {\n          return false;\n        }\n        for (pos = labelEnd + 2; pos < max; pos++) {\n          ch = str.charCodeAt(pos);\n          if (ch === 10) {\n            lines++;\n          } else if (isSpace(ch)) {\n          } else {\n            break;\n          }\n        }\n        res = state.md.helpers.parseLinkDestination(str, pos, max);\n        if (!res.ok) {\n          return false;\n        }\n        href = state.md.normalizeLink(res.str);\n        if (!state.md.validateLink(href)) {\n          return false;\n        }\n        pos = res.pos;\n        lines += res.lines;\n        destEndPos = pos;\n        destEndLineNo = lines;\n        start = pos;\n        for (; pos < max; pos++) {\n          ch = str.charCodeAt(pos);\n          if (ch === 10) {\n            lines++;\n          } else if (isSpace(ch)) {\n          } else {\n            break;\n          }\n        }\n        res = state.md.helpers.parseLinkTitle(str, pos, max);\n        if (pos < max && start !== pos && res.ok) {\n          title = res.str;\n          pos = res.pos;\n          lines += res.lines;\n        } else {\n          title = \"\";\n          pos = destEndPos;\n          lines = destEndLineNo;\n        }\n        while (pos < max) {\n          ch = str.charCodeAt(pos);\n          if (!isSpace(ch)) {\n            break;\n          }\n          pos++;\n        }\n        if (pos < max && str.charCodeAt(pos) !== 10) {\n          if (title) {\n            title = \"\";\n            pos = destEndPos;\n            lines = destEndLineNo;\n            while (pos < max) {\n              ch = str.charCodeAt(pos);\n              if (!isSpace(ch)) {\n                break;\n              }\n              pos++;\n            }\n          }\n        }\n        if (pos < max && str.charCodeAt(pos) !== 10) {\n          return false;\n        }\n        label = normalizeReference(str.slice(1, labelEnd));\n        if (!label) {\n          return false;\n        }\n        if (silent) {\n          return true;\n        }\n        if (typeof state.env.references === \"undefined\") {\n          state.env.references = {};\n        }\n        if (typeof state.env.references[label] === \"undefined\") {\n          state.env.references[label] = { title, href };\n        }\n        state.parentType = oldParentType;\n        state.line = startLine + lines + 1;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/common/html_blocks.js\n  var require_html_blocks = __commonJS({\n    \"node_modules/markdown-it/lib/common/html_blocks.js\"(exports, module) {\n      \"use strict\";\n      module.exports = [\n        \"address\",\n        \"article\",\n        \"aside\",\n        \"base\",\n        \"basefont\",\n        \"blockquote\",\n        \"body\",\n        \"caption\",\n        \"center\",\n        \"col\",\n        \"colgroup\",\n        \"dd\",\n        \"details\",\n        \"dialog\",\n        \"dir\",\n        \"div\",\n        \"dl\",\n        \"dt\",\n        \"fieldset\",\n        \"figcaption\",\n        \"figure\",\n        \"footer\",\n        \"form\",\n        \"frame\",\n        \"frameset\",\n        \"h1\",\n        \"h2\",\n        \"h3\",\n        \"h4\",\n        \"h5\",\n        \"h6\",\n        \"head\",\n        \"header\",\n        \"hr\",\n        \"html\",\n        \"iframe\",\n        \"legend\",\n        \"li\",\n        \"link\",\n        \"main\",\n        \"menu\",\n        \"menuitem\",\n        \"nav\",\n        \"noframes\",\n        \"ol\",\n        \"optgroup\",\n        \"option\",\n        \"p\",\n        \"param\",\n        \"section\",\n        \"source\",\n        \"summary\",\n        \"table\",\n        \"tbody\",\n        \"td\",\n        \"tfoot\",\n        \"th\",\n        \"thead\",\n        \"title\",\n        \"tr\",\n        \"track\",\n        \"ul\"\n      ];\n    }\n  });\n\n  // node_modules/markdown-it/lib/common/html_re.js\n  var require_html_re = __commonJS({\n    \"node_modules/markdown-it/lib/common/html_re.js\"(exports, module) {\n      \"use strict\";\n      var attr_name = \"[a-zA-Z_:][a-zA-Z0-9:._-]*\";\n      var unquoted = \"[^\\\"'=<>`\\\\x00-\\\\x20]+\";\n      var single_quoted = \"'[^']*'\";\n      var double_quoted = '\"[^\"]*\"';\n      var attr_value = \"(?:\" + unquoted + \"|\" + single_quoted + \"|\" + double_quoted + \")\";\n      var attribute = \"(?:\\\\s+\" + attr_name + \"(?:\\\\s*=\\\\s*\" + attr_value + \")?)\";\n      var open_tag = \"<[A-Za-z][A-Za-z0-9\\\\-]*\" + attribute + \"*\\\\s*\\\\/?>\";\n      var close_tag = \"<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>\";\n      var comment = \"<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->\";\n      var processing = \"<[?][\\\\s\\\\S]*?[?]>\";\n      var declaration = \"<![A-Z]+\\\\s+[^>]*>\";\n      var cdata = \"<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\";\n      var HTML_TAG_RE = new RegExp(\"^(?:\" + open_tag + \"|\" + close_tag + \"|\" + comment + \"|\" + processing + \"|\" + declaration + \"|\" + cdata + \")\");\n      var HTML_OPEN_CLOSE_TAG_RE = new RegExp(\"^(?:\" + open_tag + \"|\" + close_tag + \")\");\n      module.exports.HTML_TAG_RE = HTML_TAG_RE;\n      module.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/html_block.js\n  var require_html_block = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/html_block.js\"(exports, module) {\n      \"use strict\";\n      var block_names = require_html_blocks();\n      var HTML_OPEN_CLOSE_TAG_RE = require_html_re().HTML_OPEN_CLOSE_TAG_RE;\n      var HTML_SEQUENCES = [\n        [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n        [/^<!--/, /-->/, true],\n        [/^<\\?/, /\\?>/, true],\n        [/^<![A-Z]/, />/, true],\n        [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n        [new RegExp(\"^</?(\" + block_names.join(\"|\") + \")(?=(\\\\s|/?>|$))\", \"i\"), /^$/, true],\n        [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + \"\\\\s*$\"), /^$/, false]\n      ];\n      module.exports = function html_block(state, startLine, endLine, silent) {\n        var i, nextLine, token, lineText, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];\n        if (state.sCount[startLine] - state.blkIndent >= 4) {\n          return false;\n        }\n        if (!state.md.options.html) {\n          return false;\n        }\n        if (state.src.charCodeAt(pos) !== 60) {\n          return false;\n        }\n        lineText = state.src.slice(pos, max);\n        for (i = 0; i < HTML_SEQUENCES.length; i++) {\n          if (HTML_SEQUENCES[i][0].test(lineText)) {\n            break;\n          }\n        }\n        if (i === HTML_SEQUENCES.length) {\n          return false;\n        }\n        if (silent) {\n          return HTML_SEQUENCES[i][2];\n        }\n        nextLine = startLine + 1;\n        if (!HTML_SEQUENCES[i][1].test(lineText)) {\n          for (; nextLine < endLine; nextLine++) {\n            if (state.sCount[nextLine] < state.blkIndent) {\n              break;\n            }\n            pos = state.bMarks[nextLine] + state.tShift[nextLine];\n            max = state.eMarks[nextLine];\n            lineText = state.src.slice(pos, max);\n            if (HTML_SEQUENCES[i][1].test(lineText)) {\n              if (lineText.length !== 0) {\n                nextLine++;\n              }\n              break;\n            }\n          }\n        }\n        state.line = nextLine;\n        token = state.push(\"html_block\", \"\", 0);\n        token.map = [startLine, nextLine];\n        token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/heading.js\n  var require_heading = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/heading.js\"(exports, module) {\n      \"use strict\";\n      var isSpace = require_utils().isSpace;\n      module.exports = function heading(state, startLine, endLine, silent) {\n        var ch, level, tmp, token, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];\n        if (state.sCount[startLine] - state.blkIndent >= 4) {\n          return false;\n        }\n        ch = state.src.charCodeAt(pos);\n        if (ch !== 35 || pos >= max) {\n          return false;\n        }\n        level = 1;\n        ch = state.src.charCodeAt(++pos);\n        while (ch === 35 && pos < max && level <= 6) {\n          level++;\n          ch = state.src.charCodeAt(++pos);\n        }\n        if (level > 6 || pos < max && !isSpace(ch)) {\n          return false;\n        }\n        if (silent) {\n          return true;\n        }\n        max = state.skipSpacesBack(max, pos);\n        tmp = state.skipCharsBack(max, 35, pos);\n        if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n          max = tmp;\n        }\n        state.line = startLine + 1;\n        token = state.push(\"heading_open\", \"h\" + String(level), 1);\n        token.markup = \"########\".slice(0, level);\n        token.map = [startLine, state.line];\n        token = state.push(\"inline\", \"\", 0);\n        token.content = state.src.slice(pos, max).trim();\n        token.map = [startLine, state.line];\n        token.children = [];\n        token = state.push(\"heading_close\", \"h\" + String(level), -1);\n        token.markup = \"########\".slice(0, level);\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/lheading.js\n  var require_lheading = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/lheading.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function lheading(state, startLine, endLine) {\n        var content, terminate, i, l, token, pos, max, level, marker, nextLine = startLine + 1, oldParentType, terminatorRules = state.md.block.ruler.getRules(\"paragraph\");\n        if (state.sCount[startLine] - state.blkIndent >= 4) {\n          return false;\n        }\n        oldParentType = state.parentType;\n        state.parentType = \"paragraph\";\n        for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n          if (state.sCount[nextLine] - state.blkIndent > 3) {\n            continue;\n          }\n          if (state.sCount[nextLine] >= state.blkIndent) {\n            pos = state.bMarks[nextLine] + state.tShift[nextLine];\n            max = state.eMarks[nextLine];\n            if (pos < max) {\n              marker = state.src.charCodeAt(pos);\n              if (marker === 45 || marker === 61) {\n                pos = state.skipChars(pos, marker);\n                pos = state.skipSpaces(pos);\n                if (pos >= max) {\n                  level = marker === 61 ? 1 : 2;\n                  break;\n                }\n              }\n            }\n          }\n          if (state.sCount[nextLine] < 0) {\n            continue;\n          }\n          terminate = false;\n          for (i = 0, l = terminatorRules.length; i < l; i++) {\n            if (terminatorRules[i](state, nextLine, endLine, true)) {\n              terminate = true;\n              break;\n            }\n          }\n          if (terminate) {\n            break;\n          }\n        }\n        if (!level) {\n          return false;\n        }\n        content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n        state.line = nextLine + 1;\n        token = state.push(\"heading_open\", \"h\" + String(level), 1);\n        token.markup = String.fromCharCode(marker);\n        token.map = [startLine, state.line];\n        token = state.push(\"inline\", \"\", 0);\n        token.content = content;\n        token.map = [startLine, state.line - 1];\n        token.children = [];\n        token = state.push(\"heading_close\", \"h\" + String(level), -1);\n        token.markup = String.fromCharCode(marker);\n        state.parentType = oldParentType;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/paragraph.js\n  var require_paragraph = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/paragraph.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function paragraph(state, startLine, endLine) {\n        var content, terminate, i, l, token, oldParentType, nextLine = startLine + 1, terminatorRules = state.md.block.ruler.getRules(\"paragraph\");\n        oldParentType = state.parentType;\n        state.parentType = \"paragraph\";\n        for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n          if (state.sCount[nextLine] - state.blkIndent > 3) {\n            continue;\n          }\n          if (state.sCount[nextLine] < 0) {\n            continue;\n          }\n          terminate = false;\n          for (i = 0, l = terminatorRules.length; i < l; i++) {\n            if (terminatorRules[i](state, nextLine, endLine, true)) {\n              terminate = true;\n              break;\n            }\n          }\n          if (terminate) {\n            break;\n          }\n        }\n        content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n        state.line = nextLine;\n        token = state.push(\"paragraph_open\", \"p\", 1);\n        token.map = [startLine, state.line];\n        token = state.push(\"inline\", \"\", 0);\n        token.content = content;\n        token.map = [startLine, state.line];\n        token.children = [];\n        token = state.push(\"paragraph_close\", \"p\", -1);\n        state.parentType = oldParentType;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_block/state_block.js\n  var require_state_block = __commonJS({\n    \"node_modules/markdown-it/lib/rules_block/state_block.js\"(exports, module) {\n      \"use strict\";\n      var Token = require_token();\n      var isSpace = require_utils().isSpace;\n      function StateBlock(src, md, env, tokens) {\n        var ch, s, start, pos, len, indent, offset, indent_found;\n        this.src = src;\n        this.md = md;\n        this.env = env;\n        this.tokens = tokens;\n        this.bMarks = [];\n        this.eMarks = [];\n        this.tShift = [];\n        this.sCount = [];\n        this.bsCount = [];\n        this.blkIndent = 0;\n        this.line = 0;\n        this.lineMax = 0;\n        this.tight = false;\n        this.ddIndent = -1;\n        this.listIndent = -1;\n        this.parentType = \"root\";\n        this.level = 0;\n        this.result = \"\";\n        s = this.src;\n        indent_found = false;\n        for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n          ch = s.charCodeAt(pos);\n          if (!indent_found) {\n            if (isSpace(ch)) {\n              indent++;\n              if (ch === 9) {\n                offset += 4 - offset % 4;\n              } else {\n                offset++;\n              }\n              continue;\n            } else {\n              indent_found = true;\n            }\n          }\n          if (ch === 10 || pos === len - 1) {\n            if (ch !== 10) {\n              pos++;\n            }\n            this.bMarks.push(start);\n            this.eMarks.push(pos);\n            this.tShift.push(indent);\n            this.sCount.push(offset);\n            this.bsCount.push(0);\n            indent_found = false;\n            indent = 0;\n            offset = 0;\n            start = pos + 1;\n          }\n        }\n        this.bMarks.push(s.length);\n        this.eMarks.push(s.length);\n        this.tShift.push(0);\n        this.sCount.push(0);\n        this.bsCount.push(0);\n        this.lineMax = this.bMarks.length - 1;\n      }\n      StateBlock.prototype.push = function(type, tag, nesting) {\n        var token = new Token(type, tag, nesting);\n        token.block = true;\n        if (nesting < 0)\n          this.level--;\n        token.level = this.level;\n        if (nesting > 0)\n          this.level++;\n        this.tokens.push(token);\n        return token;\n      };\n      StateBlock.prototype.isEmpty = function isEmpty(line) {\n        return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n      };\n      StateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n        for (var max = this.lineMax; from < max; from++) {\n          if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n            break;\n          }\n        }\n        return from;\n      };\n      StateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n        var ch;\n        for (var max = this.src.length; pos < max; pos++) {\n          ch = this.src.charCodeAt(pos);\n          if (!isSpace(ch)) {\n            break;\n          }\n        }\n        return pos;\n      };\n      StateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n        if (pos <= min) {\n          return pos;\n        }\n        while (pos > min) {\n          if (!isSpace(this.src.charCodeAt(--pos))) {\n            return pos + 1;\n          }\n        }\n        return pos;\n      };\n      StateBlock.prototype.skipChars = function skipChars(pos, code) {\n        for (var max = this.src.length; pos < max; pos++) {\n          if (this.src.charCodeAt(pos) !== code) {\n            break;\n          }\n        }\n        return pos;\n      };\n      StateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n        if (pos <= min) {\n          return pos;\n        }\n        while (pos > min) {\n          if (code !== this.src.charCodeAt(--pos)) {\n            return pos + 1;\n          }\n        }\n        return pos;\n      };\n      StateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n        var i, lineIndent, ch, first, last, queue, lineStart, line = begin;\n        if (begin >= end) {\n          return \"\";\n        }\n        queue = new Array(end - begin);\n        for (i = 0; line < end; line++, i++) {\n          lineIndent = 0;\n          lineStart = first = this.bMarks[line];\n          if (line + 1 < end || keepLastLF) {\n            last = this.eMarks[line] + 1;\n          } else {\n            last = this.eMarks[line];\n          }\n          while (first < last && lineIndent < indent) {\n            ch = this.src.charCodeAt(first);\n            if (isSpace(ch)) {\n              if (ch === 9) {\n                lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n              } else {\n                lineIndent++;\n              }\n            } else if (first - lineStart < this.tShift[line]) {\n              lineIndent++;\n            } else {\n              break;\n            }\n            first++;\n          }\n          if (lineIndent > indent) {\n            queue[i] = new Array(lineIndent - indent + 1).join(\" \") + this.src.slice(first, last);\n          } else {\n            queue[i] = this.src.slice(first, last);\n          }\n        }\n        return queue.join(\"\");\n      };\n      StateBlock.prototype.Token = Token;\n      module.exports = StateBlock;\n    }\n  });\n\n  // node_modules/markdown-it/lib/parser_block.js\n  var require_parser_block = __commonJS({\n    \"node_modules/markdown-it/lib/parser_block.js\"(exports, module) {\n      \"use strict\";\n      var Ruler = require_ruler();\n      var _rules = [\n        // First 2 params - rule name & source. Secondary array - list of rules,\n        // which can be terminated by this one.\n        [\"table\", require_table(), [\"paragraph\", \"reference\"]],\n        [\"code\", require_code()],\n        [\"fence\", require_fence(), [\"paragraph\", \"reference\", \"blockquote\", \"list\"]],\n        [\"blockquote\", require_blockquote(), [\"paragraph\", \"reference\", \"blockquote\", \"list\"]],\n        [\"hr\", require_hr(), [\"paragraph\", \"reference\", \"blockquote\", \"list\"]],\n        [\"list\", require_list(), [\"paragraph\", \"reference\", \"blockquote\"]],\n        [\"reference\", require_reference()],\n        [\"html_block\", require_html_block(), [\"paragraph\", \"reference\", \"blockquote\"]],\n        [\"heading\", require_heading(), [\"paragraph\", \"reference\", \"blockquote\"]],\n        [\"lheading\", require_lheading()],\n        [\"paragraph\", require_paragraph()]\n      ];\n      function ParserBlock() {\n        this.ruler = new Ruler();\n        for (var i = 0; i < _rules.length; i++) {\n          this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n        }\n      }\n      ParserBlock.prototype.tokenize = function(state, startLine, endLine) {\n        var ok, i, prevLine, rules = this.ruler.getRules(\"\"), len = rules.length, line = startLine, hasEmptyLines = false, maxNesting = state.md.options.maxNesting;\n        while (line < endLine) {\n          state.line = line = state.skipEmptyLines(line);\n          if (line >= endLine) {\n            break;\n          }\n          if (state.sCount[line] < state.blkIndent) {\n            break;\n          }\n          if (state.level >= maxNesting) {\n            state.line = endLine;\n            break;\n          }\n          prevLine = state.line;\n          for (i = 0; i < len; i++) {\n            ok = rules[i](state, line, endLine, false);\n            if (ok) {\n              if (prevLine >= state.line) {\n                throw new Error(\"block rule didn't increment state.line\");\n              }\n              break;\n            }\n          }\n          if (!ok)\n            throw new Error(\"none of the block rules matched\");\n          state.tight = !hasEmptyLines;\n          if (state.isEmpty(state.line - 1)) {\n            hasEmptyLines = true;\n          }\n          line = state.line;\n          if (line < endLine && state.isEmpty(line)) {\n            hasEmptyLines = true;\n            line++;\n            state.line = line;\n          }\n        }\n      };\n      ParserBlock.prototype.parse = function(src, md, env, outTokens) {\n        var state;\n        if (!src) {\n          return;\n        }\n        state = new this.State(src, md, env, outTokens);\n        this.tokenize(state, state.line, state.lineMax);\n      };\n      ParserBlock.prototype.State = require_state_block();\n      module.exports = ParserBlock;\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/text.js\n  var require_text = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/text.js\"(exports, module) {\n      \"use strict\";\n      function isTerminatorChar(ch) {\n        switch (ch) {\n          case 10:\n          case 33:\n          case 35:\n          case 36:\n          case 37:\n          case 38:\n          case 42:\n          case 43:\n          case 45:\n          case 58:\n          case 60:\n          case 61:\n          case 62:\n          case 64:\n          case 91:\n          case 92:\n          case 93:\n          case 94:\n          case 95:\n          case 96:\n          case 123:\n          case 125:\n          case 126:\n            return true;\n          default:\n            return false;\n        }\n      }\n      module.exports = function text(state, silent) {\n        var pos = state.pos;\n        while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n          pos++;\n        }\n        if (pos === state.pos) {\n          return false;\n        }\n        if (!silent) {\n          state.pending += state.src.slice(state.pos, pos);\n        }\n        state.pos = pos;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/linkify.js\n  var require_linkify2 = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/linkify.js\"(exports, module) {\n      \"use strict\";\n      var SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n      module.exports = function linkify(state, silent) {\n        var pos, max, match, proto, link, url, fullUrl, token;\n        if (!state.md.options.linkify)\n          return false;\n        if (state.linkLevel > 0)\n          return false;\n        pos = state.pos;\n        max = state.posMax;\n        if (pos + 3 > max)\n          return false;\n        if (state.src.charCodeAt(pos) !== 58)\n          return false;\n        if (state.src.charCodeAt(pos + 1) !== 47)\n          return false;\n        if (state.src.charCodeAt(pos + 2) !== 47)\n          return false;\n        match = state.pending.match(SCHEME_RE);\n        if (!match)\n          return false;\n        proto = match[1];\n        link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n        if (!link)\n          return false;\n        url = link.url;\n        if (url.length <= proto.length)\n          return false;\n        url = url.replace(/\\*+$/, \"\");\n        fullUrl = state.md.normalizeLink(url);\n        if (!state.md.validateLink(fullUrl))\n          return false;\n        if (!silent) {\n          state.pending = state.pending.slice(0, -proto.length);\n          token = state.push(\"link_open\", \"a\", 1);\n          token.attrs = [[\"href\", fullUrl]];\n          token.markup = \"linkify\";\n          token.info = \"auto\";\n          token = state.push(\"text\", \"\", 0);\n          token.content = state.md.normalizeLinkText(url);\n          token = state.push(\"link_close\", \"a\", -1);\n          token.markup = \"linkify\";\n          token.info = \"auto\";\n        }\n        state.pos += url.length - proto.length;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/newline.js\n  var require_newline = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/newline.js\"(exports, module) {\n      \"use strict\";\n      var isSpace = require_utils().isSpace;\n      module.exports = function newline(state, silent) {\n        var pmax, max, ws, pos = state.pos;\n        if (state.src.charCodeAt(pos) !== 10) {\n          return false;\n        }\n        pmax = state.pending.length - 1;\n        max = state.posMax;\n        if (!silent) {\n          if (pmax >= 0 && state.pending.charCodeAt(pmax) === 32) {\n            if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 32) {\n              ws = pmax - 1;\n              while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 32)\n                ws--;\n              state.pending = state.pending.slice(0, ws);\n              state.push(\"hardbreak\", \"br\", 0);\n            } else {\n              state.pending = state.pending.slice(0, -1);\n              state.push(\"softbreak\", \"br\", 0);\n            }\n          } else {\n            state.push(\"softbreak\", \"br\", 0);\n          }\n        }\n        pos++;\n        while (pos < max && isSpace(state.src.charCodeAt(pos))) {\n          pos++;\n        }\n        state.pos = pos;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/escape.js\n  var require_escape = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/escape.js\"(exports, module) {\n      \"use strict\";\n      var isSpace = require_utils().isSpace;\n      var ESCAPED = [];\n      for (i = 0; i < 256; i++) {\n        ESCAPED.push(0);\n      }\n      var i;\n      \"\\\\!\\\"#$%&'()*+,./:;<=>?@[]^_`{|}~-\".split(\"\").forEach(function(ch) {\n        ESCAPED[ch.charCodeAt(0)] = 1;\n      });\n      module.exports = function escape(state, silent) {\n        var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n        if (state.src.charCodeAt(pos) !== 92)\n          return false;\n        pos++;\n        if (pos >= max)\n          return false;\n        ch1 = state.src.charCodeAt(pos);\n        if (ch1 === 10) {\n          if (!silent) {\n            state.push(\"hardbreak\", \"br\", 0);\n          }\n          pos++;\n          while (pos < max) {\n            ch1 = state.src.charCodeAt(pos);\n            if (!isSpace(ch1))\n              break;\n            pos++;\n          }\n          state.pos = pos;\n          return true;\n        }\n        escapedStr = state.src[pos];\n        if (ch1 >= 55296 && ch1 <= 56319 && pos + 1 < max) {\n          ch2 = state.src.charCodeAt(pos + 1);\n          if (ch2 >= 56320 && ch2 <= 57343) {\n            escapedStr += state.src[pos + 1];\n            pos++;\n          }\n        }\n        origStr = \"\\\\\" + escapedStr;\n        if (!silent) {\n          token = state.push(\"text_special\", \"\", 0);\n          if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n            token.content = escapedStr;\n          } else {\n            token.content = origStr;\n          }\n          token.markup = origStr;\n          token.info = \"escape\";\n        }\n        state.pos = pos + 1;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/backticks.js\n  var require_backticks = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/backticks.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function backtick(state, silent) {\n        var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength, pos = state.pos, ch = state.src.charCodeAt(pos);\n        if (ch !== 96) {\n          return false;\n        }\n        start = pos;\n        pos++;\n        max = state.posMax;\n        while (pos < max && state.src.charCodeAt(pos) === 96) {\n          pos++;\n        }\n        marker = state.src.slice(start, pos);\n        openerLength = marker.length;\n        if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n          if (!silent)\n            state.pending += marker;\n          state.pos += openerLength;\n          return true;\n        }\n        matchEnd = pos;\n        while ((matchStart = state.src.indexOf(\"`\", matchEnd)) !== -1) {\n          matchEnd = matchStart + 1;\n          while (matchEnd < max && state.src.charCodeAt(matchEnd) === 96) {\n            matchEnd++;\n          }\n          closerLength = matchEnd - matchStart;\n          if (closerLength === openerLength) {\n            if (!silent) {\n              token = state.push(\"code_inline\", \"code\", 0);\n              token.markup = marker;\n              token.content = state.src.slice(pos, matchStart).replace(/\\n/g, \" \").replace(/^ (.+) $/, \"$1\");\n            }\n            state.pos = matchEnd;\n            return true;\n          }\n          state.backticks[closerLength] = matchStart;\n        }\n        state.backticksScanned = true;\n        if (!silent)\n          state.pending += marker;\n        state.pos += openerLength;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/strikethrough.js\n  var require_strikethrough = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/strikethrough.js\"(exports, module) {\n      \"use strict\";\n      module.exports.tokenize = function strikethrough(state, silent) {\n        var i, scanned, token, len, ch, start = state.pos, marker = state.src.charCodeAt(start);\n        if (silent) {\n          return false;\n        }\n        if (marker !== 126) {\n          return false;\n        }\n        scanned = state.scanDelims(state.pos, true);\n        len = scanned.length;\n        ch = String.fromCharCode(marker);\n        if (len < 2) {\n          return false;\n        }\n        if (len % 2) {\n          token = state.push(\"text\", \"\", 0);\n          token.content = ch;\n          len--;\n        }\n        for (i = 0; i < len; i += 2) {\n          token = state.push(\"text\", \"\", 0);\n          token.content = ch + ch;\n          state.delimiters.push({\n            marker,\n            length: 0,\n            // disable \"rule of 3\" length checks meant for emphasis\n            token: state.tokens.length - 1,\n            end: -1,\n            open: scanned.can_open,\n            close: scanned.can_close\n          });\n        }\n        state.pos += scanned.length;\n        return true;\n      };\n      function postProcess(state, delimiters) {\n        var i, j, startDelim, endDelim, token, loneMarkers = [], max = delimiters.length;\n        for (i = 0; i < max; i++) {\n          startDelim = delimiters[i];\n          if (startDelim.marker !== 126) {\n            continue;\n          }\n          if (startDelim.end === -1) {\n            continue;\n          }\n          endDelim = delimiters[startDelim.end];\n          token = state.tokens[startDelim.token];\n          token.type = \"s_open\";\n          token.tag = \"s\";\n          token.nesting = 1;\n          token.markup = \"~~\";\n          token.content = \"\";\n          token = state.tokens[endDelim.token];\n          token.type = \"s_close\";\n          token.tag = \"s\";\n          token.nesting = -1;\n          token.markup = \"~~\";\n          token.content = \"\";\n          if (state.tokens[endDelim.token - 1].type === \"text\" && state.tokens[endDelim.token - 1].content === \"~\") {\n            loneMarkers.push(endDelim.token - 1);\n          }\n        }\n        while (loneMarkers.length) {\n          i = loneMarkers.pop();\n          j = i + 1;\n          while (j < state.tokens.length && state.tokens[j].type === \"s_close\") {\n            j++;\n          }\n          j--;\n          if (i !== j) {\n            token = state.tokens[j];\n            state.tokens[j] = state.tokens[i];\n            state.tokens[i] = token;\n          }\n        }\n      }\n      module.exports.postProcess = function strikethrough(state) {\n        var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;\n        postProcess(state, state.delimiters);\n        for (curr = 0; curr < max; curr++) {\n          if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n            postProcess(state, tokens_meta[curr].delimiters);\n          }\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/emphasis.js\n  var require_emphasis = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/emphasis.js\"(exports, module) {\n      \"use strict\";\n      module.exports.tokenize = function emphasis(state, silent) {\n        var i, scanned, token, start = state.pos, marker = state.src.charCodeAt(start);\n        if (silent) {\n          return false;\n        }\n        if (marker !== 95 && marker !== 42) {\n          return false;\n        }\n        scanned = state.scanDelims(state.pos, marker === 42);\n        for (i = 0; i < scanned.length; i++) {\n          token = state.push(\"text\", \"\", 0);\n          token.content = String.fromCharCode(marker);\n          state.delimiters.push({\n            // Char code of the starting marker (number).\n            //\n            marker,\n            // Total length of these series of delimiters.\n            //\n            length: scanned.length,\n            // A position of the token this delimiter corresponds to.\n            //\n            token: state.tokens.length - 1,\n            // If this delimiter is matched as a valid opener, `end` will be\n            // equal to its position, otherwise it's `-1`.\n            //\n            end: -1,\n            // Boolean flags that determine if this delimiter could open or close\n            // an emphasis.\n            //\n            open: scanned.can_open,\n            close: scanned.can_close\n          });\n        }\n        state.pos += scanned.length;\n        return true;\n      };\n      function postProcess(state, delimiters) {\n        var i, startDelim, endDelim, token, ch, isStrong, max = delimiters.length;\n        for (i = max - 1; i >= 0; i--) {\n          startDelim = delimiters[i];\n          if (startDelim.marker !== 95 && startDelim.marker !== 42) {\n            continue;\n          }\n          if (startDelim.end === -1) {\n            continue;\n          }\n          endDelim = delimiters[startDelim.end];\n          isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 && // check that first two markers match and adjacent\n          delimiters[i - 1].marker === startDelim.marker && delimiters[i - 1].token === startDelim.token - 1 && // check that last two markers are adjacent (we can safely assume they match)\n          delimiters[startDelim.end + 1].token === endDelim.token + 1;\n          ch = String.fromCharCode(startDelim.marker);\n          token = state.tokens[startDelim.token];\n          token.type = isStrong ? \"strong_open\" : \"em_open\";\n          token.tag = isStrong ? \"strong\" : \"em\";\n          token.nesting = 1;\n          token.markup = isStrong ? ch + ch : ch;\n          token.content = \"\";\n          token = state.tokens[endDelim.token];\n          token.type = isStrong ? \"strong_close\" : \"em_close\";\n          token.tag = isStrong ? \"strong\" : \"em\";\n          token.nesting = -1;\n          token.markup = isStrong ? ch + ch : ch;\n          token.content = \"\";\n          if (isStrong) {\n            state.tokens[delimiters[i - 1].token].content = \"\";\n            state.tokens[delimiters[startDelim.end + 1].token].content = \"\";\n            i--;\n          }\n        }\n      }\n      module.exports.postProcess = function emphasis(state) {\n        var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;\n        postProcess(state, state.delimiters);\n        for (curr = 0; curr < max; curr++) {\n          if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n            postProcess(state, tokens_meta[curr].delimiters);\n          }\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/link.js\n  var require_link = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/link.js\"(exports, module) {\n      \"use strict\";\n      var normalizeReference = require_utils().normalizeReference;\n      var isSpace = require_utils().isSpace;\n      module.exports = function link(state, silent) {\n        var attrs, code, label, labelEnd, labelStart, pos, res, ref, token, href = \"\", title = \"\", oldPos = state.pos, max = state.posMax, start = state.pos, parseReference = true;\n        if (state.src.charCodeAt(state.pos) !== 91) {\n          return false;\n        }\n        labelStart = state.pos + 1;\n        labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n        if (labelEnd < 0) {\n          return false;\n        }\n        pos = labelEnd + 1;\n        if (pos < max && state.src.charCodeAt(pos) === 40) {\n          parseReference = false;\n          pos++;\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n            if (!isSpace(code) && code !== 10) {\n              break;\n            }\n          }\n          if (pos >= max) {\n            return false;\n          }\n          start = pos;\n          res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n          if (res.ok) {\n            href = state.md.normalizeLink(res.str);\n            if (state.md.validateLink(href)) {\n              pos = res.pos;\n            } else {\n              href = \"\";\n            }\n            start = pos;\n            for (; pos < max; pos++) {\n              code = state.src.charCodeAt(pos);\n              if (!isSpace(code) && code !== 10) {\n                break;\n              }\n            }\n            res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n            if (pos < max && start !== pos && res.ok) {\n              title = res.str;\n              pos = res.pos;\n              for (; pos < max; pos++) {\n                code = state.src.charCodeAt(pos);\n                if (!isSpace(code) && code !== 10) {\n                  break;\n                }\n              }\n            }\n          }\n          if (pos >= max || state.src.charCodeAt(pos) !== 41) {\n            parseReference = true;\n          }\n          pos++;\n        }\n        if (parseReference) {\n          if (typeof state.env.references === \"undefined\") {\n            return false;\n          }\n          if (pos < max && state.src.charCodeAt(pos) === 91) {\n            start = pos + 1;\n            pos = state.md.helpers.parseLinkLabel(state, pos);\n            if (pos >= 0) {\n              label = state.src.slice(start, pos++);\n            } else {\n              pos = labelEnd + 1;\n            }\n          } else {\n            pos = labelEnd + 1;\n          }\n          if (!label) {\n            label = state.src.slice(labelStart, labelEnd);\n          }\n          ref = state.env.references[normalizeReference(label)];\n          if (!ref) {\n            state.pos = oldPos;\n            return false;\n          }\n          href = ref.href;\n          title = ref.title;\n        }\n        if (!silent) {\n          state.pos = labelStart;\n          state.posMax = labelEnd;\n          token = state.push(\"link_open\", \"a\", 1);\n          token.attrs = attrs = [[\"href\", href]];\n          if (title) {\n            attrs.push([\"title\", title]);\n          }\n          state.linkLevel++;\n          state.md.inline.tokenize(state);\n          state.linkLevel--;\n          token = state.push(\"link_close\", \"a\", -1);\n        }\n        state.pos = pos;\n        state.posMax = max;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/image.js\n  var require_image = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/image.js\"(exports, module) {\n      \"use strict\";\n      var normalizeReference = require_utils().normalizeReference;\n      var isSpace = require_utils().isSpace;\n      module.exports = function image(state, silent) {\n        var attrs, code, content, label, labelEnd, labelStart, pos, ref, res, title, token, tokens, start, href = \"\", oldPos = state.pos, max = state.posMax;\n        if (state.src.charCodeAt(state.pos) !== 33) {\n          return false;\n        }\n        if (state.src.charCodeAt(state.pos + 1) !== 91) {\n          return false;\n        }\n        labelStart = state.pos + 2;\n        labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n        if (labelEnd < 0) {\n          return false;\n        }\n        pos = labelEnd + 1;\n        if (pos < max && state.src.charCodeAt(pos) === 40) {\n          pos++;\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n            if (!isSpace(code) && code !== 10) {\n              break;\n            }\n          }\n          if (pos >= max) {\n            return false;\n          }\n          start = pos;\n          res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n          if (res.ok) {\n            href = state.md.normalizeLink(res.str);\n            if (state.md.validateLink(href)) {\n              pos = res.pos;\n            } else {\n              href = \"\";\n            }\n          }\n          start = pos;\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n            if (!isSpace(code) && code !== 10) {\n              break;\n            }\n          }\n          res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n          if (pos < max && start !== pos && res.ok) {\n            title = res.str;\n            pos = res.pos;\n            for (; pos < max; pos++) {\n              code = state.src.charCodeAt(pos);\n              if (!isSpace(code) && code !== 10) {\n                break;\n              }\n            }\n          } else {\n            title = \"\";\n          }\n          if (pos >= max || state.src.charCodeAt(pos) !== 41) {\n            state.pos = oldPos;\n            return false;\n          }\n          pos++;\n        } else {\n          if (typeof state.env.references === \"undefined\") {\n            return false;\n          }\n          if (pos < max && state.src.charCodeAt(pos) === 91) {\n            start = pos + 1;\n            pos = state.md.helpers.parseLinkLabel(state, pos);\n            if (pos >= 0) {\n              label = state.src.slice(start, pos++);\n            } else {\n              pos = labelEnd + 1;\n            }\n          } else {\n            pos = labelEnd + 1;\n          }\n          if (!label) {\n            label = state.src.slice(labelStart, labelEnd);\n          }\n          ref = state.env.references[normalizeReference(label)];\n          if (!ref) {\n            state.pos = oldPos;\n            return false;\n          }\n          href = ref.href;\n          title = ref.title;\n        }\n        if (!silent) {\n          content = state.src.slice(labelStart, labelEnd);\n          state.md.inline.parse(\n            content,\n            state.md,\n            state.env,\n            tokens = []\n          );\n          token = state.push(\"image\", \"img\", 0);\n          token.attrs = attrs = [[\"src\", href], [\"alt\", \"\"]];\n          token.children = tokens;\n          token.content = content;\n          if (title) {\n            attrs.push([\"title\", title]);\n          }\n        }\n        state.pos = pos;\n        state.posMax = max;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/autolink.js\n  var require_autolink = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/autolink.js\"(exports, module) {\n      \"use strict\";\n      var EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\n      var AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n      module.exports = function autolink(state, silent) {\n        var url, fullUrl, token, ch, start, max, pos = state.pos;\n        if (state.src.charCodeAt(pos) !== 60) {\n          return false;\n        }\n        start = state.pos;\n        max = state.posMax;\n        for (; ; ) {\n          if (++pos >= max)\n            return false;\n          ch = state.src.charCodeAt(pos);\n          if (ch === 60)\n            return false;\n          if (ch === 62)\n            break;\n        }\n        url = state.src.slice(start + 1, pos);\n        if (AUTOLINK_RE.test(url)) {\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) {\n            return false;\n          }\n          if (!silent) {\n            token = state.push(\"link_open\", \"a\", 1);\n            token.attrs = [[\"href\", fullUrl]];\n            token.markup = \"autolink\";\n            token.info = \"auto\";\n            token = state.push(\"text\", \"\", 0);\n            token.content = state.md.normalizeLinkText(url);\n            token = state.push(\"link_close\", \"a\", -1);\n            token.markup = \"autolink\";\n            token.info = \"auto\";\n          }\n          state.pos += url.length + 2;\n          return true;\n        }\n        if (EMAIL_RE.test(url)) {\n          fullUrl = state.md.normalizeLink(\"mailto:\" + url);\n          if (!state.md.validateLink(fullUrl)) {\n            return false;\n          }\n          if (!silent) {\n            token = state.push(\"link_open\", \"a\", 1);\n            token.attrs = [[\"href\", fullUrl]];\n            token.markup = \"autolink\";\n            token.info = \"auto\";\n            token = state.push(\"text\", \"\", 0);\n            token.content = state.md.normalizeLinkText(url);\n            token = state.push(\"link_close\", \"a\", -1);\n            token.markup = \"autolink\";\n            token.info = \"auto\";\n          }\n          state.pos += url.length + 2;\n          return true;\n        }\n        return false;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/html_inline.js\n  var require_html_inline = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/html_inline.js\"(exports, module) {\n      \"use strict\";\n      var HTML_TAG_RE = require_html_re().HTML_TAG_RE;\n      function isLinkOpen(str) {\n        return /^<a[>\\s]/i.test(str);\n      }\n      function isLinkClose(str) {\n        return /^<\\/a\\s*>/i.test(str);\n      }\n      function isLetter(ch) {\n        var lc = ch | 32;\n        return lc >= 97 && lc <= 122;\n      }\n      module.exports = function html_inline(state, silent) {\n        var ch, match, max, token, pos = state.pos;\n        if (!state.md.options.html) {\n          return false;\n        }\n        max = state.posMax;\n        if (state.src.charCodeAt(pos) !== 60 || pos + 2 >= max) {\n          return false;\n        }\n        ch = state.src.charCodeAt(pos + 1);\n        if (ch !== 33 && ch !== 63 && ch !== 47 && !isLetter(ch)) {\n          return false;\n        }\n        match = state.src.slice(pos).match(HTML_TAG_RE);\n        if (!match) {\n          return false;\n        }\n        if (!silent) {\n          token = state.push(\"html_inline\", \"\", 0);\n          token.content = match[0];\n          if (isLinkOpen(token.content))\n            state.linkLevel++;\n          if (isLinkClose(token.content))\n            state.linkLevel--;\n        }\n        state.pos += match[0].length;\n        return true;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/entity.js\n  var require_entity = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/entity.js\"(exports, module) {\n      \"use strict\";\n      var entities = require_entities2();\n      var has = require_utils().has;\n      var isValidEntityCode = require_utils().isValidEntityCode;\n      var fromCodePoint = require_utils().fromCodePoint;\n      var DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\n      var NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\n      module.exports = function entity(state, silent) {\n        var ch, code, match, token, pos = state.pos, max = state.posMax;\n        if (state.src.charCodeAt(pos) !== 38)\n          return false;\n        if (pos + 1 >= max)\n          return false;\n        ch = state.src.charCodeAt(pos + 1);\n        if (ch === 35) {\n          match = state.src.slice(pos).match(DIGITAL_RE);\n          if (match) {\n            if (!silent) {\n              code = match[1][0].toLowerCase() === \"x\" ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n              token = state.push(\"text_special\", \"\", 0);\n              token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(65533);\n              token.markup = match[0];\n              token.info = \"entity\";\n            }\n            state.pos += match[0].length;\n            return true;\n          }\n        } else {\n          match = state.src.slice(pos).match(NAMED_RE);\n          if (match) {\n            if (has(entities, match[1])) {\n              if (!silent) {\n                token = state.push(\"text_special\", \"\", 0);\n                token.content = entities[match[1]];\n                token.markup = match[0];\n                token.info = \"entity\";\n              }\n              state.pos += match[0].length;\n              return true;\n            }\n          }\n        }\n        return false;\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/balance_pairs.js\n  var require_balance_pairs = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/balance_pairs.js\"(exports, module) {\n      \"use strict\";\n      function processDelimiters(delimiters) {\n        var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx, isOddMatch, lastJump, openersBottom = {}, max = delimiters.length;\n        if (!max)\n          return;\n        var headerIdx = 0;\n        var lastTokenIdx = -2;\n        var jumps = [];\n        for (closerIdx = 0; closerIdx < max; closerIdx++) {\n          closer = delimiters[closerIdx];\n          jumps.push(0);\n          if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n            headerIdx = closerIdx;\n          }\n          lastTokenIdx = closer.token;\n          closer.length = closer.length || 0;\n          if (!closer.close)\n            continue;\n          if (!openersBottom.hasOwnProperty(closer.marker)) {\n            openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1];\n          }\n          minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + closer.length % 3];\n          openerIdx = headerIdx - jumps[headerIdx] - 1;\n          newMinOpenerIdx = openerIdx;\n          for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n            opener = delimiters[openerIdx];\n            if (opener.marker !== closer.marker)\n              continue;\n            if (opener.open && opener.end < 0) {\n              isOddMatch = false;\n              if (opener.close || closer.open) {\n                if ((opener.length + closer.length) % 3 === 0) {\n                  if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n                    isOddMatch = true;\n                  }\n                }\n              }\n              if (!isOddMatch) {\n                lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? jumps[openerIdx - 1] + 1 : 0;\n                jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n                jumps[openerIdx] = lastJump;\n                closer.open = false;\n                opener.end = closerIdx;\n                opener.close = false;\n                newMinOpenerIdx = -1;\n                lastTokenIdx = -2;\n                break;\n              }\n            }\n          }\n          if (newMinOpenerIdx !== -1) {\n            openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length || 0) % 3] = newMinOpenerIdx;\n          }\n        }\n      }\n      module.exports = function link_pairs(state) {\n        var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;\n        processDelimiters(state.delimiters);\n        for (curr = 0; curr < max; curr++) {\n          if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n            processDelimiters(tokens_meta[curr].delimiters);\n          }\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/fragments_join.js\n  var require_fragments_join = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/fragments_join.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function fragments_join(state) {\n        var curr, last, level = 0, tokens = state.tokens, max = state.tokens.length;\n        for (curr = last = 0; curr < max; curr++) {\n          if (tokens[curr].nesting < 0)\n            level--;\n          tokens[curr].level = level;\n          if (tokens[curr].nesting > 0)\n            level++;\n          if (tokens[curr].type === \"text\" && curr + 1 < max && tokens[curr + 1].type === \"text\") {\n            tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n          } else {\n            if (curr !== last) {\n              tokens[last] = tokens[curr];\n            }\n            last++;\n          }\n        }\n        if (curr !== last) {\n          tokens.length = last;\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/rules_inline/state_inline.js\n  var require_state_inline = __commonJS({\n    \"node_modules/markdown-it/lib/rules_inline/state_inline.js\"(exports, module) {\n      \"use strict\";\n      var Token = require_token();\n      var isWhiteSpace = require_utils().isWhiteSpace;\n      var isPunctChar = require_utils().isPunctChar;\n      var isMdAsciiPunct = require_utils().isMdAsciiPunct;\n      function StateInline(src, md, env, outTokens) {\n        this.src = src;\n        this.env = env;\n        this.md = md;\n        this.tokens = outTokens;\n        this.tokens_meta = Array(outTokens.length);\n        this.pos = 0;\n        this.posMax = this.src.length;\n        this.level = 0;\n        this.pending = \"\";\n        this.pendingLevel = 0;\n        this.cache = {};\n        this.delimiters = [];\n        this._prev_delimiters = [];\n        this.backticks = {};\n        this.backticksScanned = false;\n        this.linkLevel = 0;\n      }\n      StateInline.prototype.pushPending = function() {\n        var token = new Token(\"text\", \"\", 0);\n        token.content = this.pending;\n        token.level = this.pendingLevel;\n        this.tokens.push(token);\n        this.pending = \"\";\n        return token;\n      };\n      StateInline.prototype.push = function(type, tag, nesting) {\n        if (this.pending) {\n          this.pushPending();\n        }\n        var token = new Token(type, tag, nesting);\n        var token_meta = null;\n        if (nesting < 0) {\n          this.level--;\n          this.delimiters = this._prev_delimiters.pop();\n        }\n        token.level = this.level;\n        if (nesting > 0) {\n          this.level++;\n          this._prev_delimiters.push(this.delimiters);\n          this.delimiters = [];\n          token_meta = { delimiters: this.delimiters };\n        }\n        this.pendingLevel = this.level;\n        this.tokens.push(token);\n        this.tokens_meta.push(token_meta);\n        return token;\n      };\n      StateInline.prototype.scanDelims = function(start, canSplitWord) {\n        var pos = start, lastChar, nextChar, count, can_open, can_close, isLastWhiteSpace, isLastPunctChar, isNextWhiteSpace, isNextPunctChar, left_flanking = true, right_flanking = true, max = this.posMax, marker = this.src.charCodeAt(start);\n        lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 32;\n        while (pos < max && this.src.charCodeAt(pos) === marker) {\n          pos++;\n        }\n        count = pos - start;\n        nextChar = pos < max ? this.src.charCodeAt(pos) : 32;\n        isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n        isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n        isLastWhiteSpace = isWhiteSpace(lastChar);\n        isNextWhiteSpace = isWhiteSpace(nextChar);\n        if (isNextWhiteSpace) {\n          left_flanking = false;\n        } else if (isNextPunctChar) {\n          if (!(isLastWhiteSpace || isLastPunctChar)) {\n            left_flanking = false;\n          }\n        }\n        if (isLastWhiteSpace) {\n          right_flanking = false;\n        } else if (isLastPunctChar) {\n          if (!(isNextWhiteSpace || isNextPunctChar)) {\n            right_flanking = false;\n          }\n        }\n        if (!canSplitWord) {\n          can_open = left_flanking && (!right_flanking || isLastPunctChar);\n          can_close = right_flanking && (!left_flanking || isNextPunctChar);\n        } else {\n          can_open = left_flanking;\n          can_close = right_flanking;\n        }\n        return {\n          can_open,\n          can_close,\n          length: count\n        };\n      };\n      StateInline.prototype.Token = Token;\n      module.exports = StateInline;\n    }\n  });\n\n  // node_modules/markdown-it/lib/parser_inline.js\n  var require_parser_inline = __commonJS({\n    \"node_modules/markdown-it/lib/parser_inline.js\"(exports, module) {\n      \"use strict\";\n      var Ruler = require_ruler();\n      var _rules = [\n        [\"text\", require_text()],\n        [\"linkify\", require_linkify2()],\n        [\"newline\", require_newline()],\n        [\"escape\", require_escape()],\n        [\"backticks\", require_backticks()],\n        [\"strikethrough\", require_strikethrough().tokenize],\n        [\"emphasis\", require_emphasis().tokenize],\n        [\"link\", require_link()],\n        [\"image\", require_image()],\n        [\"autolink\", require_autolink()],\n        [\"html_inline\", require_html_inline()],\n        [\"entity\", require_entity()]\n      ];\n      var _rules2 = [\n        [\"balance_pairs\", require_balance_pairs()],\n        [\"strikethrough\", require_strikethrough().postProcess],\n        [\"emphasis\", require_emphasis().postProcess],\n        // rules for pairs separate '**' into its own text tokens, which may be left unused,\n        // rule below merges unused segments back with the rest of the text\n        [\"fragments_join\", require_fragments_join()]\n      ];\n      function ParserInline() {\n        var i;\n        this.ruler = new Ruler();\n        for (i = 0; i < _rules.length; i++) {\n          this.ruler.push(_rules[i][0], _rules[i][1]);\n        }\n        this.ruler2 = new Ruler();\n        for (i = 0; i < _rules2.length; i++) {\n          this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n        }\n      }\n      ParserInline.prototype.skipToken = function(state) {\n        var ok, i, pos = state.pos, rules = this.ruler.getRules(\"\"), len = rules.length, maxNesting = state.md.options.maxNesting, cache = state.cache;\n        if (typeof cache[pos] !== \"undefined\") {\n          state.pos = cache[pos];\n          return;\n        }\n        if (state.level < maxNesting) {\n          for (i = 0; i < len; i++) {\n            state.level++;\n            ok = rules[i](state, true);\n            state.level--;\n            if (ok) {\n              if (pos >= state.pos) {\n                throw new Error(\"inline rule didn't increment state.pos\");\n              }\n              break;\n            }\n          }\n        } else {\n          state.pos = state.posMax;\n        }\n        if (!ok) {\n          state.pos++;\n        }\n        cache[pos] = state.pos;\n      };\n      ParserInline.prototype.tokenize = function(state) {\n        var ok, i, prevPos, rules = this.ruler.getRules(\"\"), len = rules.length, end = state.posMax, maxNesting = state.md.options.maxNesting;\n        while (state.pos < end) {\n          prevPos = state.pos;\n          if (state.level < maxNesting) {\n            for (i = 0; i < len; i++) {\n              ok = rules[i](state, false);\n              if (ok) {\n                if (prevPos >= state.pos) {\n                  throw new Error(\"inline rule didn't increment state.pos\");\n                }\n                break;\n              }\n            }\n          }\n          if (ok) {\n            if (state.pos >= end) {\n              break;\n            }\n            continue;\n          }\n          state.pending += state.src[state.pos++];\n        }\n        if (state.pending) {\n          state.pushPending();\n        }\n      };\n      ParserInline.prototype.parse = function(str, md, env, outTokens) {\n        var i, rules, len;\n        var state = new this.State(str, md, env, outTokens);\n        this.tokenize(state);\n        rules = this.ruler2.getRules(\"\");\n        len = rules.length;\n        for (i = 0; i < len; i++) {\n          rules[i](state);\n        }\n      };\n      ParserInline.prototype.State = require_state_inline();\n      module.exports = ParserInline;\n    }\n  });\n\n  // node_modules/linkify-it/lib/re.js\n  var require_re = __commonJS({\n    \"node_modules/linkify-it/lib/re.js\"(exports, module) {\n      \"use strict\";\n      module.exports = function(opts) {\n        var re = {};\n        opts = opts || {};\n        re.src_Any = require_regex2().source;\n        re.src_Cc = require_regex3().source;\n        re.src_Z = require_regex5().source;\n        re.src_P = require_regex().source;\n        re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join(\"|\");\n        re.src_ZCc = [re.src_Z, re.src_Cc].join(\"|\");\n        var text_separators = \"[><\\uFF5C]\";\n        re.src_pseudo_letter = \"(?:(?!\" + text_separators + \"|\" + re.src_ZPCc + \")\" + re.src_Any + \")\";\n        re.src_ip4 = \"(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\";\n        re.src_auth = \"(?:(?:(?!\" + re.src_ZCc + \"|[@/\\\\[\\\\]()]).)+@)?\";\n        re.src_port = \"(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?\";\n        re.src_host_terminator = \"(?=$|\" + text_separators + \"|\" + re.src_ZPCc + \")(?!\" + (opts[\"---\"] ? \"-(?!--)|\" : \"-|\") + \"_|:\\\\d|\\\\.-|\\\\.(?!$|\" + re.src_ZPCc + \"))\";\n        re.src_path = \"(?:[/?#](?:(?!\" + re.src_ZCc + \"|\" + text_separators + `|[()[\\\\]{}.,\"'?!\\\\-;]).|\\\\[(?:(?!` + re.src_ZCc + \"|\\\\]).)*\\\\]|\\\\((?:(?!\" + re.src_ZCc + \"|[)]).)*\\\\)|\\\\{(?:(?!\" + re.src_ZCc + '|[}]).)*\\\\}|\\\\\"(?:(?!' + re.src_ZCc + `|[\"]).)+\\\\\"|\\\\'(?:(?!` + re.src_ZCc + \"|[']).)+\\\\'|\\\\'(?=\" + re.src_pseudo_letter + \"|[-])|\\\\.{2,}[a-zA-Z0-9%/&]|\\\\.(?!\" + re.src_ZCc + \"|[.]|$)|\" + (opts[\"---\"] ? \"\\\\-(?!--(?:[^-]|$))(?:-*)|\" : \"\\\\-+|\") + \",(?!\" + re.src_ZCc + \"|$)|;(?!\" + re.src_ZCc + \"|$)|\\\\!+(?!\" + re.src_ZCc + \"|[!]|$)|\\\\?(?!\" + re.src_ZCc + \"|[?]|$))+|\\\\/)?\";\n        re.src_email_name = '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n        re.src_xn = \"xn--[a-z0-9\\\\-]{1,59}\";\n        re.src_domain_root = // Allow letters & digits (http://test1)\n        \"(?:\" + re.src_xn + \"|\" + re.src_pseudo_letter + \"{1,63})\";\n        re.src_domain = \"(?:\" + re.src_xn + \"|(?:\" + re.src_pseudo_letter + \")|(?:\" + re.src_pseudo_letter + \"(?:-|\" + re.src_pseudo_letter + \"){0,61}\" + re.src_pseudo_letter + \"))\";\n        re.src_host = \"(?:(?:(?:(?:\" + re.src_domain + \")\\\\.)*\" + re.src_domain + \"))\";\n        re.tpl_host_fuzzy = \"(?:\" + re.src_ip4 + \"|(?:(?:(?:\" + re.src_domain + \")\\\\.)+(?:%TLDS%)))\";\n        re.tpl_host_no_ip_fuzzy = \"(?:(?:(?:\" + re.src_domain + \")\\\\.)+(?:%TLDS%))\";\n        re.src_host_strict = re.src_host + re.src_host_terminator;\n        re.tpl_host_fuzzy_strict = re.tpl_host_fuzzy + re.src_host_terminator;\n        re.src_host_port_strict = re.src_host + re.src_port + re.src_host_terminator;\n        re.tpl_host_port_fuzzy_strict = re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n        re.tpl_host_port_no_ip_fuzzy_strict = re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n        re.tpl_host_fuzzy_test = \"localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:\" + re.src_ZPCc + \"|>|$))\";\n        re.tpl_email_fuzzy = \"(^|\" + text_separators + '|\"|\\\\(|' + re.src_ZCc + \")(\" + re.src_email_name + \"@\" + re.tpl_host_fuzzy_strict + \")\";\n        re.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n        // but can start with > (markdown blockquote)\n        \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + \"))((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_fuzzy_strict + re.src_path + \")\";\n        re.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n        // but can start with > (markdown blockquote)\n        \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + \"))((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + \")\";\n        return re;\n      };\n    }\n  });\n\n  // node_modules/linkify-it/index.js\n  var require_linkify_it = __commonJS({\n    \"node_modules/linkify-it/index.js\"(exports, module) {\n      \"use strict\";\n      function assign(obj) {\n        var sources = Array.prototype.slice.call(arguments, 1);\n        sources.forEach(function(source) {\n          if (!source) {\n            return;\n          }\n          Object.keys(source).forEach(function(key) {\n            obj[key] = source[key];\n          });\n        });\n        return obj;\n      }\n      function _class(obj) {\n        return Object.prototype.toString.call(obj);\n      }\n      function isString(obj) {\n        return _class(obj) === \"[object String]\";\n      }\n      function isObject(obj) {\n        return _class(obj) === \"[object Object]\";\n      }\n      function isRegExp(obj) {\n        return _class(obj) === \"[object RegExp]\";\n      }\n      function isFunction(obj) {\n        return _class(obj) === \"[object Function]\";\n      }\n      function escapeRE(str) {\n        return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, \"\\\\$&\");\n      }\n      var defaultOptions = {\n        fuzzyLink: true,\n        fuzzyEmail: true,\n        fuzzyIP: false\n      };\n      function isOptionsObj(obj) {\n        return Object.keys(obj || {}).reduce(function(acc, k) {\n          return acc || defaultOptions.hasOwnProperty(k);\n        }, false);\n      }\n      var defaultSchemas = {\n        \"http:\": {\n          validate: function(text, pos, self) {\n            var tail = text.slice(pos);\n            if (!self.re.http) {\n              self.re.http = new RegExp(\n                \"^\\\\/\\\\/\" + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path,\n                \"i\"\n              );\n            }\n            if (self.re.http.test(tail)) {\n              return tail.match(self.re.http)[0].length;\n            }\n            return 0;\n          }\n        },\n        \"https:\": \"http:\",\n        \"ftp:\": \"http:\",\n        \"//\": {\n          validate: function(text, pos, self) {\n            var tail = text.slice(pos);\n            if (!self.re.no_http) {\n              self.re.no_http = new RegExp(\n                \"^\" + self.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'\n                // with code comments\n                \"(?:localhost|(?:(?:\" + self.re.src_domain + \")\\\\.)+\" + self.re.src_domain_root + \")\" + self.re.src_port + self.re.src_host_terminator + self.re.src_path,\n                \"i\"\n              );\n            }\n            if (self.re.no_http.test(tail)) {\n              if (pos >= 3 && text[pos - 3] === \":\") {\n                return 0;\n              }\n              if (pos >= 3 && text[pos - 3] === \"/\") {\n                return 0;\n              }\n              return tail.match(self.re.no_http)[0].length;\n            }\n            return 0;\n          }\n        },\n        \"mailto:\": {\n          validate: function(text, pos, self) {\n            var tail = text.slice(pos);\n            if (!self.re.mailto) {\n              self.re.mailto = new RegExp(\n                \"^\" + self.re.src_email_name + \"@\" + self.re.src_host_strict,\n                \"i\"\n              );\n            }\n            if (self.re.mailto.test(tail)) {\n              return tail.match(self.re.mailto)[0].length;\n            }\n            return 0;\n          }\n        }\n      };\n      var tlds_2ch_src_re = \"a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]\";\n      var tlds_default = \"biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\\u0440\\u0444\".split(\"|\");\n      function resetScanCache(self) {\n        self.__index__ = -1;\n        self.__text_cache__ = \"\";\n      }\n      function createValidator(re) {\n        return function(text, pos) {\n          var tail = text.slice(pos);\n          if (re.test(tail)) {\n            return tail.match(re)[0].length;\n          }\n          return 0;\n        };\n      }\n      function createNormalizer() {\n        return function(match, self) {\n          self.normalize(match);\n        };\n      }\n      function compile(self) {\n        var re = self.re = require_re()(self.__opts__);\n        var tlds = self.__tlds__.slice();\n        self.onCompile();\n        if (!self.__tlds_replaced__) {\n          tlds.push(tlds_2ch_src_re);\n        }\n        tlds.push(re.src_xn);\n        re.src_tlds = tlds.join(\"|\");\n        function untpl(tpl) {\n          return tpl.replace(\"%TLDS%\", re.src_tlds);\n        }\n        re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), \"i\");\n        re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), \"i\");\n        re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), \"i\");\n        re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), \"i\");\n        var aliases = [];\n        self.__compiled__ = {};\n        function schemaError(name, val) {\n          throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n        }\n        Object.keys(self.__schemas__).forEach(function(name) {\n          var val = self.__schemas__[name];\n          if (val === null) {\n            return;\n          }\n          var compiled = { validate: null, link: null };\n          self.__compiled__[name] = compiled;\n          if (isObject(val)) {\n            if (isRegExp(val.validate)) {\n              compiled.validate = createValidator(val.validate);\n            } else if (isFunction(val.validate)) {\n              compiled.validate = val.validate;\n            } else {\n              schemaError(name, val);\n            }\n            if (isFunction(val.normalize)) {\n              compiled.normalize = val.normalize;\n            } else if (!val.normalize) {\n              compiled.normalize = createNormalizer();\n            } else {\n              schemaError(name, val);\n            }\n            return;\n          }\n          if (isString(val)) {\n            aliases.push(name);\n            return;\n          }\n          schemaError(name, val);\n        });\n        aliases.forEach(function(alias) {\n          if (!self.__compiled__[self.__schemas__[alias]]) {\n            return;\n          }\n          self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate;\n          self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize;\n        });\n        self.__compiled__[\"\"] = { validate: null, normalize: createNormalizer() };\n        var slist = Object.keys(self.__compiled__).filter(function(name) {\n          return name.length > 0 && self.__compiled__[name];\n        }).map(escapeRE).join(\"|\");\n        self.re.schema_test = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + \"))(\" + slist + \")\", \"i\");\n        self.re.schema_search = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + \"))(\" + slist + \")\", \"ig\");\n        self.re.schema_at_start = RegExp(\"^\" + self.re.schema_search.source, \"i\");\n        self.re.pretest = RegExp(\n          \"(\" + self.re.schema_test.source + \")|(\" + self.re.host_fuzzy_test.source + \")|@\",\n          \"i\"\n        );\n        resetScanCache(self);\n      }\n      function Match(self, shift) {\n        var start = self.__index__, end = self.__last_index__, text = self.__text_cache__.slice(start, end);\n        this.schema = self.__schema__.toLowerCase();\n        this.index = start + shift;\n        this.lastIndex = end + shift;\n        this.raw = text;\n        this.text = text;\n        this.url = text;\n      }\n      function createMatch(self, shift) {\n        var match = new Match(self, shift);\n        self.__compiled__[match.schema].normalize(match, self);\n        return match;\n      }\n      function LinkifyIt(schemas, options) {\n        if (!(this instanceof LinkifyIt)) {\n          return new LinkifyIt(schemas, options);\n        }\n        if (!options) {\n          if (isOptionsObj(schemas)) {\n            options = schemas;\n            schemas = {};\n          }\n        }\n        this.__opts__ = assign({}, defaultOptions, options);\n        this.__index__ = -1;\n        this.__last_index__ = -1;\n        this.__schema__ = \"\";\n        this.__text_cache__ = \"\";\n        this.__schemas__ = assign({}, defaultSchemas, schemas);\n        this.__compiled__ = {};\n        this.__tlds__ = tlds_default;\n        this.__tlds_replaced__ = false;\n        this.re = {};\n        compile(this);\n      }\n      LinkifyIt.prototype.add = function add(schema, definition) {\n        this.__schemas__[schema] = definition;\n        compile(this);\n        return this;\n      };\n      LinkifyIt.prototype.set = function set(options) {\n        this.__opts__ = assign(this.__opts__, options);\n        return this;\n      };\n      LinkifyIt.prototype.test = function test(text) {\n        this.__text_cache__ = text;\n        this.__index__ = -1;\n        if (!text.length) {\n          return false;\n        }\n        var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n        if (this.re.schema_test.test(text)) {\n          re = this.re.schema_search;\n          re.lastIndex = 0;\n          while ((m = re.exec(text)) !== null) {\n            len = this.testSchemaAt(text, m[2], re.lastIndex);\n            if (len) {\n              this.__schema__ = m[2];\n              this.__index__ = m.index + m[1].length;\n              this.__last_index__ = m.index + m[0].length + len;\n              break;\n            }\n          }\n        }\n        if (this.__opts__.fuzzyLink && this.__compiled__[\"http:\"]) {\n          tld_pos = text.search(this.re.host_fuzzy_test);\n          if (tld_pos >= 0) {\n            if (this.__index__ < 0 || tld_pos < this.__index__) {\n              if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n                shift = ml.index + ml[1].length;\n                if (this.__index__ < 0 || shift < this.__index__) {\n                  this.__schema__ = \"\";\n                  this.__index__ = shift;\n                  this.__last_index__ = ml.index + ml[0].length;\n                }\n              }\n            }\n          }\n        }\n        if (this.__opts__.fuzzyEmail && this.__compiled__[\"mailto:\"]) {\n          at_pos = text.indexOf(\"@\");\n          if (at_pos >= 0) {\n            if ((me = text.match(this.re.email_fuzzy)) !== null) {\n              shift = me.index + me[1].length;\n              next = me.index + me[0].length;\n              if (this.__index__ < 0 || shift < this.__index__ || shift === this.__index__ && next > this.__last_index__) {\n                this.__schema__ = \"mailto:\";\n                this.__index__ = shift;\n                this.__last_index__ = next;\n              }\n            }\n          }\n        }\n        return this.__index__ >= 0;\n      };\n      LinkifyIt.prototype.pretest = function pretest(text) {\n        return this.re.pretest.test(text);\n      };\n      LinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n        if (!this.__compiled__[schema.toLowerCase()]) {\n          return 0;\n        }\n        return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n      };\n      LinkifyIt.prototype.match = function match(text) {\n        var shift = 0, result = [];\n        if (this.__index__ >= 0 && this.__text_cache__ === text) {\n          result.push(createMatch(this, shift));\n          shift = this.__last_index__;\n        }\n        var tail = shift ? text.slice(shift) : text;\n        while (this.test(tail)) {\n          result.push(createMatch(this, shift));\n          tail = tail.slice(this.__last_index__);\n          shift += this.__last_index__;\n        }\n        if (result.length) {\n          return result;\n        }\n        return null;\n      };\n      LinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n        this.__text_cache__ = text;\n        this.__index__ = -1;\n        if (!text.length)\n          return null;\n        var m = this.re.schema_at_start.exec(text);\n        if (!m)\n          return null;\n        var len = this.testSchemaAt(text, m[2], m[0].length);\n        if (!len)\n          return null;\n        this.__schema__ = m[2];\n        this.__index__ = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        return createMatch(this, 0);\n      };\n      LinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n        list = Array.isArray(list) ? list : [list];\n        if (!keepOld) {\n          this.__tlds__ = list.slice();\n          this.__tlds_replaced__ = true;\n          compile(this);\n          return this;\n        }\n        this.__tlds__ = this.__tlds__.concat(list).sort().filter(function(el, idx, arr) {\n          return el !== arr[idx - 1];\n        }).reverse();\n        compile(this);\n        return this;\n      };\n      LinkifyIt.prototype.normalize = function normalize(match) {\n        if (!match.schema) {\n          match.url = \"http://\" + match.url;\n        }\n        if (match.schema === \"mailto:\" && !/^mailto:/i.test(match.url)) {\n          match.url = \"mailto:\" + match.url;\n        }\n      };\n      LinkifyIt.prototype.onCompile = function onCompile() {\n      };\n      module.exports = LinkifyIt;\n    }\n  });\n\n  // node_modules/punycode/punycode.js\n  var require_punycode = __commonJS({\n    \"node_modules/punycode/punycode.js\"(exports, module) {\n      \"use strict\";\n      var maxInt = 2147483647;\n      var base = 36;\n      var tMin = 1;\n      var tMax = 26;\n      var skew = 38;\n      var damp = 700;\n      var initialBias = 72;\n      var initialN = 128;\n      var delimiter = \"-\";\n      var regexPunycode = /^xn--/;\n      var regexNonASCII = /[^\\0-\\x7F]/;\n      var regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g;\n      var errors = {\n        \"overflow\": \"Overflow: input needs wider integers to process\",\n        \"not-basic\": \"Illegal input >= 0x80 (not a basic code point)\",\n        \"invalid-input\": \"Invalid input\"\n      };\n      var baseMinusTMin = base - tMin;\n      var floor = Math.floor;\n      var stringFromCharCode = String.fromCharCode;\n      function error(type) {\n        throw new RangeError(errors[type]);\n      }\n      function map(array, callback) {\n        const result = [];\n        let length = array.length;\n        while (length--) {\n          result[length] = callback(array[length]);\n        }\n        return result;\n      }\n      function mapDomain(domain, callback) {\n        const parts = domain.split(\"@\");\n        let result = \"\";\n        if (parts.length > 1) {\n          result = parts[0] + \"@\";\n          domain = parts[1];\n        }\n        domain = domain.replace(regexSeparators, \".\");\n        const labels = domain.split(\".\");\n        const encoded = map(labels, callback).join(\".\");\n        return result + encoded;\n      }\n      function ucs2decode(string) {\n        const output = [];\n        let counter = 0;\n        const length = string.length;\n        while (counter < length) {\n          const value = string.charCodeAt(counter++);\n          if (value >= 55296 && value <= 56319 && counter < length) {\n            const extra = string.charCodeAt(counter++);\n            if ((extra & 64512) == 56320) {\n              output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n            } else {\n              output.push(value);\n              counter--;\n            }\n          } else {\n            output.push(value);\n          }\n        }\n        return output;\n      }\n      var ucs2encode = (codePoints) => String.fromCodePoint(...codePoints);\n      var basicToDigit = function(codePoint) {\n        if (codePoint >= 48 && codePoint < 58) {\n          return 26 + (codePoint - 48);\n        }\n        if (codePoint >= 65 && codePoint < 91) {\n          return codePoint - 65;\n        }\n        if (codePoint >= 97 && codePoint < 123) {\n          return codePoint - 97;\n        }\n        return base;\n      };\n      var digitToBasic = function(digit, flag) {\n        return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n      };\n      var adapt = function(delta, numPoints, firstTime) {\n        let k = 0;\n        delta = firstTime ? floor(delta / damp) : delta >> 1;\n        delta += floor(delta / numPoints);\n        for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n          delta = floor(delta / baseMinusTMin);\n        }\n        return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n      };\n      var decode = function(input) {\n        const output = [];\n        const inputLength = input.length;\n        let i = 0;\n        let n = initialN;\n        let bias = initialBias;\n        let basic = input.lastIndexOf(delimiter);\n        if (basic < 0) {\n          basic = 0;\n        }\n        for (let j = 0; j < basic; ++j) {\n          if (input.charCodeAt(j) >= 128) {\n            error(\"not-basic\");\n          }\n          output.push(input.charCodeAt(j));\n        }\n        for (let index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {\n          const oldi = i;\n          for (let w = 1, k = base; ; k += base) {\n            if (index >= inputLength) {\n              error(\"invalid-input\");\n            }\n            const digit = basicToDigit(input.charCodeAt(index++));\n            if (digit >= base) {\n              error(\"invalid-input\");\n            }\n            if (digit > floor((maxInt - i) / w)) {\n              error(\"overflow\");\n            }\n            i += digit * w;\n            const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n            if (digit < t) {\n              break;\n            }\n            const baseMinusT = base - t;\n            if (w > floor(maxInt / baseMinusT)) {\n              error(\"overflow\");\n            }\n            w *= baseMinusT;\n          }\n          const out = output.length + 1;\n          bias = adapt(i - oldi, out, oldi == 0);\n          if (floor(i / out) > maxInt - n) {\n            error(\"overflow\");\n          }\n          n += floor(i / out);\n          i %= out;\n          output.splice(i++, 0, n);\n        }\n        return String.fromCodePoint(...output);\n      };\n      var encode = function(input) {\n        const output = [];\n        input = ucs2decode(input);\n        const inputLength = input.length;\n        let n = initialN;\n        let delta = 0;\n        let bias = initialBias;\n        for (const currentValue of input) {\n          if (currentValue < 128) {\n            output.push(stringFromCharCode(currentValue));\n          }\n        }\n        const basicLength = output.length;\n        let handledCPCount = basicLength;\n        if (basicLength) {\n          output.push(delimiter);\n        }\n        while (handledCPCount < inputLength) {\n          let m = maxInt;\n          for (const currentValue of input) {\n            if (currentValue >= n && currentValue < m) {\n              m = currentValue;\n            }\n          }\n          const handledCPCountPlusOne = handledCPCount + 1;\n          if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n            error(\"overflow\");\n          }\n          delta += (m - n) * handledCPCountPlusOne;\n          n = m;\n          for (const currentValue of input) {\n            if (currentValue < n && ++delta > maxInt) {\n              error(\"overflow\");\n            }\n            if (currentValue === n) {\n              let q = delta;\n              for (let k = base; ; k += base) {\n                const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n                if (q < t) {\n                  break;\n                }\n                const qMinusT = q - t;\n                const baseMinusT = base - t;\n                output.push(\n                  stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n                );\n                q = floor(qMinusT / baseMinusT);\n              }\n              output.push(stringFromCharCode(digitToBasic(q, 0)));\n              bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n              delta = 0;\n              ++handledCPCount;\n            }\n          }\n          ++delta;\n          ++n;\n        }\n        return output.join(\"\");\n      };\n      var toUnicode = function(input) {\n        return mapDomain(input, function(string) {\n          return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n        });\n      };\n      var toASCII = function(input) {\n        return mapDomain(input, function(string) {\n          return regexNonASCII.test(string) ? \"xn--\" + encode(string) : string;\n        });\n      };\n      var punycode = {\n        /**\n         * A string representing the current Punycode.js version number.\n         * @memberOf punycode\n         * @type String\n         */\n        \"version\": \"2.3.1\",\n        /**\n         * An object of methods to convert from JavaScript's internal character\n         * representation (UCS-2) to Unicode code points, and back.\n         * @see <https://mathiasbynens.be/notes/javascript-encoding>\n         * @memberOf punycode\n         * @type Object\n         */\n        \"ucs2\": {\n          \"decode\": ucs2decode,\n          \"encode\": ucs2encode\n        },\n        \"decode\": decode,\n        \"encode\": encode,\n        \"toASCII\": toASCII,\n        \"toUnicode\": toUnicode\n      };\n      module.exports = punycode;\n    }\n  });\n\n  // node_modules/markdown-it/lib/presets/default.js\n  var require_default = __commonJS({\n    \"node_modules/markdown-it/lib/presets/default.js\"(exports, module) {\n      \"use strict\";\n      module.exports = {\n        options: {\n          html: false,\n          // Enable HTML tags in source\n          xhtmlOut: false,\n          // Use '/' to close single tags (<br />)\n          breaks: false,\n          // Convert '\\n' in paragraphs into <br>\n          langPrefix: \"language-\",\n          // CSS language prefix for fenced blocks\n          linkify: false,\n          // autoconvert URL-like texts to links\n          // Enable some language-neutral replacements + quotes beautification\n          typographer: false,\n          // Double + single quotes replacement pairs, when typographer enabled,\n          // and smartquotes on. Could be either a String or an Array.\n          //\n          // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n          // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n          quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n          /* “”‘’ */\n          // Highlighter function. Should return escaped HTML,\n          // or '' if the source string is not changed and should be escaped externaly.\n          // If result starts with <pre... internal wrapper is skipped.\n          //\n          // function (/*str, lang*/) { return ''; }\n          //\n          highlight: null,\n          maxNesting: 100\n          // Internal protection, recursion limit\n        },\n        components: {\n          core: {},\n          block: {},\n          inline: {}\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/presets/zero.js\n  var require_zero = __commonJS({\n    \"node_modules/markdown-it/lib/presets/zero.js\"(exports, module) {\n      \"use strict\";\n      module.exports = {\n        options: {\n          html: false,\n          // Enable HTML tags in source\n          xhtmlOut: false,\n          // Use '/' to close single tags (<br />)\n          breaks: false,\n          // Convert '\\n' in paragraphs into <br>\n          langPrefix: \"language-\",\n          // CSS language prefix for fenced blocks\n          linkify: false,\n          // autoconvert URL-like texts to links\n          // Enable some language-neutral replacements + quotes beautification\n          typographer: false,\n          // Double + single quotes replacement pairs, when typographer enabled,\n          // and smartquotes on. Could be either a String or an Array.\n          //\n          // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n          // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n          quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n          /* “”‘’ */\n          // Highlighter function. Should return escaped HTML,\n          // or '' if the source string is not changed and should be escaped externaly.\n          // If result starts with <pre... internal wrapper is skipped.\n          //\n          // function (/*str, lang*/) { return ''; }\n          //\n          highlight: null,\n          maxNesting: 20\n          // Internal protection, recursion limit\n        },\n        components: {\n          core: {\n            rules: [\n              \"normalize\",\n              \"block\",\n              \"inline\",\n              \"text_join\"\n            ]\n          },\n          block: {\n            rules: [\n              \"paragraph\"\n            ]\n          },\n          inline: {\n            rules: [\n              \"text\"\n            ],\n            rules2: [\n              \"balance_pairs\",\n              \"fragments_join\"\n            ]\n          }\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/presets/commonmark.js\n  var require_commonmark = __commonJS({\n    \"node_modules/markdown-it/lib/presets/commonmark.js\"(exports, module) {\n      \"use strict\";\n      module.exports = {\n        options: {\n          html: true,\n          // Enable HTML tags in source\n          xhtmlOut: true,\n          // Use '/' to close single tags (<br />)\n          breaks: false,\n          // Convert '\\n' in paragraphs into <br>\n          langPrefix: \"language-\",\n          // CSS language prefix for fenced blocks\n          linkify: false,\n          // autoconvert URL-like texts to links\n          // Enable some language-neutral replacements + quotes beautification\n          typographer: false,\n          // Double + single quotes replacement pairs, when typographer enabled,\n          // and smartquotes on. Could be either a String or an Array.\n          //\n          // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n          // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n          quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n          /* “”‘’ */\n          // Highlighter function. Should return escaped HTML,\n          // or '' if the source string is not changed and should be escaped externaly.\n          // If result starts with <pre... internal wrapper is skipped.\n          //\n          // function (/*str, lang*/) { return ''; }\n          //\n          highlight: null,\n          maxNesting: 20\n          // Internal protection, recursion limit\n        },\n        components: {\n          core: {\n            rules: [\n              \"normalize\",\n              \"block\",\n              \"inline\",\n              \"text_join\"\n            ]\n          },\n          block: {\n            rules: [\n              \"blockquote\",\n              \"code\",\n              \"fence\",\n              \"heading\",\n              \"hr\",\n              \"html_block\",\n              \"lheading\",\n              \"list\",\n              \"reference\",\n              \"paragraph\"\n            ]\n          },\n          inline: {\n            rules: [\n              \"autolink\",\n              \"backticks\",\n              \"emphasis\",\n              \"entity\",\n              \"escape\",\n              \"html_inline\",\n              \"image\",\n              \"link\",\n              \"newline\",\n              \"text\"\n            ],\n            rules2: [\n              \"balance_pairs\",\n              \"emphasis\",\n              \"fragments_join\"\n            ]\n          }\n        }\n      };\n    }\n  });\n\n  // node_modules/markdown-it/lib/index.js\n  var require_lib = __commonJS({\n    \"node_modules/markdown-it/lib/index.js\"(exports, module) {\n      \"use strict\";\n      var utils = require_utils();\n      var helpers = require_helpers();\n      var Renderer = require_renderer();\n      var ParserCore = require_parser_core();\n      var ParserBlock = require_parser_block();\n      var ParserInline = require_parser_inline();\n      var LinkifyIt = require_linkify_it();\n      var mdurl = require_mdurl();\n      var punycode = require_punycode();\n      var config = {\n        default: require_default(),\n        zero: require_zero(),\n        commonmark: require_commonmark()\n      };\n      var BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\n      var GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n      function validateLink(url) {\n        var str = url.trim().toLowerCase();\n        return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) ? true : false : true;\n      }\n      var RECODE_HOSTNAME_FOR = [\"http:\", \"https:\", \"mailto:\"];\n      function normalizeLink(url) {\n        var parsed = mdurl.parse(url, true);\n        if (parsed.hostname) {\n          if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n            try {\n              parsed.hostname = punycode.toASCII(parsed.hostname);\n            } catch (er) {\n            }\n          }\n        }\n        return mdurl.encode(mdurl.format(parsed));\n      }\n      function normalizeLinkText(url) {\n        var parsed = mdurl.parse(url, true);\n        if (parsed.hostname) {\n          if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n            try {\n              parsed.hostname = punycode.toUnicode(parsed.hostname);\n            } catch (er) {\n            }\n          }\n        }\n        return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + \"%\");\n      }\n      function MarkdownIt2(presetName, options) {\n        if (!(this instanceof MarkdownIt2)) {\n          return new MarkdownIt2(presetName, options);\n        }\n        if (!options) {\n          if (!utils.isString(presetName)) {\n            options = presetName || {};\n            presetName = \"default\";\n          }\n        }\n        this.inline = new ParserInline();\n        this.block = new ParserBlock();\n        this.core = new ParserCore();\n        this.renderer = new Renderer();\n        this.linkify = new LinkifyIt();\n        this.validateLink = validateLink;\n        this.normalizeLink = normalizeLink;\n        this.normalizeLinkText = normalizeLinkText;\n        this.utils = utils;\n        this.helpers = utils.assign({}, helpers);\n        this.options = {};\n        this.configure(presetName);\n        if (options) {\n          this.set(options);\n        }\n      }\n      MarkdownIt2.prototype.set = function(options) {\n        utils.assign(this.options, options);\n        return this;\n      };\n      MarkdownIt2.prototype.configure = function(presets) {\n        var self = this, presetName;\n        if (utils.isString(presets)) {\n          presetName = presets;\n          presets = config[presetName];\n          if (!presets) {\n            throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name');\n          }\n        }\n        if (!presets) {\n          throw new Error(\"Wrong `markdown-it` preset, can't be empty\");\n        }\n        if (presets.options) {\n          self.set(presets.options);\n        }\n        if (presets.components) {\n          Object.keys(presets.components).forEach(function(name) {\n            if (presets.components[name].rules) {\n              self[name].ruler.enableOnly(presets.components[name].rules);\n            }\n            if (presets.components[name].rules2) {\n              self[name].ruler2.enableOnly(presets.components[name].rules2);\n            }\n          });\n        }\n        return this;\n      };\n      MarkdownIt2.prototype.enable = function(list, ignoreInvalid) {\n        var result = [];\n        if (!Array.isArray(list)) {\n          list = [list];\n        }\n        [\"core\", \"block\", \"inline\"].forEach(function(chain) {\n          result = result.concat(this[chain].ruler.enable(list, true));\n        }, this);\n        result = result.concat(this.inline.ruler2.enable(list, true));\n        var missed = list.filter(function(name) {\n          return result.indexOf(name) < 0;\n        });\n        if (missed.length && !ignoreInvalid) {\n          throw new Error(\"MarkdownIt. Failed to enable unknown rule(s): \" + missed);\n        }\n        return this;\n      };\n      MarkdownIt2.prototype.disable = function(list, ignoreInvalid) {\n        var result = [];\n        if (!Array.isArray(list)) {\n          list = [list];\n        }\n        [\"core\", \"block\", \"inline\"].forEach(function(chain) {\n          result = result.concat(this[chain].ruler.disable(list, true));\n        }, this);\n        result = result.concat(this.inline.ruler2.disable(list, true));\n        var missed = list.filter(function(name) {\n          return result.indexOf(name) < 0;\n        });\n        if (missed.length && !ignoreInvalid) {\n          throw new Error(\"MarkdownIt. Failed to disable unknown rule(s): \" + missed);\n        }\n        return this;\n      };\n      MarkdownIt2.prototype.use = function(plugin) {\n        var args = [this].concat(Array.prototype.slice.call(arguments, 1));\n        plugin.apply(plugin, args);\n        return this;\n      };\n      MarkdownIt2.prototype.parse = function(src, env) {\n        if (typeof src !== \"string\") {\n          throw new Error(\"Input data should be a String\");\n        }\n        var state = new this.core.State(src, this, env);\n        this.core.process(state);\n        return state.tokens;\n      };\n      MarkdownIt2.prototype.render = function(src, env) {\n        env = env || {};\n        return this.renderer.render(this.parse(src, env), this.options, env);\n      };\n      MarkdownIt2.prototype.parseInline = function(src, env) {\n        var state = new this.core.State(src, this, env);\n        state.inlineMode = true;\n        this.core.process(state);\n        return state.tokens;\n      };\n      MarkdownIt2.prototype.renderInline = function(src, env) {\n        env = env || {};\n        return this.renderer.render(this.parseInline(src, env), this.options, env);\n      };\n      module.exports = MarkdownIt2;\n    }\n  });\n\n  // node_modules/markdown-it/index.js\n  var require_markdown_it = __commonJS({\n    \"node_modules/markdown-it/index.js\"(exports, module) {\n      \"use strict\";\n      module.exports = require_lib();\n    }\n  });\n\n  // node_modules/dompurify/dist/purify.cjs.js\n  var require_purify_cjs = __commonJS({\n    \"node_modules/dompurify/dist/purify.cjs.js\"(exports, module) {\n      \"use strict\";\n      var {\n        entries,\n        setPrototypeOf,\n        isFrozen,\n        getPrototypeOf,\n        getOwnPropertyDescriptor\n      } = Object;\n      var {\n        freeze,\n        seal,\n        create\n      } = Object;\n      var {\n        apply,\n        construct\n      } = typeof Reflect !== \"undefined\" && Reflect;\n      if (!freeze) {\n        freeze = function freeze2(x) {\n          return x;\n        };\n      }\n      if (!seal) {\n        seal = function seal2(x) {\n          return x;\n        };\n      }\n      if (!apply) {\n        apply = function apply2(fun, thisValue, args) {\n          return fun.apply(thisValue, args);\n        };\n      }\n      if (!construct) {\n        construct = function construct2(Func, args) {\n          return new Func(...args);\n        };\n      }\n      var arrayForEach = unapply(Array.prototype.forEach);\n      var arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\n      var arrayPop = unapply(Array.prototype.pop);\n      var arrayPush = unapply(Array.prototype.push);\n      var arraySplice = unapply(Array.prototype.splice);\n      var stringToLowerCase = unapply(String.prototype.toLowerCase);\n      var stringToString = unapply(String.prototype.toString);\n      var stringMatch = unapply(String.prototype.match);\n      var stringReplace = unapply(String.prototype.replace);\n      var stringIndexOf = unapply(String.prototype.indexOf);\n      var stringTrim = unapply(String.prototype.trim);\n      var objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n      var regExpTest = unapply(RegExp.prototype.test);\n      var typeErrorCreate = unconstruct(TypeError);\n      function unapply(func) {\n        return function(thisArg) {\n          if (thisArg instanceof RegExp) {\n            thisArg.lastIndex = 0;\n          }\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          return apply(func, thisArg, args);\n        };\n      }\n      function unconstruct(func) {\n        return function() {\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n          return construct(func, args);\n        };\n      }\n      function addToSet(set, array) {\n        let transformCaseFunc = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : stringToLowerCase;\n        if (setPrototypeOf) {\n          setPrototypeOf(set, null);\n        }\n        let l = array.length;\n        while (l--) {\n          let element = array[l];\n          if (typeof element === \"string\") {\n            const lcElement = transformCaseFunc(element);\n            if (lcElement !== element) {\n              if (!isFrozen(array)) {\n                array[l] = lcElement;\n              }\n              element = lcElement;\n            }\n          }\n          set[element] = true;\n        }\n        return set;\n      }\n      function cleanArray(array) {\n        for (let index = 0; index < array.length; index++) {\n          const isPropertyExist = objectHasOwnProperty(array, index);\n          if (!isPropertyExist) {\n            array[index] = null;\n          }\n        }\n        return array;\n      }\n      function clone(object) {\n        const newObject = create(null);\n        for (const [property, value] of entries(object)) {\n          const isPropertyExist = objectHasOwnProperty(object, property);\n          if (isPropertyExist) {\n            if (Array.isArray(value)) {\n              newObject[property] = cleanArray(value);\n            } else if (value && typeof value === \"object\" && value.constructor === Object) {\n              newObject[property] = clone(value);\n            } else {\n              newObject[property] = value;\n            }\n          }\n        }\n        return newObject;\n      }\n      function lookupGetter(object, prop) {\n        while (object !== null) {\n          const desc = getOwnPropertyDescriptor(object, prop);\n          if (desc) {\n            if (desc.get) {\n              return unapply(desc.get);\n            }\n            if (typeof desc.value === \"function\") {\n              return unapply(desc.value);\n            }\n          }\n          object = getPrototypeOf(object);\n        }\n        function fallbackValue() {\n          return null;\n        }\n        return fallbackValue;\n      }\n      var html$1 = freeze([\"a\", \"abbr\", \"acronym\", \"address\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"bdi\", \"bdo\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"decorator\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"element\", \"em\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"img\", \"input\", \"ins\", \"kbd\", \"label\", \"legend\", \"li\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meter\", \"nav\", \"nobr\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"picture\", \"pre\", \"progress\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"section\", \"select\", \"shadow\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\"]);\n      var svg$1 = freeze([\"svg\", \"a\", \"altglyph\", \"altglyphdef\", \"altglyphitem\", \"animatecolor\", \"animatemotion\", \"animatetransform\", \"circle\", \"clippath\", \"defs\", \"desc\", \"ellipse\", \"filter\", \"font\", \"g\", \"glyph\", \"glyphref\", \"hkern\", \"image\", \"line\", \"lineargradient\", \"marker\", \"mask\", \"metadata\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialgradient\", \"rect\", \"stop\", \"style\", \"switch\", \"symbol\", \"text\", \"textpath\", \"title\", \"tref\", \"tspan\", \"view\", \"vkern\"]);\n      var svgFilters = freeze([\"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feDropShadow\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\"]);\n      var svgDisallowed = freeze([\"animate\", \"color-profile\", \"cursor\", \"discard\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignobject\", \"hatch\", \"hatchpath\", \"mesh\", \"meshgradient\", \"meshpatch\", \"meshrow\", \"missing-glyph\", \"script\", \"set\", \"solidcolor\", \"unknown\", \"use\"]);\n      var mathMl$1 = freeze([\"math\", \"menclose\", \"merror\", \"mfenced\", \"mfrac\", \"mglyph\", \"mi\", \"mlabeledtr\", \"mmultiscripts\", \"mn\", \"mo\", \"mover\", \"mpadded\", \"mphantom\", \"mroot\", \"mrow\", \"ms\", \"mspace\", \"msqrt\", \"mstyle\", \"msub\", \"msup\", \"msubsup\", \"mtable\", \"mtd\", \"mtext\", \"mtr\", \"munder\", \"munderover\", \"mprescripts\"]);\n      var mathMlDisallowed = freeze([\"maction\", \"maligngroup\", \"malignmark\", \"mlongdiv\", \"mscarries\", \"mscarry\", \"msgroup\", \"mstack\", \"msline\", \"msrow\", \"semantics\", \"annotation\", \"annotation-xml\", \"mprescripts\", \"none\"]);\n      var text = freeze([\"#text\"]);\n      var html = freeze([\"accept\", \"action\", \"align\", \"alt\", \"autocapitalize\", \"autocomplete\", \"autopictureinpicture\", \"autoplay\", \"background\", \"bgcolor\", \"border\", \"capture\", \"cellpadding\", \"cellspacing\", \"checked\", \"cite\", \"class\", \"clear\", \"color\", \"cols\", \"colspan\", \"controls\", \"controlslist\", \"coords\", \"crossorigin\", \"datetime\", \"decoding\", \"default\", \"dir\", \"disabled\", \"disablepictureinpicture\", \"disableremoteplayback\", \"download\", \"draggable\", \"enctype\", \"enterkeyhint\", \"face\", \"for\", \"headers\", \"height\", \"hidden\", \"high\", \"href\", \"hreflang\", \"id\", \"inputmode\", \"integrity\", \"ismap\", \"kind\", \"label\", \"lang\", \"list\", \"loading\", \"loop\", \"low\", \"max\", \"maxlength\", \"media\", \"method\", \"min\", \"minlength\", \"multiple\", \"muted\", \"name\", \"nonce\", \"noshade\", \"novalidate\", \"nowrap\", \"open\", \"optimum\", \"pattern\", \"placeholder\", \"playsinline\", \"popover\", \"popovertarget\", \"popovertargetaction\", \"poster\", \"preload\", \"pubdate\", \"radiogroup\", \"readonly\", \"rel\", \"required\", \"rev\", \"reversed\", \"role\", \"rows\", \"rowspan\", \"spellcheck\", \"scope\", \"selected\", \"shape\", \"size\", \"sizes\", \"span\", \"srclang\", \"start\", \"src\", \"srcset\", \"step\", \"style\", \"summary\", \"tabindex\", \"title\", \"translate\", \"type\", \"usemap\", \"valign\", \"value\", \"width\", \"wrap\", \"xmlns\", \"slot\"]);\n      var svg = freeze([\"accent-height\", \"accumulate\", \"additive\", \"alignment-baseline\", \"amplitude\", \"ascent\", \"attributename\", \"attributetype\", \"azimuth\", \"basefrequency\", \"baseline-shift\", \"begin\", \"bias\", \"by\", \"class\", \"clip\", \"clippathunits\", \"clip-path\", \"clip-rule\", \"color\", \"color-interpolation\", \"color-interpolation-filters\", \"color-profile\", \"color-rendering\", \"cx\", \"cy\", \"d\", \"dx\", \"dy\", \"diffuseconstant\", \"direction\", \"display\", \"divisor\", \"dur\", \"edgemode\", \"elevation\", \"end\", \"exponent\", \"fill\", \"fill-opacity\", \"fill-rule\", \"filter\", \"filterunits\", \"flood-color\", \"flood-opacity\", \"font-family\", \"font-size\", \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-variant\", \"font-weight\", \"fx\", \"fy\", \"g1\", \"g2\", \"glyph-name\", \"glyphref\", \"gradientunits\", \"gradienttransform\", \"height\", \"href\", \"id\", \"image-rendering\", \"in\", \"in2\", \"intercept\", \"k\", \"k1\", \"k2\", \"k3\", \"k4\", \"kerning\", \"keypoints\", \"keysplines\", \"keytimes\", \"lang\", \"lengthadjust\", \"letter-spacing\", \"kernelmatrix\", \"kernelunitlength\", \"lighting-color\", \"local\", \"marker-end\", \"marker-mid\", \"marker-start\", \"markerheight\", \"markerunits\", \"markerwidth\", \"maskcontentunits\", \"maskunits\", \"max\", \"mask\", \"media\", \"method\", \"mode\", \"min\", \"name\", \"numoctaves\", \"offset\", \"operator\", \"opacity\", \"order\", \"orient\", \"orientation\", \"origin\", \"overflow\", \"paint-order\", \"path\", \"pathlength\", \"patterncontentunits\", \"patterntransform\", \"patternunits\", \"points\", \"preservealpha\", \"preserveaspectratio\", \"primitiveunits\", \"r\", \"rx\", \"ry\", \"radius\", \"refx\", \"refy\", \"repeatcount\", \"repeatdur\", \"restart\", \"result\", \"rotate\", \"scale\", \"seed\", \"shape-rendering\", \"slope\", \"specularconstant\", \"specularexponent\", \"spreadmethod\", \"startoffset\", \"stddeviation\", \"stitchtiles\", \"stop-color\", \"stop-opacity\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke\", \"stroke-width\", \"style\", \"surfacescale\", \"systemlanguage\", \"tabindex\", \"tablevalues\", \"targetx\", \"targety\", \"transform\", \"transform-origin\", \"text-anchor\", \"text-decoration\", \"text-rendering\", \"textlength\", \"type\", \"u1\", \"u2\", \"unicode\", \"values\", \"viewbox\", \"visibility\", \"version\", \"vert-adv-y\", \"vert-origin-x\", \"vert-origin-y\", \"width\", \"word-spacing\", \"wrap\", \"writing-mode\", \"xchannelselector\", \"ychannelselector\", \"x\", \"x1\", \"x2\", \"xmlns\", \"y\", \"y1\", \"y2\", \"z\", \"zoomandpan\"]);\n      var mathMl = freeze([\"accent\", \"accentunder\", \"align\", \"bevelled\", \"close\", \"columnsalign\", \"columnlines\", \"columnspan\", \"denomalign\", \"depth\", \"dir\", \"display\", \"displaystyle\", \"encoding\", \"fence\", \"frame\", \"height\", \"href\", \"id\", \"largeop\", \"length\", \"linethickness\", \"lspace\", \"lquote\", \"mathbackground\", \"mathcolor\", \"mathsize\", \"mathvariant\", \"maxsize\", \"minsize\", \"movablelimits\", \"notation\", \"numalign\", \"open\", \"rowalign\", \"rowlines\", \"rowspacing\", \"rowspan\", \"rspace\", \"rquote\", \"scriptlevel\", \"scriptminsize\", \"scriptsizemultiplier\", \"selection\", \"separator\", \"separators\", \"stretchy\", \"subscriptshift\", \"supscriptshift\", \"symmetric\", \"voffset\", \"width\", \"xmlns\"]);\n      var xml2 = freeze([\"xlink:href\", \"xml:id\", \"xlink:title\", \"xml:space\", \"xmlns:xlink\"]);\n      var MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm);\n      var ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n      var TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm);\n      var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/);\n      var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/);\n      var IS_ALLOWED_URI = seal(\n        /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i\n        // eslint-disable-line no-useless-escape\n      );\n      var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n      var ATTR_WHITESPACE = seal(\n        /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g\n        // eslint-disable-line no-control-regex\n      );\n      var DOCTYPE_NAME = seal(/^html$/i);\n      var CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n      var EXPRESSIONS = /* @__PURE__ */ Object.freeze({\n        __proto__: null,\n        ARIA_ATTR,\n        ATTR_WHITESPACE,\n        CUSTOM_ELEMENT,\n        DATA_ATTR,\n        DOCTYPE_NAME,\n        ERB_EXPR,\n        IS_ALLOWED_URI,\n        IS_SCRIPT_OR_DATA,\n        MUSTACHE_EXPR,\n        TMPLIT_EXPR\n      });\n      var NODE_TYPE = {\n        element: 1,\n        attribute: 2,\n        text: 3,\n        cdataSection: 4,\n        entityReference: 5,\n        // Deprecated\n        entityNode: 6,\n        // Deprecated\n        progressingInstruction: 7,\n        comment: 8,\n        document: 9,\n        documentType: 10,\n        documentFragment: 11,\n        notation: 12\n        // Deprecated\n      };\n      var getGlobal = function getGlobal2() {\n        return typeof window === \"undefined\" ? null : window;\n      };\n      var _createTrustedTypesPolicy = function _createTrustedTypesPolicy2(trustedTypes, purifyHostElement) {\n        if (typeof trustedTypes !== \"object\" || typeof trustedTypes.createPolicy !== \"function\") {\n          return null;\n        }\n        let suffix = null;\n        const ATTR_NAME = \"data-tt-policy-suffix\";\n        if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n          suffix = purifyHostElement.getAttribute(ATTR_NAME);\n        }\n        const policyName = \"dompurify\" + (suffix ? \"#\" + suffix : \"\");\n        try {\n          return trustedTypes.createPolicy(policyName, {\n            createHTML(html2) {\n              return html2;\n            },\n            createScriptURL(scriptUrl) {\n              return scriptUrl;\n            }\n          });\n        } catch (_) {\n          console.warn(\"TrustedTypes policy \" + policyName + \" could not be created.\");\n          return null;\n        }\n      };\n      var _createHooksMap = function _createHooksMap2() {\n        return {\n          afterSanitizeAttributes: [],\n          afterSanitizeElements: [],\n          afterSanitizeShadowDOM: [],\n          beforeSanitizeAttributes: [],\n          beforeSanitizeElements: [],\n          beforeSanitizeShadowDOM: [],\n          uponSanitizeAttribute: [],\n          uponSanitizeElement: [],\n          uponSanitizeShadowNode: []\n        };\n      };\n      function createDOMPurify() {\n        let window2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : getGlobal();\n        const DOMPurify2 = (root) => createDOMPurify(root);\n        DOMPurify2.version = \"3.2.6\";\n        DOMPurify2.removed = [];\n        if (!window2 || !window2.document || window2.document.nodeType !== NODE_TYPE.document || !window2.Element) {\n          DOMPurify2.isSupported = false;\n          return DOMPurify2;\n        }\n        let {\n          document: document2\n        } = window2;\n        const originalDocument = document2;\n        const currentScript = originalDocument.currentScript;\n        const {\n          DocumentFragment,\n          HTMLTemplateElement,\n          Node,\n          Element,\n          NodeFilter,\n          NamedNodeMap = window2.NamedNodeMap || window2.MozNamedAttrMap,\n          HTMLFormElement,\n          DOMParser,\n          trustedTypes\n        } = window2;\n        const ElementPrototype = Element.prototype;\n        const cloneNode = lookupGetter(ElementPrototype, \"cloneNode\");\n        const remove = lookupGetter(ElementPrototype, \"remove\");\n        const getNextSibling = lookupGetter(ElementPrototype, \"nextSibling\");\n        const getChildNodes = lookupGetter(ElementPrototype, \"childNodes\");\n        const getParentNode = lookupGetter(ElementPrototype, \"parentNode\");\n        if (typeof HTMLTemplateElement === \"function\") {\n          const template = document2.createElement(\"template\");\n          if (template.content && template.content.ownerDocument) {\n            document2 = template.content.ownerDocument;\n          }\n        }\n        let trustedTypesPolicy;\n        let emptyHTML = \"\";\n        const {\n          implementation,\n          createNodeIterator,\n          createDocumentFragment,\n          getElementsByTagName\n        } = document2;\n        const {\n          importNode\n        } = originalDocument;\n        let hooks = _createHooksMap();\n        DOMPurify2.isSupported = typeof entries === \"function\" && typeof getParentNode === \"function\" && implementation && implementation.createHTMLDocument !== void 0;\n        const {\n          MUSTACHE_EXPR: MUSTACHE_EXPR2,\n          ERB_EXPR: ERB_EXPR2,\n          TMPLIT_EXPR: TMPLIT_EXPR2,\n          DATA_ATTR: DATA_ATTR2,\n          ARIA_ATTR: ARIA_ATTR2,\n          IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA2,\n          ATTR_WHITESPACE: ATTR_WHITESPACE2,\n          CUSTOM_ELEMENT: CUSTOM_ELEMENT2\n        } = EXPRESSIONS;\n        let {\n          IS_ALLOWED_URI: IS_ALLOWED_URI$1\n        } = EXPRESSIONS;\n        let ALLOWED_TAGS = null;\n        const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n        let ALLOWED_ATTR = null;\n        const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml2]);\n        let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n          tagNameCheck: {\n            writable: true,\n            configurable: false,\n            enumerable: true,\n            value: null\n          },\n          attributeNameCheck: {\n            writable: true,\n            configurable: false,\n            enumerable: true,\n            value: null\n          },\n          allowCustomizedBuiltInElements: {\n            writable: true,\n            configurable: false,\n            enumerable: true,\n            value: false\n          }\n        }));\n        let FORBID_TAGS = null;\n        let FORBID_ATTR = null;\n        let ALLOW_ARIA_ATTR = true;\n        let ALLOW_DATA_ATTR = true;\n        let ALLOW_UNKNOWN_PROTOCOLS = false;\n        let ALLOW_SELF_CLOSE_IN_ATTR = true;\n        let SAFE_FOR_TEMPLATES = false;\n        let SAFE_FOR_XML = true;\n        let WHOLE_DOCUMENT = false;\n        let SET_CONFIG = false;\n        let FORCE_BODY = false;\n        let RETURN_DOM = false;\n        let RETURN_DOM_FRAGMENT = false;\n        let RETURN_TRUSTED_TYPE = false;\n        let SANITIZE_DOM = true;\n        let SANITIZE_NAMED_PROPS = false;\n        const SANITIZE_NAMED_PROPS_PREFIX = \"user-content-\";\n        let KEEP_CONTENT = true;\n        let IN_PLACE = false;\n        let USE_PROFILES = {};\n        let FORBID_CONTENTS = null;\n        const DEFAULT_FORBID_CONTENTS = addToSet({}, [\"annotation-xml\", \"audio\", \"colgroup\", \"desc\", \"foreignobject\", \"head\", \"iframe\", \"math\", \"mi\", \"mn\", \"mo\", \"ms\", \"mtext\", \"noembed\", \"noframes\", \"noscript\", \"plaintext\", \"script\", \"style\", \"svg\", \"template\", \"thead\", \"title\", \"video\", \"xmp\"]);\n        let DATA_URI_TAGS = null;\n        const DEFAULT_DATA_URI_TAGS = addToSet({}, [\"audio\", \"video\", \"img\", \"source\", \"image\", \"track\"]);\n        let URI_SAFE_ATTRIBUTES = null;\n        const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\"alt\", \"class\", \"for\", \"id\", \"label\", \"name\", \"pattern\", \"placeholder\", \"role\", \"summary\", \"title\", \"value\", \"style\", \"xmlns\"]);\n        const MATHML_NAMESPACE = \"http://www.w3.org/1998/Math/MathML\";\n        const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\n        const HTML_NAMESPACE = \"http://www.w3.org/1999/xhtml\";\n        let NAMESPACE = HTML_NAMESPACE;\n        let IS_EMPTY_INPUT = false;\n        let ALLOWED_NAMESPACES = null;\n        const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n        let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\"]);\n        let HTML_INTEGRATION_POINTS = addToSet({}, [\"annotation-xml\"]);\n        const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\"title\", \"style\", \"font\", \"a\", \"script\"]);\n        let PARSER_MEDIA_TYPE = null;\n        const SUPPORTED_PARSER_MEDIA_TYPES = [\"application/xhtml+xml\", \"text/html\"];\n        const DEFAULT_PARSER_MEDIA_TYPE = \"text/html\";\n        let transformCaseFunc = null;\n        let CONFIG = null;\n        const formElement = document2.createElement(\"form\");\n        const isRegexOrFunction = function isRegexOrFunction2(testValue) {\n          return testValue instanceof RegExp || testValue instanceof Function;\n        };\n        const _parseConfig = function _parseConfig2() {\n          let cfg = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n          if (CONFIG && CONFIG === cfg) {\n            return;\n          }\n          if (!cfg || typeof cfg !== \"object\") {\n            cfg = {};\n          }\n          cfg = clone(cfg);\n          PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n          SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n          transformCaseFunc = PARSER_MEDIA_TYPE === \"application/xhtml+xml\" ? stringToString : stringToLowerCase;\n          ALLOWED_TAGS = objectHasOwnProperty(cfg, \"ALLOWED_TAGS\") ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n          ALLOWED_ATTR = objectHasOwnProperty(cfg, \"ALLOWED_ATTR\") ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n          ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, \"ALLOWED_NAMESPACES\") ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n          URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, \"ADD_URI_SAFE_ATTR\") ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n          DATA_URI_TAGS = objectHasOwnProperty(cfg, \"ADD_DATA_URI_TAGS\") ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n          FORBID_CONTENTS = objectHasOwnProperty(cfg, \"FORBID_CONTENTS\") ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n          FORBID_TAGS = objectHasOwnProperty(cfg, \"FORBID_TAGS\") ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : clone({});\n          FORBID_ATTR = objectHasOwnProperty(cfg, \"FORBID_ATTR\") ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : clone({});\n          USE_PROFILES = objectHasOwnProperty(cfg, \"USE_PROFILES\") ? cfg.USE_PROFILES : false;\n          ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false;\n          ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false;\n          ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false;\n          ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false;\n          SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false;\n          SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false;\n          WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false;\n          RETURN_DOM = cfg.RETURN_DOM || false;\n          RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false;\n          RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false;\n          FORCE_BODY = cfg.FORCE_BODY || false;\n          SANITIZE_DOM = cfg.SANITIZE_DOM !== false;\n          SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false;\n          KEEP_CONTENT = cfg.KEEP_CONTENT !== false;\n          IN_PLACE = cfg.IN_PLACE || false;\n          IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n          NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n          MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n          HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n          CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n          if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n            CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n          }\n          if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n            CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n          }\n          if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === \"boolean\") {\n            CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n          }\n          if (SAFE_FOR_TEMPLATES) {\n            ALLOW_DATA_ATTR = false;\n          }\n          if (RETURN_DOM_FRAGMENT) {\n            RETURN_DOM = true;\n          }\n          if (USE_PROFILES) {\n            ALLOWED_TAGS = addToSet({}, text);\n            ALLOWED_ATTR = [];\n            if (USE_PROFILES.html === true) {\n              addToSet(ALLOWED_TAGS, html$1);\n              addToSet(ALLOWED_ATTR, html);\n            }\n            if (USE_PROFILES.svg === true) {\n              addToSet(ALLOWED_TAGS, svg$1);\n              addToSet(ALLOWED_ATTR, svg);\n              addToSet(ALLOWED_ATTR, xml2);\n            }\n            if (USE_PROFILES.svgFilters === true) {\n              addToSet(ALLOWED_TAGS, svgFilters);\n              addToSet(ALLOWED_ATTR, svg);\n              addToSet(ALLOWED_ATTR, xml2);\n            }\n            if (USE_PROFILES.mathMl === true) {\n              addToSet(ALLOWED_TAGS, mathMl$1);\n              addToSet(ALLOWED_ATTR, mathMl);\n              addToSet(ALLOWED_ATTR, xml2);\n            }\n          }\n          if (cfg.ADD_TAGS) {\n            if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n              ALLOWED_TAGS = clone(ALLOWED_TAGS);\n            }\n            addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n          }\n          if (cfg.ADD_ATTR) {\n            if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n              ALLOWED_ATTR = clone(ALLOWED_ATTR);\n            }\n            addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n          }\n          if (cfg.ADD_URI_SAFE_ATTR) {\n            addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n          }\n          if (cfg.FORBID_CONTENTS) {\n            if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n              FORBID_CONTENTS = clone(FORBID_CONTENTS);\n            }\n            addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n          }\n          if (KEEP_CONTENT) {\n            ALLOWED_TAGS[\"#text\"] = true;\n          }\n          if (WHOLE_DOCUMENT) {\n            addToSet(ALLOWED_TAGS, [\"html\", \"head\", \"body\"]);\n          }\n          if (ALLOWED_TAGS.table) {\n            addToSet(ALLOWED_TAGS, [\"tbody\"]);\n            delete FORBID_TAGS.tbody;\n          }\n          if (cfg.TRUSTED_TYPES_POLICY) {\n            if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== \"function\") {\n              throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n            }\n            if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== \"function\") {\n              throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n            }\n            trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n            emptyHTML = trustedTypesPolicy.createHTML(\"\");\n          } else {\n            if (trustedTypesPolicy === void 0) {\n              trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n            }\n            if (trustedTypesPolicy !== null && typeof emptyHTML === \"string\") {\n              emptyHTML = trustedTypesPolicy.createHTML(\"\");\n            }\n          }\n          if (freeze) {\n            freeze(cfg);\n          }\n          CONFIG = cfg;\n        };\n        const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n        const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n        const _checkValidNamespace = function _checkValidNamespace2(element) {\n          let parent = getParentNode(element);\n          if (!parent || !parent.tagName) {\n            parent = {\n              namespaceURI: NAMESPACE,\n              tagName: \"template\"\n            };\n          }\n          const tagName = stringToLowerCase(element.tagName);\n          const parentTagName = stringToLowerCase(parent.tagName);\n          if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n            return false;\n          }\n          if (element.namespaceURI === SVG_NAMESPACE) {\n            if (parent.namespaceURI === HTML_NAMESPACE) {\n              return tagName === \"svg\";\n            }\n            if (parent.namespaceURI === MATHML_NAMESPACE) {\n              return tagName === \"svg\" && (parentTagName === \"annotation-xml\" || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n            }\n            return Boolean(ALL_SVG_TAGS[tagName]);\n          }\n          if (element.namespaceURI === MATHML_NAMESPACE) {\n            if (parent.namespaceURI === HTML_NAMESPACE) {\n              return tagName === \"math\";\n            }\n            if (parent.namespaceURI === SVG_NAMESPACE) {\n              return tagName === \"math\" && HTML_INTEGRATION_POINTS[parentTagName];\n            }\n            return Boolean(ALL_MATHML_TAGS[tagName]);\n          }\n          if (element.namespaceURI === HTML_NAMESPACE) {\n            if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n              return false;\n            }\n            if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n              return false;\n            }\n            return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n          }\n          if (PARSER_MEDIA_TYPE === \"application/xhtml+xml\" && ALLOWED_NAMESPACES[element.namespaceURI]) {\n            return true;\n          }\n          return false;\n        };\n        const _forceRemove = function _forceRemove2(node) {\n          arrayPush(DOMPurify2.removed, {\n            element: node\n          });\n          try {\n            getParentNode(node).removeChild(node);\n          } catch (_) {\n            remove(node);\n          }\n        };\n        const _removeAttribute = function _removeAttribute2(name, element) {\n          try {\n            arrayPush(DOMPurify2.removed, {\n              attribute: element.getAttributeNode(name),\n              from: element\n            });\n          } catch (_) {\n            arrayPush(DOMPurify2.removed, {\n              attribute: null,\n              from: element\n            });\n          }\n          element.removeAttribute(name);\n          if (name === \"is\") {\n            if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n              try {\n                _forceRemove(element);\n              } catch (_) {\n              }\n            } else {\n              try {\n                element.setAttribute(name, \"\");\n              } catch (_) {\n              }\n            }\n          }\n        };\n        const _initDocument = function _initDocument2(dirty) {\n          let doc = null;\n          let leadingWhitespace = null;\n          if (FORCE_BODY) {\n            dirty = \"<remove></remove>\" + dirty;\n          } else {\n            const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n            leadingWhitespace = matches && matches[0];\n          }\n          if (PARSER_MEDIA_TYPE === \"application/xhtml+xml\" && NAMESPACE === HTML_NAMESPACE) {\n            dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + \"</body></html>\";\n          }\n          const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n          if (NAMESPACE === HTML_NAMESPACE) {\n            try {\n              doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n            } catch (_) {\n            }\n          }\n          if (!doc || !doc.documentElement) {\n            doc = implementation.createDocument(NAMESPACE, \"template\", null);\n            try {\n              doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n            } catch (_) {\n            }\n          }\n          const body = doc.body || doc.documentElement;\n          if (dirty && leadingWhitespace) {\n            body.insertBefore(document2.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n          }\n          if (NAMESPACE === HTML_NAMESPACE) {\n            return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? \"html\" : \"body\")[0];\n          }\n          return WHOLE_DOCUMENT ? doc.documentElement : body;\n        };\n        const _createNodeIterator = function _createNodeIterator2(root) {\n          return createNodeIterator.call(\n            root.ownerDocument || root,\n            root,\n            // eslint-disable-next-line no-bitwise\n            NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION,\n            null\n          );\n        };\n        const _isClobbered = function _isClobbered2(element) {\n          return element instanceof HTMLFormElement && (typeof element.nodeName !== \"string\" || typeof element.textContent !== \"string\" || typeof element.removeChild !== \"function\" || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== \"function\" || typeof element.setAttribute !== \"function\" || typeof element.namespaceURI !== \"string\" || typeof element.insertBefore !== \"function\" || typeof element.hasChildNodes !== \"function\");\n        };\n        const _isNode = function _isNode2(value) {\n          return typeof Node === \"function\" && value instanceof Node;\n        };\n        function _executeHooks(hooks2, currentNode, data) {\n          arrayForEach(hooks2, (hook) => {\n            hook.call(DOMPurify2, currentNode, data, CONFIG);\n          });\n        }\n        const _sanitizeElements = function _sanitizeElements2(currentNode) {\n          let content = null;\n          _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n            return true;\n          }\n          const tagName = transformCaseFunc(currentNode.nodeName);\n          _executeHooks(hooks.uponSanitizeElement, currentNode, {\n            tagName,\n            allowedTags: ALLOWED_TAGS\n          });\n          if (SAFE_FOR_XML && currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n            _forceRemove(currentNode);\n            return true;\n          }\n          if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n            _forceRemove(currentNode);\n            return true;\n          }\n          if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n            _forceRemove(currentNode);\n            return true;\n          }\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n              if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n                return false;\n              }\n              if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n                return false;\n              }\n            }\n            if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n              const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n              const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n              if (childNodes && parentNode) {\n                const childCount = childNodes.length;\n                for (let i = childCount - 1; i >= 0; --i) {\n                  const childClone = cloneNode(childNodes[i], true);\n                  childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n                  parentNode.insertBefore(childClone, getNextSibling(currentNode));\n                }\n              }\n            }\n            _forceRemove(currentNode);\n            return true;\n          }\n          if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n            _forceRemove(currentNode);\n            return true;\n          }\n          if ((tagName === \"noscript\" || tagName === \"noembed\" || tagName === \"noframes\") && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n            _forceRemove(currentNode);\n            return true;\n          }\n          if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n            content = currentNode.textContent;\n            arrayForEach([MUSTACHE_EXPR2, ERB_EXPR2, TMPLIT_EXPR2], (expr) => {\n              content = stringReplace(content, expr, \" \");\n            });\n            if (currentNode.textContent !== content) {\n              arrayPush(DOMPurify2.removed, {\n                element: currentNode.cloneNode()\n              });\n              currentNode.textContent = content;\n            }\n          }\n          _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n          return false;\n        };\n        const _isValidAttribute = function _isValidAttribute2(lcTag, lcName, value) {\n          if (SANITIZE_DOM && (lcName === \"id\" || lcName === \"name\") && (value in document2 || value in formElement)) {\n            return false;\n          }\n          if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR2, lcName))\n            ;\n          else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR2, lcName))\n            ;\n          else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n            if (\n              // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n              // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n              // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n              _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n              // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n              lcName === \"is\" && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))\n            )\n              ;\n            else {\n              return false;\n            }\n          } else if (URI_SAFE_ATTRIBUTES[lcName])\n            ;\n          else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE2, \"\")))\n            ;\n          else if ((lcName === \"src\" || lcName === \"xlink:href\" || lcName === \"href\") && lcTag !== \"script\" && stringIndexOf(value, \"data:\") === 0 && DATA_URI_TAGS[lcTag])\n            ;\n          else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA2, stringReplace(value, ATTR_WHITESPACE2, \"\")))\n            ;\n          else if (value) {\n            return false;\n          } else\n            ;\n          return true;\n        };\n        const _isBasicCustomElement = function _isBasicCustomElement2(tagName) {\n          return tagName !== \"annotation-xml\" && stringMatch(tagName, CUSTOM_ELEMENT2);\n        };\n        const _sanitizeAttributes = function _sanitizeAttributes2(currentNode) {\n          _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n          const {\n            attributes\n          } = currentNode;\n          if (!attributes || _isClobbered(currentNode)) {\n            return;\n          }\n          const hookEvent = {\n            attrName: \"\",\n            attrValue: \"\",\n            keepAttr: true,\n            allowedAttributes: ALLOWED_ATTR,\n            forceKeepAttr: void 0\n          };\n          let l = attributes.length;\n          while (l--) {\n            const attr = attributes[l];\n            const {\n              name,\n              namespaceURI,\n              value: attrValue\n            } = attr;\n            const lcName = transformCaseFunc(name);\n            const initValue = attrValue;\n            let value = name === \"value\" ? initValue : stringTrim(initValue);\n            hookEvent.attrName = lcName;\n            hookEvent.attrValue = value;\n            hookEvent.keepAttr = true;\n            hookEvent.forceKeepAttr = void 0;\n            _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n            value = hookEvent.attrValue;\n            if (SANITIZE_NAMED_PROPS && (lcName === \"id\" || lcName === \"name\")) {\n              _removeAttribute(name, currentNode);\n              value = SANITIZE_NAMED_PROPS_PREFIX + value;\n            }\n            if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n              _removeAttribute(name, currentNode);\n              continue;\n            }\n            if (hookEvent.forceKeepAttr) {\n              continue;\n            }\n            if (!hookEvent.keepAttr) {\n              _removeAttribute(name, currentNode);\n              continue;\n            }\n            if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n              _removeAttribute(name, currentNode);\n              continue;\n            }\n            if (SAFE_FOR_TEMPLATES) {\n              arrayForEach([MUSTACHE_EXPR2, ERB_EXPR2, TMPLIT_EXPR2], (expr) => {\n                value = stringReplace(value, expr, \" \");\n              });\n            }\n            const lcTag = transformCaseFunc(currentNode.nodeName);\n            if (!_isValidAttribute(lcTag, lcName, value)) {\n              _removeAttribute(name, currentNode);\n              continue;\n            }\n            if (trustedTypesPolicy && typeof trustedTypes === \"object\" && typeof trustedTypes.getAttributeType === \"function\") {\n              if (namespaceURI)\n                ;\n              else {\n                switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n                  case \"TrustedHTML\": {\n                    value = trustedTypesPolicy.createHTML(value);\n                    break;\n                  }\n                  case \"TrustedScriptURL\": {\n                    value = trustedTypesPolicy.createScriptURL(value);\n                    break;\n                  }\n                }\n              }\n            }\n            if (value !== initValue) {\n              try {\n                if (namespaceURI) {\n                  currentNode.setAttributeNS(namespaceURI, name, value);\n                } else {\n                  currentNode.setAttribute(name, value);\n                }\n                if (_isClobbered(currentNode)) {\n                  _forceRemove(currentNode);\n                } else {\n                  arrayPop(DOMPurify2.removed);\n                }\n              } catch (_) {\n                _removeAttribute(name, currentNode);\n              }\n            }\n          }\n          _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n        };\n        const _sanitizeShadowDOM = function _sanitizeShadowDOM2(fragment) {\n          let shadowNode = null;\n          const shadowIterator = _createNodeIterator(fragment);\n          _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n          while (shadowNode = shadowIterator.nextNode()) {\n            _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n            _sanitizeElements(shadowNode);\n            _sanitizeAttributes(shadowNode);\n            if (shadowNode.content instanceof DocumentFragment) {\n              _sanitizeShadowDOM2(shadowNode.content);\n            }\n          }\n          _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n        };\n        DOMPurify2.sanitize = function(dirty) {\n          let cfg = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n          let body = null;\n          let importedNode = null;\n          let currentNode = null;\n          let returnNode = null;\n          IS_EMPTY_INPUT = !dirty;\n          if (IS_EMPTY_INPUT) {\n            dirty = \"<!-->\";\n          }\n          if (typeof dirty !== \"string\" && !_isNode(dirty)) {\n            if (typeof dirty.toString === \"function\") {\n              dirty = dirty.toString();\n              if (typeof dirty !== \"string\") {\n                throw typeErrorCreate(\"dirty is not a string, aborting\");\n              }\n            } else {\n              throw typeErrorCreate(\"toString is not a function\");\n            }\n          }\n          if (!DOMPurify2.isSupported) {\n            return dirty;\n          }\n          if (!SET_CONFIG) {\n            _parseConfig(cfg);\n          }\n          DOMPurify2.removed = [];\n          if (typeof dirty === \"string\") {\n            IN_PLACE = false;\n          }\n          if (IN_PLACE) {\n            if (dirty.nodeName) {\n              const tagName = transformCaseFunc(dirty.nodeName);\n              if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n                throw typeErrorCreate(\"root node is forbidden and cannot be sanitized in-place\");\n              }\n            }\n          } else if (dirty instanceof Node) {\n            body = _initDocument(\"<!---->\");\n            importedNode = body.ownerDocument.importNode(dirty, true);\n            if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === \"BODY\") {\n              body = importedNode;\n            } else if (importedNode.nodeName === \"HTML\") {\n              body = importedNode;\n            } else {\n              body.appendChild(importedNode);\n            }\n          } else {\n            if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n            dirty.indexOf(\"<\") === -1) {\n              return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n            }\n            body = _initDocument(dirty);\n            if (!body) {\n              return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : \"\";\n            }\n          }\n          if (body && FORCE_BODY) {\n            _forceRemove(body.firstChild);\n          }\n          const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n          while (currentNode = nodeIterator.nextNode()) {\n            _sanitizeElements(currentNode);\n            _sanitizeAttributes(currentNode);\n            if (currentNode.content instanceof DocumentFragment) {\n              _sanitizeShadowDOM(currentNode.content);\n            }\n          }\n          if (IN_PLACE) {\n            return dirty;\n          }\n          if (RETURN_DOM) {\n            if (RETURN_DOM_FRAGMENT) {\n              returnNode = createDocumentFragment.call(body.ownerDocument);\n              while (body.firstChild) {\n                returnNode.appendChild(body.firstChild);\n              }\n            } else {\n              returnNode = body;\n            }\n            if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n              returnNode = importNode.call(originalDocument, returnNode, true);\n            }\n            return returnNode;\n          }\n          let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n          if (WHOLE_DOCUMENT && ALLOWED_TAGS[\"!doctype\"] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n            serializedHTML = \"<!DOCTYPE \" + body.ownerDocument.doctype.name + \">\\n\" + serializedHTML;\n          }\n          if (SAFE_FOR_TEMPLATES) {\n            arrayForEach([MUSTACHE_EXPR2, ERB_EXPR2, TMPLIT_EXPR2], (expr) => {\n              serializedHTML = stringReplace(serializedHTML, expr, \" \");\n            });\n          }\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n        };\n        DOMPurify2.setConfig = function() {\n          let cfg = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n          _parseConfig(cfg);\n          SET_CONFIG = true;\n        };\n        DOMPurify2.clearConfig = function() {\n          CONFIG = null;\n          SET_CONFIG = false;\n        };\n        DOMPurify2.isValidAttribute = function(tag, attr, value) {\n          if (!CONFIG) {\n            _parseConfig({});\n          }\n          const lcTag = transformCaseFunc(tag);\n          const lcName = transformCaseFunc(attr);\n          return _isValidAttribute(lcTag, lcName, value);\n        };\n        DOMPurify2.addHook = function(entryPoint, hookFunction) {\n          if (typeof hookFunction !== \"function\") {\n            return;\n          }\n          arrayPush(hooks[entryPoint], hookFunction);\n        };\n        DOMPurify2.removeHook = function(entryPoint, hookFunction) {\n          if (hookFunction !== void 0) {\n            const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n            return index === -1 ? void 0 : arraySplice(hooks[entryPoint], index, 1)[0];\n          }\n          return arrayPop(hooks[entryPoint]);\n        };\n        DOMPurify2.removeHooks = function(entryPoint) {\n          hooks[entryPoint] = [];\n        };\n        DOMPurify2.removeAllHooks = function() {\n          hooks = _createHooksMap();\n        };\n        return DOMPurify2;\n      }\n      var purify = createDOMPurify();\n      module.exports = purify;\n    }\n  });\n\n  // node_modules/isomorphic-dompurify/browser.js\n  var require_browser = __commonJS({\n    \"node_modules/isomorphic-dompurify/browser.js\"(exports, module) {\n      module.exports = window.DOMPurify || (window.DOMPurify = require_purify_cjs().default || require_purify_cjs());\n    }\n  });\n\n  // node_modules/highlight.js/lib/core.js\n  var require_core = __commonJS({\n    \"node_modules/highlight.js/lib/core.js\"(exports, module) {\n      function deepFreeze(obj) {\n        if (obj instanceof Map) {\n          obj.clear = obj.delete = obj.set = function() {\n            throw new Error(\"map is read-only\");\n          };\n        } else if (obj instanceof Set) {\n          obj.add = obj.clear = obj.delete = function() {\n            throw new Error(\"set is read-only\");\n          };\n        }\n        Object.freeze(obj);\n        Object.getOwnPropertyNames(obj).forEach((name) => {\n          const prop = obj[name];\n          const type = typeof prop;\n          if ((type === \"object\" || type === \"function\") && !Object.isFrozen(prop)) {\n            deepFreeze(prop);\n          }\n        });\n        return obj;\n      }\n      var Response = class {\n        /**\n         * @param {CompiledMode} mode\n         */\n        constructor(mode) {\n          if (mode.data === void 0)\n            mode.data = {};\n          this.data = mode.data;\n          this.isMatchIgnored = false;\n        }\n        ignoreMatch() {\n          this.isMatchIgnored = true;\n        }\n      };\n      function escapeHTML(value) {\n        return value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n      }\n      function inherit$1(original, ...objects) {\n        const result = /* @__PURE__ */ Object.create(null);\n        for (const key in original) {\n          result[key] = original[key];\n        }\n        objects.forEach(function(obj) {\n          for (const key in obj) {\n            result[key] = obj[key];\n          }\n        });\n        return (\n          /** @type {T} */\n          result\n        );\n      }\n      var SPAN_CLOSE = \"</span>\";\n      var emitsWrappingTags = (node) => {\n        return !!node.scope;\n      };\n      var scopeToCSSClass = (name, { prefix }) => {\n        if (name.startsWith(\"language:\")) {\n          return name.replace(\"language:\", \"language-\");\n        }\n        if (name.includes(\".\")) {\n          const pieces = name.split(\".\");\n          return [\n            `${prefix}${pieces.shift()}`,\n            ...pieces.map((x, i) => `${x}${\"_\".repeat(i + 1)}`)\n          ].join(\" \");\n        }\n        return `${prefix}${name}`;\n      };\n      var HTMLRenderer = class {\n        /**\n         * Creates a new HTMLRenderer\n         *\n         * @param {Tree} parseTree - the parse tree (must support `walk` API)\n         * @param {{classPrefix: string}} options\n         */\n        constructor(parseTree, options) {\n          this.buffer = \"\";\n          this.classPrefix = options.classPrefix;\n          parseTree.walk(this);\n        }\n        /**\n         * Adds texts to the output stream\n         *\n         * @param {string} text */\n        addText(text) {\n          this.buffer += escapeHTML(text);\n        }\n        /**\n         * Adds a node open to the output stream (if needed)\n         *\n         * @param {Node} node */\n        openNode(node) {\n          if (!emitsWrappingTags(node))\n            return;\n          const className = scopeToCSSClass(\n            node.scope,\n            { prefix: this.classPrefix }\n          );\n          this.span(className);\n        }\n        /**\n         * Adds a node close to the output stream (if needed)\n         *\n         * @param {Node} node */\n        closeNode(node) {\n          if (!emitsWrappingTags(node))\n            return;\n          this.buffer += SPAN_CLOSE;\n        }\n        /**\n         * returns the accumulated buffer\n        */\n        value() {\n          return this.buffer;\n        }\n        // helpers\n        /**\n         * Builds a span element\n         *\n         * @param {string} className */\n        span(className) {\n          this.buffer += `<span class=\"${className}\">`;\n        }\n      };\n      var newNode = (opts = {}) => {\n        const result = { children: [] };\n        Object.assign(result, opts);\n        return result;\n      };\n      var TokenTree = class _TokenTree {\n        constructor() {\n          this.rootNode = newNode();\n          this.stack = [this.rootNode];\n        }\n        get top() {\n          return this.stack[this.stack.length - 1];\n        }\n        get root() {\n          return this.rootNode;\n        }\n        /** @param {Node} node */\n        add(node) {\n          this.top.children.push(node);\n        }\n        /** @param {string} scope */\n        openNode(scope) {\n          const node = newNode({ scope });\n          this.add(node);\n          this.stack.push(node);\n        }\n        closeNode() {\n          if (this.stack.length > 1) {\n            return this.stack.pop();\n          }\n          return void 0;\n        }\n        closeAllNodes() {\n          while (this.closeNode())\n            ;\n        }\n        toJSON() {\n          return JSON.stringify(this.rootNode, null, 4);\n        }\n        /**\n         * @typedef { import(\"./html_renderer\").Renderer } Renderer\n         * @param {Renderer} builder\n         */\n        walk(builder) {\n          return this.constructor._walk(builder, this.rootNode);\n        }\n        /**\n         * @param {Renderer} builder\n         * @param {Node} node\n         */\n        static _walk(builder, node) {\n          if (typeof node === \"string\") {\n            builder.addText(node);\n          } else if (node.children) {\n            builder.openNode(node);\n            node.children.forEach((child) => this._walk(builder, child));\n            builder.closeNode(node);\n          }\n          return builder;\n        }\n        /**\n         * @param {Node} node\n         */\n        static _collapse(node) {\n          if (typeof node === \"string\")\n            return;\n          if (!node.children)\n            return;\n          if (node.children.every((el) => typeof el === \"string\")) {\n            node.children = [node.children.join(\"\")];\n          } else {\n            node.children.forEach((child) => {\n              _TokenTree._collapse(child);\n            });\n          }\n        }\n      };\n      var TokenTreeEmitter = class extends TokenTree {\n        /**\n         * @param {*} options\n         */\n        constructor(options) {\n          super();\n          this.options = options;\n        }\n        /**\n         * @param {string} text\n         */\n        addText(text) {\n          if (text === \"\") {\n            return;\n          }\n          this.add(text);\n        }\n        /** @param {string} scope */\n        startScope(scope) {\n          this.openNode(scope);\n        }\n        endScope() {\n          this.closeNode();\n        }\n        /**\n         * @param {Emitter & {root: DataNode}} emitter\n         * @param {string} name\n         */\n        __addSublanguage(emitter, name) {\n          const node = emitter.root;\n          if (name)\n            node.scope = `language:${name}`;\n          this.add(node);\n        }\n        toHTML() {\n          const renderer = new HTMLRenderer(this, this.options);\n          return renderer.value();\n        }\n        finalize() {\n          this.closeAllNodes();\n          return true;\n        }\n      };\n      function source(re) {\n        if (!re)\n          return null;\n        if (typeof re === \"string\")\n          return re;\n        return re.source;\n      }\n      function lookahead(re) {\n        return concat(\"(?=\", re, \")\");\n      }\n      function anyNumberOfTimes(re) {\n        return concat(\"(?:\", re, \")*\");\n      }\n      function optional(re) {\n        return concat(\"(?:\", re, \")?\");\n      }\n      function concat(...args) {\n        const joined = args.map((x) => source(x)).join(\"\");\n        return joined;\n      }\n      function stripOptionsFromArgs(args) {\n        const opts = args[args.length - 1];\n        if (typeof opts === \"object\" && opts.constructor === Object) {\n          args.splice(args.length - 1, 1);\n          return opts;\n        } else {\n          return {};\n        }\n      }\n      function either(...args) {\n        const opts = stripOptionsFromArgs(args);\n        const joined = \"(\" + (opts.capture ? \"\" : \"?:\") + args.map((x) => source(x)).join(\"|\") + \")\";\n        return joined;\n      }\n      function countMatchGroups(re) {\n        return new RegExp(re.toString() + \"|\").exec(\"\").length - 1;\n      }\n      function startsWith(re, lexeme) {\n        const match = re && re.exec(lexeme);\n        return match && match.index === 0;\n      }\n      var BACKREF_RE = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n      function _rewriteBackreferences(regexps, { joinWith }) {\n        let numCaptures = 0;\n        return regexps.map((regex) => {\n          numCaptures += 1;\n          const offset = numCaptures;\n          let re = source(regex);\n          let out = \"\";\n          while (re.length > 0) {\n            const match = BACKREF_RE.exec(re);\n            if (!match) {\n              out += re;\n              break;\n            }\n            out += re.substring(0, match.index);\n            re = re.substring(match.index + match[0].length);\n            if (match[0][0] === \"\\\\\" && match[1]) {\n              out += \"\\\\\" + String(Number(match[1]) + offset);\n            } else {\n              out += match[0];\n              if (match[0] === \"(\") {\n                numCaptures++;\n              }\n            }\n          }\n          return out;\n        }).map((re) => `(${re})`).join(joinWith);\n      }\n      var MATCH_NOTHING_RE = /\\b\\B/;\n      var IDENT_RE3 = \"[a-zA-Z]\\\\w*\";\n      var UNDERSCORE_IDENT_RE = \"[a-zA-Z_]\\\\w*\";\n      var NUMBER_RE = \"\\\\b\\\\d+(\\\\.\\\\d+)?\";\n      var C_NUMBER_RE = \"(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)\";\n      var BINARY_NUMBER_RE = \"\\\\b(0b[01]+)\";\n      var RE_STARTERS_RE = \"!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~\";\n      var SHEBANG = (opts = {}) => {\n        const beginShebang = /^#![ ]*\\//;\n        if (opts.binary) {\n          opts.begin = concat(\n            beginShebang,\n            /.*\\b/,\n            opts.binary,\n            /\\b.*/\n          );\n        }\n        return inherit$1({\n          scope: \"meta\",\n          begin: beginShebang,\n          end: /$/,\n          relevance: 0,\n          /** @type {ModeCallback} */\n          \"on:begin\": (m, resp) => {\n            if (m.index !== 0)\n              resp.ignoreMatch();\n          }\n        }, opts);\n      };\n      var BACKSLASH_ESCAPE = {\n        begin: \"\\\\\\\\[\\\\s\\\\S]\",\n        relevance: 0\n      };\n      var APOS_STRING_MODE = {\n        scope: \"string\",\n        begin: \"'\",\n        end: \"'\",\n        illegal: \"\\\\n\",\n        contains: [BACKSLASH_ESCAPE]\n      };\n      var QUOTE_STRING_MODE = {\n        scope: \"string\",\n        begin: '\"',\n        end: '\"',\n        illegal: \"\\\\n\",\n        contains: [BACKSLASH_ESCAPE]\n      };\n      var PHRASAL_WORDS_MODE = {\n        begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n      };\n      var COMMENT = function(begin, end, modeOptions = {}) {\n        const mode = inherit$1(\n          {\n            scope: \"comment\",\n            begin,\n            end,\n            contains: []\n          },\n          modeOptions\n        );\n        mode.contains.push({\n          scope: \"doctag\",\n          // hack to avoid the space from being included. the space is necessary to\n          // match here to prevent the plain text rule below from gobbling up doctags\n          begin: \"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)\",\n          end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n          excludeBegin: true,\n          relevance: 0\n        });\n        const ENGLISH_WORD = either(\n          // list of common 1 and 2 letter words in English\n          \"I\",\n          \"a\",\n          \"is\",\n          \"so\",\n          \"us\",\n          \"to\",\n          \"at\",\n          \"if\",\n          \"in\",\n          \"it\",\n          \"on\",\n          // note: this is not an exhaustive list of contractions, just popular ones\n          /[A-Za-z]+['](d|ve|re|ll|t|s|n)/,\n          // contractions - can't we'd they're let's, etc\n          /[A-Za-z]+[-][a-z]+/,\n          // `no-way`, etc.\n          /[A-Za-z][a-z]{2,}/\n          // allow capitalized words at beginning of sentences\n        );\n        mode.contains.push(\n          {\n            // TODO: how to include \", (, ) without breaking grammars that use these for\n            // comment delimiters?\n            // begin: /[ ]+([()\"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()\":]?([.][ ]|[ ]|\\))){3}/\n            // ---\n            // this tries to find sequences of 3 english words in a row (without any\n            // \"programming\" type syntax) this gives us a strong signal that we've\n            // TRULY found a comment - vs perhaps scanning with the wrong language.\n            // It's possible to find something that LOOKS like the start of the\n            // comment - but then if there is no readable text - good chance it is a\n            // false match and not a comment.\n            //\n            // for a visual example please see:\n            // https://github.com/highlightjs/highlight.js/issues/2827\n            begin: concat(\n              /[ ]+/,\n              // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */\n              \"(\",\n              ENGLISH_WORD,\n              /[.]?[:]?([.][ ]|[ ])/,\n              \"){3}\"\n            )\n            // look for 3 words in a row\n          }\n        );\n        return mode;\n      };\n      var C_LINE_COMMENT_MODE = COMMENT(\"//\", \"$\");\n      var C_BLOCK_COMMENT_MODE = COMMENT(\"/\\\\*\", \"\\\\*/\");\n      var HASH_COMMENT_MODE = COMMENT(\"#\", \"$\");\n      var NUMBER_MODE = {\n        scope: \"number\",\n        begin: NUMBER_RE,\n        relevance: 0\n      };\n      var C_NUMBER_MODE = {\n        scope: \"number\",\n        begin: C_NUMBER_RE,\n        relevance: 0\n      };\n      var BINARY_NUMBER_MODE = {\n        scope: \"number\",\n        begin: BINARY_NUMBER_RE,\n        relevance: 0\n      };\n      var REGEXP_MODE = {\n        scope: \"regexp\",\n        begin: /\\/(?=[^/\\n]*\\/)/,\n        end: /\\/[gimuy]*/,\n        contains: [\n          BACKSLASH_ESCAPE,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            relevance: 0,\n            contains: [BACKSLASH_ESCAPE]\n          }\n        ]\n      };\n      var TITLE_MODE = {\n        scope: \"title\",\n        begin: IDENT_RE3,\n        relevance: 0\n      };\n      var UNDERSCORE_TITLE_MODE = {\n        scope: \"title\",\n        begin: UNDERSCORE_IDENT_RE,\n        relevance: 0\n      };\n      var METHOD_GUARD = {\n        // excludes method names from keyword processing\n        begin: \"\\\\.\\\\s*\" + UNDERSCORE_IDENT_RE,\n        relevance: 0\n      };\n      var END_SAME_AS_BEGIN = function(mode) {\n        return Object.assign(\n          mode,\n          {\n            /** @type {ModeCallback} */\n            \"on:begin\": (m, resp) => {\n              resp.data._beginMatch = m[1];\n            },\n            /** @type {ModeCallback} */\n            \"on:end\": (m, resp) => {\n              if (resp.data._beginMatch !== m[1])\n                resp.ignoreMatch();\n            }\n          }\n        );\n      };\n      var MODES3 = /* @__PURE__ */ Object.freeze({\n        __proto__: null,\n        APOS_STRING_MODE,\n        BACKSLASH_ESCAPE,\n        BINARY_NUMBER_MODE,\n        BINARY_NUMBER_RE,\n        COMMENT,\n        C_BLOCK_COMMENT_MODE,\n        C_LINE_COMMENT_MODE,\n        C_NUMBER_MODE,\n        C_NUMBER_RE,\n        END_SAME_AS_BEGIN,\n        HASH_COMMENT_MODE,\n        IDENT_RE: IDENT_RE3,\n        MATCH_NOTHING_RE,\n        METHOD_GUARD,\n        NUMBER_MODE,\n        NUMBER_RE,\n        PHRASAL_WORDS_MODE,\n        QUOTE_STRING_MODE,\n        REGEXP_MODE,\n        RE_STARTERS_RE,\n        SHEBANG,\n        TITLE_MODE,\n        UNDERSCORE_IDENT_RE,\n        UNDERSCORE_TITLE_MODE\n      });\n      function skipIfHasPrecedingDot(match, response) {\n        const before = match.input[match.index - 1];\n        if (before === \".\") {\n          response.ignoreMatch();\n        }\n      }\n      function scopeClassName(mode, _parent) {\n        if (mode.className !== void 0) {\n          mode.scope = mode.className;\n          delete mode.className;\n        }\n      }\n      function beginKeywords(mode, parent) {\n        if (!parent)\n          return;\n        if (!mode.beginKeywords)\n          return;\n        mode.begin = \"\\\\b(\" + mode.beginKeywords.split(\" \").join(\"|\") + \")(?!\\\\.)(?=\\\\b|\\\\s)\";\n        mode.__beforeBegin = skipIfHasPrecedingDot;\n        mode.keywords = mode.keywords || mode.beginKeywords;\n        delete mode.beginKeywords;\n        if (mode.relevance === void 0)\n          mode.relevance = 0;\n      }\n      function compileIllegal(mode, _parent) {\n        if (!Array.isArray(mode.illegal))\n          return;\n        mode.illegal = either(...mode.illegal);\n      }\n      function compileMatch(mode, _parent) {\n        if (!mode.match)\n          return;\n        if (mode.begin || mode.end)\n          throw new Error(\"begin & end are not supported with match\");\n        mode.begin = mode.match;\n        delete mode.match;\n      }\n      function compileRelevance(mode, _parent) {\n        if (mode.relevance === void 0)\n          mode.relevance = 1;\n      }\n      var beforeMatchExt = (mode, parent) => {\n        if (!mode.beforeMatch)\n          return;\n        if (mode.starts)\n          throw new Error(\"beforeMatch cannot be used with starts\");\n        const originalMode = Object.assign({}, mode);\n        Object.keys(mode).forEach((key) => {\n          delete mode[key];\n        });\n        mode.keywords = originalMode.keywords;\n        mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\n        mode.starts = {\n          relevance: 0,\n          contains: [\n            Object.assign(originalMode, { endsParent: true })\n          ]\n        };\n        mode.relevance = 0;\n        delete originalMode.beforeMatch;\n      };\n      var COMMON_KEYWORDS = [\n        \"of\",\n        \"and\",\n        \"for\",\n        \"in\",\n        \"not\",\n        \"or\",\n        \"if\",\n        \"then\",\n        \"parent\",\n        // common variable name\n        \"list\",\n        // common variable name\n        \"value\"\n        // common variable name\n      ];\n      var DEFAULT_KEYWORD_SCOPE = \"keyword\";\n      function compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {\n        const compiledKeywords = /* @__PURE__ */ Object.create(null);\n        if (typeof rawKeywords === \"string\") {\n          compileList(scopeName, rawKeywords.split(\" \"));\n        } else if (Array.isArray(rawKeywords)) {\n          compileList(scopeName, rawKeywords);\n        } else {\n          Object.keys(rawKeywords).forEach(function(scopeName2) {\n            Object.assign(\n              compiledKeywords,\n              compileKeywords(rawKeywords[scopeName2], caseInsensitive, scopeName2)\n            );\n          });\n        }\n        return compiledKeywords;\n        function compileList(scopeName2, keywordList) {\n          if (caseInsensitive) {\n            keywordList = keywordList.map((x) => x.toLowerCase());\n          }\n          keywordList.forEach(function(keyword) {\n            const pair = keyword.split(\"|\");\n            compiledKeywords[pair[0]] = [scopeName2, scoreForKeyword(pair[0], pair[1])];\n          });\n        }\n      }\n      function scoreForKeyword(keyword, providedScore) {\n        if (providedScore) {\n          return Number(providedScore);\n        }\n        return commonKeyword(keyword) ? 0 : 1;\n      }\n      function commonKeyword(keyword) {\n        return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n      }\n      var seenDeprecations = {};\n      var error = (message) => {\n        console.error(message);\n      };\n      var warn = (message, ...args) => {\n        console.log(`WARN: ${message}`, ...args);\n      };\n      var deprecated = (version2, message) => {\n        if (seenDeprecations[`${version2}/${message}`])\n          return;\n        console.log(`Deprecated as of ${version2}. ${message}`);\n        seenDeprecations[`${version2}/${message}`] = true;\n      };\n      var MultiClassError = new Error();\n      function remapScopeNames(mode, regexes, { key }) {\n        let offset = 0;\n        const scopeNames = mode[key];\n        const emit = {};\n        const positions = {};\n        for (let i = 1; i <= regexes.length; i++) {\n          positions[i + offset] = scopeNames[i];\n          emit[i + offset] = true;\n          offset += countMatchGroups(regexes[i - 1]);\n        }\n        mode[key] = positions;\n        mode[key]._emit = emit;\n        mode[key]._multi = true;\n      }\n      function beginMultiClass(mode) {\n        if (!Array.isArray(mode.begin))\n          return;\n        if (mode.skip || mode.excludeBegin || mode.returnBegin) {\n          error(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\");\n          throw MultiClassError;\n        }\n        if (typeof mode.beginScope !== \"object\" || mode.beginScope === null) {\n          error(\"beginScope must be object\");\n          throw MultiClassError;\n        }\n        remapScopeNames(mode, mode.begin, { key: \"beginScope\" });\n        mode.begin = _rewriteBackreferences(mode.begin, { joinWith: \"\" });\n      }\n      function endMultiClass(mode) {\n        if (!Array.isArray(mode.end))\n          return;\n        if (mode.skip || mode.excludeEnd || mode.returnEnd) {\n          error(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\");\n          throw MultiClassError;\n        }\n        if (typeof mode.endScope !== \"object\" || mode.endScope === null) {\n          error(\"endScope must be object\");\n          throw MultiClassError;\n        }\n        remapScopeNames(mode, mode.end, { key: \"endScope\" });\n        mode.end = _rewriteBackreferences(mode.end, { joinWith: \"\" });\n      }\n      function scopeSugar(mode) {\n        if (mode.scope && typeof mode.scope === \"object\" && mode.scope !== null) {\n          mode.beginScope = mode.scope;\n          delete mode.scope;\n        }\n      }\n      function MultiClass(mode) {\n        scopeSugar(mode);\n        if (typeof mode.beginScope === \"string\") {\n          mode.beginScope = { _wrap: mode.beginScope };\n        }\n        if (typeof mode.endScope === \"string\") {\n          mode.endScope = { _wrap: mode.endScope };\n        }\n        beginMultiClass(mode);\n        endMultiClass(mode);\n      }\n      function compileLanguage(language) {\n        function langRe(value, global) {\n          return new RegExp(\n            source(value),\n            \"m\" + (language.case_insensitive ? \"i\" : \"\") + (language.unicodeRegex ? \"u\" : \"\") + (global ? \"g\" : \"\")\n          );\n        }\n        class MultiRegex {\n          constructor() {\n            this.matchIndexes = {};\n            this.regexes = [];\n            this.matchAt = 1;\n            this.position = 0;\n          }\n          // @ts-ignore\n          addRule(re, opts) {\n            opts.position = this.position++;\n            this.matchIndexes[this.matchAt] = opts;\n            this.regexes.push([opts, re]);\n            this.matchAt += countMatchGroups(re) + 1;\n          }\n          compile() {\n            if (this.regexes.length === 0) {\n              this.exec = () => null;\n            }\n            const terminators = this.regexes.map((el) => el[1]);\n            this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: \"|\" }), true);\n            this.lastIndex = 0;\n          }\n          /** @param {string} s */\n          exec(s) {\n            this.matcherRe.lastIndex = this.lastIndex;\n            const match = this.matcherRe.exec(s);\n            if (!match) {\n              return null;\n            }\n            const i = match.findIndex((el, i2) => i2 > 0 && el !== void 0);\n            const matchData = this.matchIndexes[i];\n            match.splice(0, i);\n            return Object.assign(match, matchData);\n          }\n        }\n        class ResumableMultiRegex {\n          constructor() {\n            this.rules = [];\n            this.multiRegexes = [];\n            this.count = 0;\n            this.lastIndex = 0;\n            this.regexIndex = 0;\n          }\n          // @ts-ignore\n          getMatcher(index) {\n            if (this.multiRegexes[index])\n              return this.multiRegexes[index];\n            const matcher = new MultiRegex();\n            this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n            matcher.compile();\n            this.multiRegexes[index] = matcher;\n            return matcher;\n          }\n          resumingScanAtSamePosition() {\n            return this.regexIndex !== 0;\n          }\n          considerAll() {\n            this.regexIndex = 0;\n          }\n          // @ts-ignore\n          addRule(re, opts) {\n            this.rules.push([re, opts]);\n            if (opts.type === \"begin\")\n              this.count++;\n          }\n          /** @param {string} s */\n          exec(s) {\n            const m = this.getMatcher(this.regexIndex);\n            m.lastIndex = this.lastIndex;\n            let result = m.exec(s);\n            if (this.resumingScanAtSamePosition()) {\n              if (result && result.index === this.lastIndex)\n                ;\n              else {\n                const m2 = this.getMatcher(0);\n                m2.lastIndex = this.lastIndex + 1;\n                result = m2.exec(s);\n              }\n            }\n            if (result) {\n              this.regexIndex += result.position + 1;\n              if (this.regexIndex === this.count) {\n                this.considerAll();\n              }\n            }\n            return result;\n          }\n        }\n        function buildModeRegex(mode) {\n          const mm = new ResumableMultiRegex();\n          mode.contains.forEach((term) => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n          if (mode.terminatorEnd) {\n            mm.addRule(mode.terminatorEnd, { type: \"end\" });\n          }\n          if (mode.illegal) {\n            mm.addRule(mode.illegal, { type: \"illegal\" });\n          }\n          return mm;\n        }\n        function compileMode(mode, parent) {\n          const cmode = (\n            /** @type CompiledMode */\n            mode\n          );\n          if (mode.isCompiled)\n            return cmode;\n          [\n            scopeClassName,\n            // do this early so compiler extensions generally don't have to worry about\n            // the distinction between match/begin\n            compileMatch,\n            MultiClass,\n            beforeMatchExt\n          ].forEach((ext) => ext(mode, parent));\n          language.compilerExtensions.forEach((ext) => ext(mode, parent));\n          mode.__beforeBegin = null;\n          [\n            beginKeywords,\n            // do this later so compiler extensions that come earlier have access to the\n            // raw array if they wanted to perhaps manipulate it, etc.\n            compileIllegal,\n            // default to 1 relevance if not specified\n            compileRelevance\n          ].forEach((ext) => ext(mode, parent));\n          mode.isCompiled = true;\n          let keywordPattern = null;\n          if (typeof mode.keywords === \"object\" && mode.keywords.$pattern) {\n            mode.keywords = Object.assign({}, mode.keywords);\n            keywordPattern = mode.keywords.$pattern;\n            delete mode.keywords.$pattern;\n          }\n          keywordPattern = keywordPattern || /\\w+/;\n          if (mode.keywords) {\n            mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n          }\n          cmode.keywordPatternRe = langRe(keywordPattern, true);\n          if (parent) {\n            if (!mode.begin)\n              mode.begin = /\\B|\\b/;\n            cmode.beginRe = langRe(cmode.begin);\n            if (!mode.end && !mode.endsWithParent)\n              mode.end = /\\B|\\b/;\n            if (mode.end)\n              cmode.endRe = langRe(cmode.end);\n            cmode.terminatorEnd = source(cmode.end) || \"\";\n            if (mode.endsWithParent && parent.terminatorEnd) {\n              cmode.terminatorEnd += (mode.end ? \"|\" : \"\") + parent.terminatorEnd;\n            }\n          }\n          if (mode.illegal)\n            cmode.illegalRe = langRe(\n              /** @type {RegExp | string} */\n              mode.illegal\n            );\n          if (!mode.contains)\n            mode.contains = [];\n          mode.contains = [].concat(...mode.contains.map(function(c) {\n            return expandOrCloneMode(c === \"self\" ? mode : c);\n          }));\n          mode.contains.forEach(function(c) {\n            compileMode(\n              /** @type Mode */\n              c,\n              cmode\n            );\n          });\n          if (mode.starts) {\n            compileMode(mode.starts, parent);\n          }\n          cmode.matcher = buildModeRegex(cmode);\n          return cmode;\n        }\n        if (!language.compilerExtensions)\n          language.compilerExtensions = [];\n        if (language.contains && language.contains.includes(\"self\")) {\n          throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n        }\n        language.classNameAliases = inherit$1(language.classNameAliases || {});\n        return compileMode(\n          /** @type Mode */\n          language\n        );\n      }\n      function dependencyOnParent(mode) {\n        if (!mode)\n          return false;\n        return mode.endsWithParent || dependencyOnParent(mode.starts);\n      }\n      function expandOrCloneMode(mode) {\n        if (mode.variants && !mode.cachedVariants) {\n          mode.cachedVariants = mode.variants.map(function(variant) {\n            return inherit$1(mode, { variants: null }, variant);\n          });\n        }\n        if (mode.cachedVariants) {\n          return mode.cachedVariants;\n        }\n        if (dependencyOnParent(mode)) {\n          return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });\n        }\n        if (Object.isFrozen(mode)) {\n          return inherit$1(mode);\n        }\n        return mode;\n      }\n      var version = \"11.11.1\";\n      var HTMLInjectionError = class extends Error {\n        constructor(reason, html) {\n          super(reason);\n          this.name = \"HTMLInjectionError\";\n          this.html = html;\n        }\n      };\n      var escape = escapeHTML;\n      var inherit = inherit$1;\n      var NO_MATCH = Symbol(\"nomatch\");\n      var MAX_KEYWORD_HITS = 7;\n      var HLJS = function(hljs) {\n        const languages = /* @__PURE__ */ Object.create(null);\n        const aliases = /* @__PURE__ */ Object.create(null);\n        const plugins = [];\n        let SAFE_MODE = true;\n        const LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n        const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: \"Plain text\", contains: [] };\n        let options = {\n          ignoreUnescapedHTML: false,\n          throwUnescapedHTML: false,\n          noHighlightRe: /^(no-?highlight)$/i,\n          languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n          classPrefix: \"hljs-\",\n          cssSelector: \"pre code\",\n          languages: null,\n          // beta configuration options, subject to change, welcome to discuss\n          // https://github.com/highlightjs/highlight.js/issues/1086\n          __emitter: TokenTreeEmitter\n        };\n        function shouldNotHighlight(languageName) {\n          return options.noHighlightRe.test(languageName);\n        }\n        function blockLanguage(block) {\n          let classes = block.className + \" \";\n          classes += block.parentNode ? block.parentNode.className : \"\";\n          const match = options.languageDetectRe.exec(classes);\n          if (match) {\n            const language = getLanguage(match[1]);\n            if (!language) {\n              warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n              warn(\"Falling back to no-highlight mode for this block.\", block);\n            }\n            return language ? match[1] : \"no-highlight\";\n          }\n          return classes.split(/\\s+/).find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n        }\n        function highlight2(codeOrLanguageName, optionsOrCode, ignoreIllegals) {\n          let code = \"\";\n          let languageName = \"\";\n          if (typeof optionsOrCode === \"object\") {\n            code = codeOrLanguageName;\n            ignoreIllegals = optionsOrCode.ignoreIllegals;\n            languageName = optionsOrCode.language;\n          } else {\n            deprecated(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\");\n            deprecated(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\");\n            languageName = codeOrLanguageName;\n            code = optionsOrCode;\n          }\n          if (ignoreIllegals === void 0) {\n            ignoreIllegals = true;\n          }\n          const context = {\n            code,\n            language: languageName\n          };\n          fire(\"before:highlight\", context);\n          const result = context.result ? context.result : _highlight(context.language, context.code, ignoreIllegals);\n          result.code = context.code;\n          fire(\"after:highlight\", result);\n          return result;\n        }\n        function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {\n          const keywordHits = /* @__PURE__ */ Object.create(null);\n          function keywordData(mode, matchText) {\n            return mode.keywords[matchText];\n          }\n          function processKeywords() {\n            if (!top.keywords) {\n              emitter.addText(modeBuffer);\n              return;\n            }\n            let lastIndex = 0;\n            top.keywordPatternRe.lastIndex = 0;\n            let match = top.keywordPatternRe.exec(modeBuffer);\n            let buf = \"\";\n            while (match) {\n              buf += modeBuffer.substring(lastIndex, match.index);\n              const word = language.case_insensitive ? match[0].toLowerCase() : match[0];\n              const data = keywordData(top, word);\n              if (data) {\n                const [kind, keywordRelevance] = data;\n                emitter.addText(buf);\n                buf = \"\";\n                keywordHits[word] = (keywordHits[word] || 0) + 1;\n                if (keywordHits[word] <= MAX_KEYWORD_HITS)\n                  relevance += keywordRelevance;\n                if (kind.startsWith(\"_\")) {\n                  buf += match[0];\n                } else {\n                  const cssClass = language.classNameAliases[kind] || kind;\n                  emitKeyword(match[0], cssClass);\n                }\n              } else {\n                buf += match[0];\n              }\n              lastIndex = top.keywordPatternRe.lastIndex;\n              match = top.keywordPatternRe.exec(modeBuffer);\n            }\n            buf += modeBuffer.substring(lastIndex);\n            emitter.addText(buf);\n          }\n          function processSubLanguage() {\n            if (modeBuffer === \"\")\n              return;\n            let result2 = null;\n            if (typeof top.subLanguage === \"string\") {\n              if (!languages[top.subLanguage]) {\n                emitter.addText(modeBuffer);\n                return;\n              }\n              result2 = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n              continuations[top.subLanguage] = /** @type {CompiledMode} */\n              result2._top;\n            } else {\n              result2 = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n            }\n            if (top.relevance > 0) {\n              relevance += result2.relevance;\n            }\n            emitter.__addSublanguage(result2._emitter, result2.language);\n          }\n          function processBuffer() {\n            if (top.subLanguage != null) {\n              processSubLanguage();\n            } else {\n              processKeywords();\n            }\n            modeBuffer = \"\";\n          }\n          function emitKeyword(keyword, scope) {\n            if (keyword === \"\")\n              return;\n            emitter.startScope(scope);\n            emitter.addText(keyword);\n            emitter.endScope();\n          }\n          function emitMultiClass(scope, match) {\n            let i = 1;\n            const max = match.length - 1;\n            while (i <= max) {\n              if (!scope._emit[i]) {\n                i++;\n                continue;\n              }\n              const klass = language.classNameAliases[scope[i]] || scope[i];\n              const text = match[i];\n              if (klass) {\n                emitKeyword(text, klass);\n              } else {\n                modeBuffer = text;\n                processKeywords();\n                modeBuffer = \"\";\n              }\n              i++;\n            }\n          }\n          function startNewMode(mode, match) {\n            if (mode.scope && typeof mode.scope === \"string\") {\n              emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);\n            }\n            if (mode.beginScope) {\n              if (mode.beginScope._wrap) {\n                emitKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);\n                modeBuffer = \"\";\n              } else if (mode.beginScope._multi) {\n                emitMultiClass(mode.beginScope, match);\n                modeBuffer = \"\";\n              }\n            }\n            top = Object.create(mode, { parent: { value: top } });\n            return top;\n          }\n          function endOfMode(mode, match, matchPlusRemainder) {\n            let matched = startsWith(mode.endRe, matchPlusRemainder);\n            if (matched) {\n              if (mode[\"on:end\"]) {\n                const resp = new Response(mode);\n                mode[\"on:end\"](match, resp);\n                if (resp.isMatchIgnored)\n                  matched = false;\n              }\n              if (matched) {\n                while (mode.endsParent && mode.parent) {\n                  mode = mode.parent;\n                }\n                return mode;\n              }\n            }\n            if (mode.endsWithParent) {\n              return endOfMode(mode.parent, match, matchPlusRemainder);\n            }\n          }\n          function doIgnore(lexeme) {\n            if (top.matcher.regexIndex === 0) {\n              modeBuffer += lexeme[0];\n              return 1;\n            } else {\n              resumeScanAtSamePosition = true;\n              return 0;\n            }\n          }\n          function doBeginMatch(match) {\n            const lexeme = match[0];\n            const newMode = match.rule;\n            const resp = new Response(newMode);\n            const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n            for (const cb of beforeCallbacks) {\n              if (!cb)\n                continue;\n              cb(match, resp);\n              if (resp.isMatchIgnored)\n                return doIgnore(lexeme);\n            }\n            if (newMode.skip) {\n              modeBuffer += lexeme;\n            } else {\n              if (newMode.excludeBegin) {\n                modeBuffer += lexeme;\n              }\n              processBuffer();\n              if (!newMode.returnBegin && !newMode.excludeBegin) {\n                modeBuffer = lexeme;\n              }\n            }\n            startNewMode(newMode, match);\n            return newMode.returnBegin ? 0 : lexeme.length;\n          }\n          function doEndMatch(match) {\n            const lexeme = match[0];\n            const matchPlusRemainder = codeToHighlight.substring(match.index);\n            const endMode = endOfMode(top, match, matchPlusRemainder);\n            if (!endMode) {\n              return NO_MATCH;\n            }\n            const origin = top;\n            if (top.endScope && top.endScope._wrap) {\n              processBuffer();\n              emitKeyword(lexeme, top.endScope._wrap);\n            } else if (top.endScope && top.endScope._multi) {\n              processBuffer();\n              emitMultiClass(top.endScope, match);\n            } else if (origin.skip) {\n              modeBuffer += lexeme;\n            } else {\n              if (!(origin.returnEnd || origin.excludeEnd)) {\n                modeBuffer += lexeme;\n              }\n              processBuffer();\n              if (origin.excludeEnd) {\n                modeBuffer = lexeme;\n              }\n            }\n            do {\n              if (top.scope) {\n                emitter.closeNode();\n              }\n              if (!top.skip && !top.subLanguage) {\n                relevance += top.relevance;\n              }\n              top = top.parent;\n            } while (top !== endMode.parent);\n            if (endMode.starts) {\n              startNewMode(endMode.starts, match);\n            }\n            return origin.returnEnd ? 0 : lexeme.length;\n          }\n          function processContinuations() {\n            const list = [];\n            for (let current = top; current !== language; current = current.parent) {\n              if (current.scope) {\n                list.unshift(current.scope);\n              }\n            }\n            list.forEach((item) => emitter.openNode(item));\n          }\n          let lastMatch = {};\n          function processLexeme(textBeforeMatch, match) {\n            const lexeme = match && match[0];\n            modeBuffer += textBeforeMatch;\n            if (lexeme == null) {\n              processBuffer();\n              return 0;\n            }\n            if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n              modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n              if (!SAFE_MODE) {\n                const err = new Error(`0 width match regex (${languageName})`);\n                err.languageName = languageName;\n                err.badRule = lastMatch.rule;\n                throw err;\n              }\n              return 1;\n            }\n            lastMatch = match;\n            if (match.type === \"begin\") {\n              return doBeginMatch(match);\n            } else if (match.type === \"illegal\" && !ignoreIllegals) {\n              const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.scope || \"<unnamed>\") + '\"');\n              err.mode = top;\n              throw err;\n            } else if (match.type === \"end\") {\n              const processed = doEndMatch(match);\n              if (processed !== NO_MATCH) {\n                return processed;\n              }\n            }\n            if (match.type === \"illegal\" && lexeme === \"\") {\n              modeBuffer += \"\\n\";\n              return 1;\n            }\n            if (iterations > 1e5 && iterations > match.index * 3) {\n              const err = new Error(\"potential infinite loop, way more iterations than matches\");\n              throw err;\n            }\n            modeBuffer += lexeme;\n            return lexeme.length;\n          }\n          const language = getLanguage(languageName);\n          if (!language) {\n            error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n            throw new Error('Unknown language: \"' + languageName + '\"');\n          }\n          const md = compileLanguage(language);\n          let result = \"\";\n          let top = continuation || md;\n          const continuations = {};\n          const emitter = new options.__emitter(options);\n          processContinuations();\n          let modeBuffer = \"\";\n          let relevance = 0;\n          let index = 0;\n          let iterations = 0;\n          let resumeScanAtSamePosition = false;\n          try {\n            if (!language.__emitTokens) {\n              top.matcher.considerAll();\n              for (; ; ) {\n                iterations++;\n                if (resumeScanAtSamePosition) {\n                  resumeScanAtSamePosition = false;\n                } else {\n                  top.matcher.considerAll();\n                }\n                top.matcher.lastIndex = index;\n                const match = top.matcher.exec(codeToHighlight);\n                if (!match)\n                  break;\n                const beforeMatch = codeToHighlight.substring(index, match.index);\n                const processedCount = processLexeme(beforeMatch, match);\n                index = match.index + processedCount;\n              }\n              processLexeme(codeToHighlight.substring(index));\n            } else {\n              language.__emitTokens(codeToHighlight, emitter);\n            }\n            emitter.finalize();\n            result = emitter.toHTML();\n            return {\n              language: languageName,\n              value: result,\n              relevance,\n              illegal: false,\n              _emitter: emitter,\n              _top: top\n            };\n          } catch (err) {\n            if (err.message && err.message.includes(\"Illegal\")) {\n              return {\n                language: languageName,\n                value: escape(codeToHighlight),\n                illegal: true,\n                relevance: 0,\n                _illegalBy: {\n                  message: err.message,\n                  index,\n                  context: codeToHighlight.slice(index - 100, index + 100),\n                  mode: err.mode,\n                  resultSoFar: result\n                },\n                _emitter: emitter\n              };\n            } else if (SAFE_MODE) {\n              return {\n                language: languageName,\n                value: escape(codeToHighlight),\n                illegal: false,\n                relevance: 0,\n                errorRaised: err,\n                _emitter: emitter,\n                _top: top\n              };\n            } else {\n              throw err;\n            }\n          }\n        }\n        function justTextHighlightResult(code) {\n          const result = {\n            value: escape(code),\n            illegal: false,\n            relevance: 0,\n            _top: PLAINTEXT_LANGUAGE,\n            _emitter: new options.__emitter(options)\n          };\n          result._emitter.addText(code);\n          return result;\n        }\n        function highlightAuto(code, languageSubset) {\n          languageSubset = languageSubset || options.languages || Object.keys(languages);\n          const plaintext = justTextHighlightResult(code);\n          const results = languageSubset.filter(getLanguage).filter(autoDetection).map(\n            (name) => _highlight(name, code, false)\n          );\n          results.unshift(plaintext);\n          const sorted = results.sort((a, b) => {\n            if (a.relevance !== b.relevance)\n              return b.relevance - a.relevance;\n            if (a.language && b.language) {\n              if (getLanguage(a.language).supersetOf === b.language) {\n                return 1;\n              } else if (getLanguage(b.language).supersetOf === a.language) {\n                return -1;\n              }\n            }\n            return 0;\n          });\n          const [best, secondBest] = sorted;\n          const result = best;\n          result.secondBest = secondBest;\n          return result;\n        }\n        function updateClassName(element, currentLang, resultLang) {\n          const language = currentLang && aliases[currentLang] || resultLang;\n          element.classList.add(\"hljs\");\n          element.classList.add(`language-${language}`);\n        }\n        function highlightElement(element) {\n          let node = null;\n          const language = blockLanguage(element);\n          if (shouldNotHighlight(language))\n            return;\n          fire(\n            \"before:highlightElement\",\n            { el: element, language }\n          );\n          if (element.dataset.highlighted) {\n            console.log(\"Element previously highlighted. To highlight again, first unset `dataset.highlighted`.\", element);\n            return;\n          }\n          if (element.children.length > 0) {\n            if (!options.ignoreUnescapedHTML) {\n              console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\");\n              console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\");\n              console.warn(\"The element with unescaped HTML:\");\n              console.warn(element);\n            }\n            if (options.throwUnescapedHTML) {\n              const err = new HTMLInjectionError(\n                \"One of your code blocks includes unescaped HTML.\",\n                element.innerHTML\n              );\n              throw err;\n            }\n          }\n          node = element;\n          const text = node.textContent;\n          const result = language ? highlight2(text, { language, ignoreIllegals: true }) : highlightAuto(text);\n          element.innerHTML = result.value;\n          element.dataset.highlighted = \"yes\";\n          updateClassName(element, language, result.language);\n          element.result = {\n            language: result.language,\n            // TODO: remove with version 11.0\n            re: result.relevance,\n            relevance: result.relevance\n          };\n          if (result.secondBest) {\n            element.secondBest = {\n              language: result.secondBest.language,\n              relevance: result.secondBest.relevance\n            };\n          }\n          fire(\"after:highlightElement\", { el: element, result, text });\n        }\n        function configure(userOptions) {\n          options = inherit(options, userOptions);\n        }\n        const initHighlighting = () => {\n          highlightAll();\n          deprecated(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n        };\n        function initHighlightingOnLoad() {\n          highlightAll();\n          deprecated(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n        }\n        let wantsHighlight = false;\n        function highlightAll() {\n          function boot() {\n            highlightAll();\n          }\n          if (document.readyState === \"loading\") {\n            if (!wantsHighlight) {\n              window.addEventListener(\"DOMContentLoaded\", boot, false);\n            }\n            wantsHighlight = true;\n            return;\n          }\n          const blocks = document.querySelectorAll(options.cssSelector);\n          blocks.forEach(highlightElement);\n        }\n        function registerLanguage(languageName, languageDefinition) {\n          let lang = null;\n          try {\n            lang = languageDefinition(hljs);\n          } catch (error$1) {\n            error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n            if (!SAFE_MODE) {\n              throw error$1;\n            } else {\n              error(error$1);\n            }\n            lang = PLAINTEXT_LANGUAGE;\n          }\n          if (!lang.name)\n            lang.name = languageName;\n          languages[languageName] = lang;\n          lang.rawDefinition = languageDefinition.bind(null, hljs);\n          if (lang.aliases) {\n            registerAliases(lang.aliases, { languageName });\n          }\n        }\n        function unregisterLanguage(languageName) {\n          delete languages[languageName];\n          for (const alias of Object.keys(aliases)) {\n            if (aliases[alias] === languageName) {\n              delete aliases[alias];\n            }\n          }\n        }\n        function listLanguages() {\n          return Object.keys(languages);\n        }\n        function getLanguage(name) {\n          name = (name || \"\").toLowerCase();\n          return languages[name] || languages[aliases[name]];\n        }\n        function registerAliases(aliasList, { languageName }) {\n          if (typeof aliasList === \"string\") {\n            aliasList = [aliasList];\n          }\n          aliasList.forEach((alias) => {\n            aliases[alias.toLowerCase()] = languageName;\n          });\n        }\n        function autoDetection(name) {\n          const lang = getLanguage(name);\n          return lang && !lang.disableAutodetect;\n        }\n        function upgradePluginAPI(plugin) {\n          if (plugin[\"before:highlightBlock\"] && !plugin[\"before:highlightElement\"]) {\n            plugin[\"before:highlightElement\"] = (data) => {\n              plugin[\"before:highlightBlock\"](\n                Object.assign({ block: data.el }, data)\n              );\n            };\n          }\n          if (plugin[\"after:highlightBlock\"] && !plugin[\"after:highlightElement\"]) {\n            plugin[\"after:highlightElement\"] = (data) => {\n              plugin[\"after:highlightBlock\"](\n                Object.assign({ block: data.el }, data)\n              );\n            };\n          }\n        }\n        function addPlugin(plugin) {\n          upgradePluginAPI(plugin);\n          plugins.push(plugin);\n        }\n        function removePlugin(plugin) {\n          const index = plugins.indexOf(plugin);\n          if (index !== -1) {\n            plugins.splice(index, 1);\n          }\n        }\n        function fire(event, args) {\n          const cb = event;\n          plugins.forEach(function(plugin) {\n            if (plugin[cb]) {\n              plugin[cb](args);\n            }\n          });\n        }\n        function deprecateHighlightBlock(el) {\n          deprecated(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\");\n          deprecated(\"10.7.0\", \"Please use highlightElement now.\");\n          return highlightElement(el);\n        }\n        Object.assign(hljs, {\n          highlight: highlight2,\n          highlightAuto,\n          highlightAll,\n          highlightElement,\n          // TODO: Remove with v12 API\n          highlightBlock: deprecateHighlightBlock,\n          configure,\n          initHighlighting,\n          initHighlightingOnLoad,\n          registerLanguage,\n          unregisterLanguage,\n          listLanguages,\n          getLanguage,\n          registerAliases,\n          autoDetection,\n          inherit,\n          addPlugin,\n          removePlugin\n        });\n        hljs.debugMode = function() {\n          SAFE_MODE = false;\n        };\n        hljs.safeMode = function() {\n          SAFE_MODE = true;\n        };\n        hljs.versionString = version;\n        hljs.regex = {\n          concat,\n          lookahead,\n          either,\n          optional,\n          anyNumberOfTimes\n        };\n        for (const key in MODES3) {\n          if (typeof MODES3[key] === \"object\") {\n            deepFreeze(MODES3[key]);\n          }\n        }\n        Object.assign(hljs, MODES3);\n        return hljs;\n      };\n      var highlight = HLJS({});\n      highlight.newInstance = () => HLJS({});\n      module.exports = highlight;\n      highlight.HighlightJS = highlight;\n      highlight.default = highlight;\n    }\n  });\n\n  // src/client/howToApplyCC/index.ts\n  var howToApplyCC_exports = {};\n  __export(howToApplyCC_exports, {\n    initializeHowToApplyCC: () => initializeHowToApplyCC\n  });\n\n  // src/client/shared/managers/BaseContentManager.ts\n  var BaseContentManager = class {\n    constructor(cardRenderer, articleRenderer, eventHandler, navigationHandler, contentService, containerId) {\n      __publicField(this, \"cardRenderer\");\n      __publicField(this, \"articleRenderer\");\n      __publicField(this, \"eventHandler\");\n      __publicField(this, \"navigationHandler\");\n      __publicField(this, \"contentService\");\n      __publicField(this, \"containerId\");\n      this.cardRenderer = cardRenderer;\n      this.articleRenderer = articleRenderer;\n      this.eventHandler = eventHandler;\n      this.navigationHandler = navigationHandler;\n      this.contentService = contentService;\n      this.containerId = containerId;\n    }\n    initialize() {\n      this.renderOverviewCards();\n      this.bindEventListeners();\n    }\n    showOverview() {\n      this.renderOverviewCards();\n    }\n    renderOverviewCards() {\n      const container = document.getElementById(this.containerId);\n      if (!container) {\n        console.warn(`Container with id \"${this.containerId}\" not found`);\n        return;\n      }\n      const cards = this.getCards();\n      const cardsHtml = this.cardRenderer.renderCards(cards);\n      container.innerHTML = `<div class=\"overview-cards-grid\">${cardsHtml}</div>`;\n    }\n    bindEventListeners() {\n      this.eventHandler.bindEventListeners();\n      this.navigationHandler.bindEventListeners();\n    }\n  };\n\n  // src/client/shared/config/cardConfig.ts\n  var defaultDifficultyConfig = {\n    colors: {\n      \"beginner\": \"#10B981\",\n      \"intermediate\": \"#F59E0B\",\n      \"advanced\": \"#EF4444\",\n      \"expert\": \"#8B5CF6\"\n    },\n    labels: {\n      \"beginner\": \"\\u5165\\u95E8\",\n      \"intermediate\": \"\\u8FDB\\u9636\",\n      \"advanced\": \"\\u9AD8\\u7EA7\",\n      \"expert\": \"\\u4E13\\u5BB6\"\n    }\n  };\n\n  // src/client/shared/renderers/BaseCardRenderer.ts\n  var BaseCardRenderer = class {\n    constructor(categoryIcons = {}, difficultyConfig = defaultDifficultyConfig) {\n      __publicField(this, \"categoryIcons\", {});\n      __publicField(this, \"difficultyConfig\");\n      this.categoryIcons = categoryIcons;\n      this.difficultyConfig = difficultyConfig;\n    }\n    renderCards(cards) {\n      return cards.map((card, index) => this.renderCard(card, index)).join(\"\");\n    }\n    renderCard(card, index) {\n      const icon = this.categoryIcons[card.category] || \"\\u{1F4CB}\";\n      const difficultyColor = card.difficulty ? this.difficultyConfig.colors[card.difficulty] : void 0;\n      const difficultyLabel = card.difficulty ? this.difficultyConfig.labels[card.difficulty] : void 0;\n      const sectionsHtml = this.renderSections(card.sections);\n      const difficultyHtml = difficultyLabel ? `<span class=\"overview-card__difficulty\"${difficultyColor ? ` style=\"--difficulty-color: ${difficultyColor}\"` : \"\"}>\n              ${difficultyLabel}\n            </span>` : \"\";\n      const readTimeHtml = card.readTime ? `<span class=\"overview-card__read-time\">\\u{1F4D6} ${card.readTime}</span>` : \"\";\n      const overviewHtml = card.overview ? `<div class=\"overview-card__overview\">${card.overview}</div>` : \"\";\n      const sectionsBlockHtml = sectionsHtml ? `<div class=\"overview-card__sections\">\n            <h4 class=\"overview-card__sections-title\">\\u4E3B\\u8981\\u5185\\u5BB9\\uFF1A</h4>\n            <ul class=\"overview-card__sections-list\">\n              ${sectionsHtml}\n            </ul>\n          </div>` : \"\";\n      const descriptionHtml = card.description ? `<p class=\"overview-card__description\">${card.description}</p>` : \"\";\n      const versionHtml = card.version ? `<span class=\"overview-card__version\">v${card.version}</span>` : \"\";\n      const updatedHtml = card.lastUpdated ? `<span class=\"overview-card__updated\">\\u66F4\\u65B0\\u4E8E ${card.lastUpdated}</span>` : \"\";\n      const metaInfoHtml = versionHtml || updatedHtml ? `<div class=\"overview-card__meta-info\">${versionHtml}${updatedHtml}</div>` : \"\";\n      const coverHtml = card.imageUrl ? `<div class=\"overview-card__cover\"><img src=\"${card.imageUrl}\" alt=\"${card.title}\" loading=\"lazy\" decoding=\"async\" fetchpriority=\"low\" /></div>` : \"\";\n      const animationDelay = typeof index === \"number\" ? index * 0.02 : 0;\n      const styleAttr = `style=\"--card-index: ${animationDelay}s\"`;\n      return `\n      <div class=\"content-card overview-card\" data-card-id=\"${card.id}\" ${styleAttr}>\n        <div class=\"overview-card__header\">\n          <div class=\"overview-card__title-section\">\n            <div class=\"overview-card__icon\">${icon}</div>\n            <h3 class=\"overview-card__title\">${card.title}</h3>\n          </div>\n          <div class=\"overview-card__meta\">\n            ${difficultyHtml}\n            ${readTimeHtml}\n          </div>\n        </div>\n        <button class=\"overview-card__share-btn\" data-card-id=\"${card.id}\" aria-label=\"\\u5206\\u4EAB\\u6B64\\u5361\\u7247\" title=\"\\u5206\\u4EAB\">\n          <svg class=\"icon icon-share\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\">\n            <path d=\"M7 12l10-6M7 12l10 6M7 12v8\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            <rect x=\"3\" y=\"4\" width=\"4\" height=\"4\" rx=\"1.5\" stroke=\"currentColor\" stroke-width=\"2\"/>\n            <rect x=\"17\" y=\"10\" width=\"4\" height=\"4\" rx=\"1.5\" stroke=\"currentColor\" stroke-width=\"2\"/>\n            <rect x=\"3\" y=\"16\" width=\"4\" height=\"4\" rx=\"1.5\" stroke=\"currentColor\" stroke-width=\"2\"/>\n          </svg>\n        </button>\n                ${coverHtml}\n\n        <div class=\"overview-card__content\">\n          ${descriptionHtml}\n          ${overviewHtml}\n          ${sectionsBlockHtml}\n\n          ${this.renderTipsBlock(card.tips)}\n          \n          ${this.renderTagsBlock(card.tags)}\n        </div>\n        \n        ${metaInfoHtml ? `<div class=\"overview-card__footer\">${metaInfoHtml}</div>` : \"\"}\n        \n      </div>\n    `;\n    }\n    renderSections(sections) {\n      if (!sections || sections.length === 0)\n        return \"\";\n      return sections.map((section) => `\n      <li class=\"overview-card__section-item\">\n        <span class=\"overview-card__section-title\">${section.title}</span>\n        <span class=\"overview-card__section-content\">${section.content}</span>\n      </li>\n    `).join(\"\");\n    }\n    renderTips(tips) {\n      if (!tips || tips.length === 0)\n        return \"\";\n      return tips.map((tip) => `\n      <div class=\"overview-card__tip overview-card__tip--${tip.type}\">\n        <strong class=\"overview-card__tip-title\">${tip.title}:</strong>\n        <span class=\"overview-card__tip-content\">${tip.content}</span>\n      </div>\n    `).join(\"\");\n    }\n    renderTipsBlock(tips) {\n      const tipsHtml = this.renderTips(tips);\n      return tipsHtml ? `<div class=\"overview-card__tips\">${tipsHtml}</div>` : \"\";\n    }\n    renderTags(tags) {\n      if (!tags || tags.length === 0)\n        return \"\";\n      return tags.map((tag) => `\n      <span class=\"overview-card__tag\">${tag}</span>\n    `).join(\"\");\n    }\n    renderTagsBlock(tags) {\n      const tagsHtml = this.renderTags(tags);\n      return tagsHtml ? `<div class=\"overview-card__tags\">${tagsHtml}</div>` : \"\";\n    }\n  };\n\n  // src/client/howToApplyCC/data/categoryConfig.ts\n  var applyCCCategoryConfig = {\n    \"quick-start\": \"\\u{1F680}\",\n    \"core-usage\": \"\\u26A1\",\n    \"advanced\": \"\\u{1F52C}\",\n    \"examples\": \"\\u{1F4BC}\",\n    \"best-practices\": \"\\u2728\",\n    \"integration\": \"\\u{1F517}\"\n  };\n\n  // src/client/howToApplyCC/renderers/CardRenderer.ts\n  var HowToApplyCCCardRenderer = class extends BaseCardRenderer {\n    constructor() {\n      super(applyCCCategoryConfig);\n    }\n  };\n\n  // src/client/bestPractices/renderers/ArticleRenderer.ts\n  var ArticleRenderer = class {\n    renderArticle(title, content) {\n      return `\n      <div class=\"practice-article\">\n        <div class=\"practice-article__header\">\n          <button class=\"practice-article__back-btn\" data-action=\"back-to-overview\">\n            \\u2190 \\u8FD4\\u56DE\\u6982\\u89C8\n          </button>\n        </div>\n        \n        <div class=\"practice-article__content\" id=\"markdown-content-container\">\n          <!-- Markdown \\u5185\\u5BB9\\u5C06\\u5728\\u8FD9\\u91CC\\u6E32\\u67D3 -->\n        </div>\n      </div>\n    `;\n    }\n    renderLoadingState() {\n      return `\n      <div class=\"practice-article\">\n        <div class=\"practice-article__header\">\n          <button class=\"practice-article__back-btn\" data-action=\"back-to-overview\">\n            \\u2190 \\u8FD4\\u56DE\\u6982\\u89C8\n          </button>\n        </div>\n        \n        <div class=\"practice-article__content\">\n          <div class=\"article-skeleton\">\n            <div class=\"skeleton-title\"></div>\n            <div class=\"skeleton-line\"></div>\n            <div class=\"skeleton-line\"></div>\n            <div class=\"skeleton-diagram\"></div>\n            <div class=\"skeleton-line\"></div>\n            <div class=\"skeleton-line short\"></div>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n    renderErrorState(error) {\n      return `\n      <div class=\"practice-article\">\n        <div class=\"practice-article__header\">\n          <button class=\"practice-article__back-btn\" data-action=\"back-to-overview\">\n            \\u2190 \\u8FD4\\u56DE\\u6982\\u89C8\n          </button>\n          <h2 class=\"practice-article__title\">\\u52A0\\u8F7D\\u5931\\u8D25</h2>\n        </div>\n        \n        <div class=\"practice-article__content\">\n          <div class=\"error-message\">\n            <p>\\u274C \\u65E0\\u6CD5\\u52A0\\u8F7D\\u5185\\u5BB9: ${error}</p>\n            <button onclick=\"location.reload()\" class=\"retry-btn\">\\u91CD\\u8BD5</button>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n  };\n\n  // src/client/bestPractices/styles/markdownStyles.ts\n  var markdownStyles = `\n/* Markdown \\u5185\\u5BB9\\u5BB9\\u5668 */\n.practice-article {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n  background: #ffffff;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  opacity: 0;\n  transform: translateY(8px);\n  animation: articleFadeInUp 0.28s ease forwards;\n  position: relative;\n}\n\n.practice-article__header {\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  z-index: 5;\n  background: transparent;\n  margin: 0;\n  padding: 0;\n  border-bottom: none;\n}\n\n.practice-article__back-btn {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  background: rgba(255, 255, 255, 0.85);\n  border: 1px solid #e5e7eb;\n  color: #374151;\n  padding: 6px 12px;\n  border-radius: 999px;\n  cursor: pointer;\n  font-size: 13px;\n  line-height: 1;\n  transition: background 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease, transform 0.12s ease;\n  box-shadow: 0 1px 4px rgba(17, 24, 39, 0.06);\n  backdrop-filter: saturate(1.2) blur(2px);\n}\n\n.practice-article__back-btn:hover {\n  background: #ffffff;\n  border-color: #d1d5db;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(17, 24, 39, 0.08);\n}\n\n.practice-article__back-btn:active {\n  transform: translateY(0);\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);\n}\n\n.practice-article__back-btn:focus-visible {\n  outline: none;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.35);\n}\n\n.practice-article__content {\n  line-height: 1.7;\n  color: #374151;\n}\n\n/* \\u6587\\u7AE0\\u8FDB\\u5165/\\u9000\\u51FA\\u52A8\\u753B */\n@keyframes articleFadeInUp {\n  from { opacity: 0; transform: translateY(8px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n@keyframes articleFadeOutDown {\n  to { opacity: 0; transform: translateY(8px); }\n}\n\n.practice-article.is-exiting {\n  animation: articleFadeOutDown 0.22s ease forwards;\n}\n\n/* Markdown \\u5185\\u5BB9\\u6837\\u5F0F */\n.markdown-content {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n}\n\n.markdown-content h1 {\n  font-size: 2.25rem;\n  font-weight: 700;\n  color: #1f2937;\n  margin: 0 0 24px 0;\n  padding-bottom: 12px;\n  border-bottom: 2px solid #e5e7eb;\n}\n\n.markdown-content h2 {\n  font-size: 1.75rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 32px 0 16px 0;\n  padding-left: 12px;\n  border-left: 4px solid #3b82f6;\n}\n\n.markdown-content h3 {\n  font-size: 1.375rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 24px 0 12px 0;\n}\n\n.markdown-content h4 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #374151;\n  margin: 20px 0 10px 0;\n}\n\n.markdown-content p {\n  margin-bottom: 16px;\n  line-height: 1.7;\n  color: #4b5563;\n}\n\n.markdown-content strong {\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.markdown-content em {\n  font-style: italic;\n  color: #6b7280;\n}\n\n/* \\u5217\\u8868\\u6837\\u5F0F */\n.markdown-content ul,\n.markdown-content ol {\n  margin: 16px 0;\n  padding-left: 24px;\n}\n\n.markdown-content li {\n  margin-bottom: 8px;\n  line-height: 1.6;\n  color: #4b5563;\n}\n\n.markdown-content li strong {\n  color: #1f2937;\n}\n\n/* \\u4EE3\\u7801\\u6837\\u5F0F */\n.markdown-content code {\n  background: #f1f5f9;\n  color: #e11d48;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', monospace;\n  font-size: 0.9em;\n  border: 1px solid #e2e8f0;\n}\n\n/* \\u4EE3\\u7801\\u5757\\u6837\\u5F0F - \\u5339\\u914D SafeMarkdownRenderer \\u751F\\u6210\\u7684\\u7ED3\\u6784 */\n.markdown-content pre.code-block {\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  padding: 16px;\n  margin: 20px 0;\n  overflow-x: auto;\n  position: relative;\n}\n\n.markdown-content pre.code-block {\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', monospace;\n  font-size: 0.875rem;\n  line-height: 1.5;\n}\n\n.markdown-content pre.code-block code {\n  background: none;\n  /* \\u4E0D\\u5F3A\\u5236\\u8BBE\\u7F6E\\u989C\\u8272\\uFF0C\\u4EA4\\u7ED9 highlight.js \\u4E3B\\u9898\\u5904\\u7406 */\n  padding: 0;\n  border: none;\n  border-radius: 0;\n  display: block;\n  white-space: pre;\n}\n\n/* \\u5F53\\u672A\\u542F\\u7528 hljs \\u65F6\\u63D0\\u4F9B\\u4E00\\u4E2A\\u6E29\\u548C\\u7684\\u56DE\\u9000\\u989C\\u8272 */\n.markdown-content pre.code-block code:not(.hljs) {\n  color: #334155;\n}\n\n/* \\u5F53\\u5E94\\u7528 hljs \\u65F6\\uFF0C\\u907F\\u514D\\u884C\\u5185 code \\u89C4\\u5219\\u5C06\\u5176\\u6E32\\u67D3\\u4E3A\\u7EA2\\u8272 */\n.markdown-content pre.code-block code.hljs {\n  color: inherit;\n}\n\n/* \\u9AA8\\u67B6\\u5C4F\\u52A0\\u8F7D\\u52A8\\u753B */\n.article-skeleton {\n  padding: 20px 0;\n}\n\n.skeleton-title {\n  height: 32px;\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n  background-size: 200% 100%;\n  animation: skeleton-loading 1.5s infinite;\n  border-radius: 4px;\n  margin-bottom: 24px;\n  width: 60%;\n}\n\n.skeleton-line {\n  height: 16px;\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n  background-size: 200% 100%;\n  animation: skeleton-loading 1.5s infinite;\n  border-radius: 4px;\n  margin-bottom: 12px;\n  width: 100%;\n}\n\n.skeleton-line.short {\n  width: 70%;\n}\n\n.skeleton-diagram {\n  height: 200px;\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n  background-size: 200% 100%;\n  animation: skeleton-loading 1.5s infinite;\n  border-radius: 8px;\n  margin: 24px 0;\n}\n\n@keyframes skeleton-loading {\n  0% {\n    background-position: -200% 0;\n  }\n  100% {\n    background-position: 200% 0;\n  }\n}\n\n/* Mermaid \\u56FE\\u8868\\u589E\\u5F3A\\u6837\\u5F0F */\n.markdown-content .mermaid-diagram {\n  margin: 24px 0;\n  padding: 20px;\n  background: #fafbfc;\n  border: 1px solid #e1e5e9;\n  border-radius: 8px;\n  text-align: center;\n  overflow-x: auto;\n  min-height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  transition: all 0.3s ease;\n}\n\n.markdown-content .mermaid-diagram:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  transform: translateY(-2px);\n}\n\n.markdown-content .mermaid-diagram.mermaid-rendered {\n  background: #ffffff;\n  border: 1px solid #e5e7eb;\n  padding: 16px;\n  cursor: pointer;\n}\n\n.markdown-content .mermaid-diagram.mermaid-rendered::after {\n  content: \"\\u{1F50D} \\u70B9\\u51FB\\u67E5\\u770B\\u5927\\u56FE\";\n  position: absolute;\n  top: 8px;\n  right: 12px;\n  font-size: 12px;\n  color: #6b7280;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 4px 8px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.markdown-content .mermaid-diagram.mermaid-rendered:hover::after {\n  opacity: 1;\n}\n\n.markdown-content .mermaid-diagram svg {\n  max-width: 100%;\n  height: auto;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', monospace;\n  transition: transform 0.3s ease;\n}\n\n.markdown-content .mermaid-diagram.mermaid-rendered:hover svg {\n  transform: scale(1.02);\n}\n\n/* \\u5168\\u5C4F\\u67E5\\u770B\\u6A21\\u6001\\u6846 */\n.mermaid-fullscreen-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  opacity: 0;\n  animation: fadeIn 0.3s ease forwards;\n}\n\n.mermaid-fullscreen-content {\n  max-width: 95%;\n  max-height: 95%;\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  position: relative;\n  overflow: auto;\n  transform: scale(0.9);\n  animation: scaleIn 0.3s ease forwards;\n}\n\n.mermaid-fullscreen-close {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #666;\n  z-index: 1001;\n}\n\n.mermaid-fullscreen-close:hover {\n  color: #333;\n}\n\n@keyframes fadeIn {\n  to { opacity: 1; }\n}\n\n@keyframes scaleIn {\n  to { transform: scale(1); }\n}\n\n/* \\u590D\\u5236\\u6309\\u94AE\\u6837\\u5F0F - \\u9002\\u914D\\u65B0\\u7684\\u4EE3\\u7801\\u5757\\u7ED3\\u6784 */\n.markdown-content pre.code-block:hover .copy-button {\n  opacity: 1;\n}\n\n.copy-button {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  background: #e5e7eb;\n  border: none;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 12px;\n  cursor: pointer;\n  opacity: 0;\n  transition: all 0.3s ease;\n  z-index: 1;\n}\n\n.copy-button:hover {\n  background: #d1d5db;\n}\n\n.copy-button.copied {\n  background: #10b981;\n  color: white;\n}\n\n/* \\u8FD4\\u56DE\\u9876\\u90E8\\u6309\\u94AE */\n.back-to-top {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 48px;\n  height: 48px;\n  cursor: pointer;\n  opacity: 0;\n  transform: translateY(20px);\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);\n}\n\n.back-to-top.visible {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.back-to-top:hover {\n  background: #2563eb;\n  transform: translateY(-2px);\n  box-shadow: 0 6px 16px rgba(59, 130, 246, 0.4);\n}\n\n/* \\u9605\\u8BFB\\u8FDB\\u5EA6\\u6761 */\n.reading-progress {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 0%;\n  height: 3px;\n  background: linear-gradient(90deg, #3b82f6, #8b5cf6);\n  z-index: 999;\n  transition: width 0.1s ease;\n}\n\n/* \\u94FE\\u63A5\\u6837\\u5F0F */\n.markdown-content a {\n  color: #3b82f6;\n  text-decoration: none;\n  border-bottom: 1px solid transparent;\n  transition: all 0.2s ease;\n}\n\n.markdown-content a:hover {\n  color: #1d4ed8;\n  border-bottom-color: #3b82f6;\n}\n\n/* \\u56FE\\u7247\\u6837\\u5F0F */\n.markdown-content img,\n.markdown-content img.markdown-image {\n  max-width: 100%;\n  height: auto;\n  display: block;\n  margin: 16px auto;\n  border-radius: 8px;\n  border: 1px solid var(--border-color, #e5e7eb);\n  background: var(--bg-secondary, #f9fafb);\n}\n\n.markdown-content img[loading=\"lazy\"] {\n  filter: blur(0);\n}\n\n.markdown-content .md-image-blocked {\n  display: inline-block;\n  padding: 6px 8px;\n  font-size: 0.9em;\n  color: var(--error, #dc2626);\n  background: var(--bg-error-light, #fef2f2);\n  border: 1px solid var(--border-error, #fecaca);\n  border-radius: 6px;\n}\n\n/* \\u5F15\\u7528\\u5757\\u6837\\u5F0F */\n.markdown-content blockquote {\n  border-left: 4px solid #e5e7eb;\n  padding-left: 16px;\n  margin: 20px 0;\n  color: #6b7280;\n  font-style: italic;\n  background: #f9fafb;\n  padding: 16px;\n  border-radius: 0 8px 8px 0;\n}\n\n/* \\u8868\\u683C\\u6837\\u5F0F */\n.markdown-content table {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 20px 0;\n  background: #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.markdown-content th,\n.markdown-content td {\n  padding: 12px 16px;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.markdown-content th {\n  background: #f9fafb;\n  font-weight: 600;\n  color: #374151;\n}\n\n.markdown-content tr:hover {\n  background: #f9fafb;\n}\n\n/* \\u5206\\u9694\\u7EBF\\u6837\\u5F0F */\n.markdown-content hr {\n  border: none;\n  height: 1px;\n  background: #e5e7eb;\n  margin: 32px 0;\n}\n\n/* \\u54CD\\u5E94\\u5F0F\\u8BBE\\u8BA1 */\n@media (max-width: 768px) {\n  .practice-article {\n    margin: 10px;\n    padding: 16px;\n  }\n  .practice-article__header {\n    top: 10px;\n    right: 10px;\n    margin: 0;\n    padding: 0;\n  }\n  .practice-article__back-btn {\n    padding: 8px 12px;\n    font-size: 14px;\n  }\n  \n  .markdown-content h1 {\n    font-size: 1.875rem;\n  }\n  \n  .markdown-content h2 {\n    font-size: 1.5rem;\n  }\n  \n  .markdown-content pre {\n    padding: 12px;\n    font-size: 0.8rem;\n  }\n}\n`;\n  function injectMarkdownStyles() {\n    if (document.getElementById(\"markdown-styles\")) {\n      return;\n    }\n    const style = document.createElement(\"style\");\n    style.id = \"markdown-styles\";\n    style.textContent = markdownStyles;\n    document.head.appendChild(style);\n  }\n\n  // src/lib/utils/markdownRenderer.ts\n  var import_markdown_it = __toESM(require_markdown_it());\n  var import_isomorphic_dompurify = __toESM(require_browser());\n\n  // node_modules/highlight.js/es/core.js\n  var import_core = __toESM(require_core(), 1);\n  var core_default = import_core.default;\n\n  // node_modules/highlight.js/es/languages/javascript.js\n  var IDENT_RE = \"[A-Za-z$_][0-9A-Za-z$_]*\";\n  var KEYWORDS = [\n    \"as\",\n    // for exports\n    \"in\",\n    \"of\",\n    \"if\",\n    \"for\",\n    \"while\",\n    \"finally\",\n    \"var\",\n    \"new\",\n    \"function\",\n    \"do\",\n    \"return\",\n    \"void\",\n    \"else\",\n    \"break\",\n    \"catch\",\n    \"instanceof\",\n    \"with\",\n    \"throw\",\n    \"case\",\n    \"default\",\n    \"try\",\n    \"switch\",\n    \"continue\",\n    \"typeof\",\n    \"delete\",\n    \"let\",\n    \"yield\",\n    \"const\",\n    \"class\",\n    // JS handles these with a special rule\n    // \"get\",\n    // \"set\",\n    \"debugger\",\n    \"async\",\n    \"await\",\n    \"static\",\n    \"import\",\n    \"from\",\n    \"export\",\n    \"extends\",\n    // It's reached stage 3, which is \"recommended for implementation\":\n    \"using\"\n  ];\n  var LITERALS = [\n    \"true\",\n    \"false\",\n    \"null\",\n    \"undefined\",\n    \"NaN\",\n    \"Infinity\"\n  ];\n  var TYPES = [\n    // Fundamental objects\n    \"Object\",\n    \"Function\",\n    \"Boolean\",\n    \"Symbol\",\n    // numbers and dates\n    \"Math\",\n    \"Date\",\n    \"Number\",\n    \"BigInt\",\n    // text\n    \"String\",\n    \"RegExp\",\n    // Indexed collections\n    \"Array\",\n    \"Float32Array\",\n    \"Float64Array\",\n    \"Int8Array\",\n    \"Uint8Array\",\n    \"Uint8ClampedArray\",\n    \"Int16Array\",\n    \"Int32Array\",\n    \"Uint16Array\",\n    \"Uint32Array\",\n    \"BigInt64Array\",\n    \"BigUint64Array\",\n    // Keyed collections\n    \"Set\",\n    \"Map\",\n    \"WeakSet\",\n    \"WeakMap\",\n    // Structured data\n    \"ArrayBuffer\",\n    \"SharedArrayBuffer\",\n    \"Atomics\",\n    \"DataView\",\n    \"JSON\",\n    // Control abstraction objects\n    \"Promise\",\n    \"Generator\",\n    \"GeneratorFunction\",\n    \"AsyncFunction\",\n    // Reflection\n    \"Reflect\",\n    \"Proxy\",\n    // Internationalization\n    \"Intl\",\n    // WebAssembly\n    \"WebAssembly\"\n  ];\n  var ERROR_TYPES = [\n    \"Error\",\n    \"EvalError\",\n    \"InternalError\",\n    \"RangeError\",\n    \"ReferenceError\",\n    \"SyntaxError\",\n    \"TypeError\",\n    \"URIError\"\n  ];\n  var BUILT_IN_GLOBALS = [\n    \"setInterval\",\n    \"setTimeout\",\n    \"clearInterval\",\n    \"clearTimeout\",\n    \"require\",\n    \"exports\",\n    \"eval\",\n    \"isFinite\",\n    \"isNaN\",\n    \"parseFloat\",\n    \"parseInt\",\n    \"decodeURI\",\n    \"decodeURIComponent\",\n    \"encodeURI\",\n    \"encodeURIComponent\",\n    \"escape\",\n    \"unescape\"\n  ];\n  var BUILT_IN_VARIABLES = [\n    \"arguments\",\n    \"this\",\n    \"super\",\n    \"console\",\n    \"window\",\n    \"document\",\n    \"localStorage\",\n    \"sessionStorage\",\n    \"module\",\n    \"global\"\n    // Node.js\n  ];\n  var BUILT_INS = [].concat(\n    BUILT_IN_GLOBALS,\n    TYPES,\n    ERROR_TYPES\n  );\n  function javascript(hljs) {\n    const regex = hljs.regex;\n    const hasClosingTag = (match, { after }) => {\n      const tag = \"</\" + match[0].slice(1);\n      const pos = match.input.indexOf(tag, after);\n      return pos !== -1;\n    };\n    const IDENT_RE$1 = IDENT_RE;\n    const FRAGMENT = {\n      begin: \"<>\",\n      end: \"</>\"\n    };\n    const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\n    const XML_TAG = {\n      begin: /<[A-Za-z0-9\\\\._:-]+/,\n      end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n      /**\n       * @param {RegExpMatchArray} match\n       * @param {CallbackResponse} response\n       */\n      isTrulyOpeningTag: (match, response) => {\n        const afterMatchIndex = match[0].length + match.index;\n        const nextChar = match.input[afterMatchIndex];\n        if (\n          // HTML should not include another raw `<` inside a tag\n          // nested type?\n          // `<Array<Array<number>>`, etc.\n          nextChar === \"<\" || // the , gives away that this is not HTML\n          // `<T, A extends keyof T, V>`\n          nextChar === \",\"\n        ) {\n          response.ignoreMatch();\n          return;\n        }\n        if (nextChar === \">\") {\n          if (!hasClosingTag(match, { after: afterMatchIndex })) {\n            response.ignoreMatch();\n          }\n        }\n        let m;\n        const afterMatch = match.input.substring(afterMatchIndex);\n        if (m = afterMatch.match(/^\\s*=/)) {\n          response.ignoreMatch();\n          return;\n        }\n        if (m = afterMatch.match(/^\\s+extends\\s+/)) {\n          if (m.index === 0) {\n            response.ignoreMatch();\n            return;\n          }\n        }\n      }\n    };\n    const KEYWORDS$1 = {\n      $pattern: IDENT_RE,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: BUILT_INS,\n      \"variable.language\": BUILT_IN_VARIABLES\n    };\n    const decimalDigits2 = \"[0-9](_?[0-9])*\";\n    const frac2 = `\\\\.(${decimalDigits2})`;\n    const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n    const NUMBER = {\n      className: \"number\",\n      variants: [\n        // DecimalLiteral\n        { begin: `(\\\\b(${decimalInteger})((${frac2})|\\\\.)?|(${frac2}))[eE][+-]?(${decimalDigits2})\\\\b` },\n        { begin: `\\\\b(${decimalInteger})\\\\b((${frac2})\\\\b|\\\\.)?|(${frac2})\\\\b` },\n        // DecimalBigIntegerLiteral\n        { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n        // NonDecimalIntegerLiteral\n        { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n        { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n        { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n        // LegacyOctalIntegerLiteral (does not include underscore separators)\n        // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n        { begin: \"\\\\b0[0-7]+n?\\\\b\" }\n      ],\n      relevance: 0\n    };\n    const SUBST = {\n      className: \"subst\",\n      begin: \"\\\\$\\\\{\",\n      end: \"\\\\}\",\n      keywords: KEYWORDS$1,\n      contains: []\n      // defined later\n    };\n    const HTML_TEMPLATE = {\n      begin: \".?html`\",\n      end: \"\",\n      starts: {\n        end: \"`\",\n        returnEnd: false,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        subLanguage: \"xml\"\n      }\n    };\n    const CSS_TEMPLATE = {\n      begin: \".?css`\",\n      end: \"\",\n      starts: {\n        end: \"`\",\n        returnEnd: false,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        subLanguage: \"css\"\n      }\n    };\n    const GRAPHQL_TEMPLATE = {\n      begin: \".?gql`\",\n      end: \"\",\n      starts: {\n        end: \"`\",\n        returnEnd: false,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        subLanguage: \"graphql\"\n      }\n    };\n    const TEMPLATE_STRING = {\n      className: \"string\",\n      begin: \"`\",\n      end: \"`\",\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ]\n    };\n    const JSDOC_COMMENT = hljs.COMMENT(\n      /\\/\\*\\*(?!\\/)/,\n      \"\\\\*/\",\n      {\n        relevance: 0,\n        contains: [\n          {\n            begin: \"(?=@[A-Za-z]+)\",\n            relevance: 0,\n            contains: [\n              {\n                className: \"doctag\",\n                begin: \"@[A-Za-z]+\"\n              },\n              {\n                className: \"type\",\n                begin: \"\\\\{\",\n                end: \"\\\\}\",\n                excludeEnd: true,\n                excludeBegin: true,\n                relevance: 0\n              },\n              {\n                className: \"variable\",\n                begin: IDENT_RE$1 + \"(?=\\\\s*(-)|$)\",\n                endsParent: true,\n                relevance: 0\n              },\n              // eat spaces (not newlines) so we can find\n              // types or variables\n              {\n                begin: /(?=[^\\n])\\s/,\n                relevance: 0\n              }\n            ]\n          }\n        ]\n      }\n    );\n    const COMMENT = {\n      className: \"comment\",\n      variants: [\n        JSDOC_COMMENT,\n        hljs.C_BLOCK_COMMENT_MODE,\n        hljs.C_LINE_COMMENT_MODE\n      ]\n    };\n    const SUBST_INTERNALS = [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      GRAPHQL_TEMPLATE,\n      TEMPLATE_STRING,\n      // Skip numbers when they are part of a variable name\n      { match: /\\$\\d+/ },\n      NUMBER\n      // This is intentional:\n      // See https://github.com/highlightjs/highlight.js/issues/3288\n      // hljs.REGEXP_MODE\n    ];\n    SUBST.contains = SUBST_INTERNALS.concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n    const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n    const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n      // eat recursive parens in sub expressions\n      {\n        begin: /(\\s*)\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS$1,\n        contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n      }\n    ]);\n    const PARAMS = {\n      className: \"params\",\n      // convert this to negative lookbehind in v12\n      begin: /(\\s*)\\(/,\n      // to match the parms with\n      end: /\\)/,\n      excludeBegin: true,\n      excludeEnd: true,\n      keywords: KEYWORDS$1,\n      contains: PARAMS_CONTAINS\n    };\n    const CLASS_OR_EXTENDS = {\n      variants: [\n        // class Car extends vehicle\n        {\n          match: [\n            /class/,\n            /\\s+/,\n            IDENT_RE$1,\n            /\\s+/,\n            /extends/,\n            /\\s+/,\n            regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\n          ],\n          scope: {\n            1: \"keyword\",\n            3: \"title.class\",\n            5: \"keyword\",\n            7: \"title.class.inherited\"\n          }\n        },\n        // class Car\n        {\n          match: [\n            /class/,\n            /\\s+/,\n            IDENT_RE$1\n          ],\n          scope: {\n            1: \"keyword\",\n            3: \"title.class\"\n          }\n        }\n      ]\n    };\n    const CLASS_REFERENCE = {\n      relevance: 0,\n      match: regex.either(\n        // Hard coded exceptions\n        /\\bJSON/,\n        // Float32Array, OutT\n        /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n        // CSSFactory, CSSFactoryT\n        /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n        // FPs, FPsT\n        /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/\n        // P\n        // single letters are not highlighted\n        // BLAH\n        // this will be flagged as a UPPER_CASE_CONSTANT instead\n      ),\n      className: \"title.class\",\n      keywords: {\n        _: [\n          // se we still get relevance credit for JS library classes\n          ...TYPES,\n          ...ERROR_TYPES\n        ]\n      }\n    };\n    const USE_STRICT = {\n      label: \"use_strict\",\n      className: \"meta\",\n      relevance: 10,\n      begin: /^\\s*['\"]use (strict|asm)['\"]/\n    };\n    const FUNCTION_DEFINITION = {\n      variants: [\n        {\n          match: [\n            /function/,\n            /\\s+/,\n            IDENT_RE$1,\n            /(?=\\s*\\()/\n          ]\n        },\n        // anonymous function\n        {\n          match: [\n            /function/,\n            /\\s*(?=\\()/\n          ]\n        }\n      ],\n      className: {\n        1: \"keyword\",\n        3: \"title.function\"\n      },\n      label: \"func.def\",\n      contains: [PARAMS],\n      illegal: /%/\n    };\n    const UPPER_CASE_CONSTANT = {\n      relevance: 0,\n      match: /\\b[A-Z][A-Z_0-9]+\\b/,\n      className: \"variable.constant\"\n    };\n    function noneOf(list) {\n      return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n    }\n    const FUNCTION_CALL = {\n      match: regex.concat(\n        /\\b/,\n        noneOf([\n          ...BUILT_IN_GLOBALS,\n          \"super\",\n          \"import\"\n        ].map((x) => `${x}\\\\s*\\\\(`)),\n        IDENT_RE$1,\n        regex.lookahead(/\\s*\\(/)\n      ),\n      className: \"title.function\",\n      relevance: 0\n    };\n    const PROPERTY_ACCESS = {\n      begin: regex.concat(/\\./, regex.lookahead(\n        regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n      )),\n      end: IDENT_RE$1,\n      excludeBegin: true,\n      keywords: \"prototype\",\n      className: \"property\",\n      relevance: 0\n    };\n    const GETTER_OR_SETTER = {\n      match: [\n        /get|set/,\n        /\\s+/,\n        IDENT_RE$1,\n        /(?=\\()/\n      ],\n      className: {\n        1: \"keyword\",\n        3: \"title.function\"\n      },\n      contains: [\n        {\n          // eat to avoid empty params\n          begin: /\\(\\)/\n        },\n        PARAMS\n      ]\n    };\n    const FUNC_LEAD_IN_RE = \"(\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)|\" + hljs.UNDERSCORE_IDENT_RE + \")\\\\s*=>\";\n    const FUNCTION_VARIABLE = {\n      match: [\n        /const|var|let/,\n        /\\s+/,\n        IDENT_RE$1,\n        /\\s*/,\n        /=\\s*/,\n        /(async\\s*)?/,\n        // async is optional\n        regex.lookahead(FUNC_LEAD_IN_RE)\n      ],\n      keywords: \"async\",\n      className: {\n        1: \"keyword\",\n        3: \"title.function\"\n      },\n      contains: [\n        PARAMS\n      ]\n    };\n    return {\n      name: \"JavaScript\",\n      aliases: [\"js\", \"jsx\", \"mjs\", \"cjs\"],\n      keywords: KEYWORDS$1,\n      // this will be extended by TypeScript\n      exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n      illegal: /#(?![$_A-z])/,\n      contains: [\n        hljs.SHEBANG({\n          label: \"shebang\",\n          binary: \"node\",\n          relevance: 5\n        }),\n        USE_STRICT,\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE,\n        HTML_TEMPLATE,\n        CSS_TEMPLATE,\n        GRAPHQL_TEMPLATE,\n        TEMPLATE_STRING,\n        COMMENT,\n        // Skip numbers when they are part of a variable name\n        { match: /\\$\\d+/ },\n        NUMBER,\n        CLASS_REFERENCE,\n        {\n          scope: \"attr\",\n          match: IDENT_RE$1 + regex.lookahead(\":\"),\n          relevance: 0\n        },\n        FUNCTION_VARIABLE,\n        {\n          // \"value\" container\n          begin: \"(\" + hljs.RE_STARTERS_RE + \"|\\\\b(case|return|throw)\\\\b)\\\\s*\",\n          keywords: \"return throw case\",\n          relevance: 0,\n          contains: [\n            COMMENT,\n            hljs.REGEXP_MODE,\n            {\n              className: \"function\",\n              // we have to count the parens to make sure we actually have the\n              // correct bounding ( ) before the =>.  There could be any number of\n              // sub-expressions inside also surrounded by parens.\n              begin: FUNC_LEAD_IN_RE,\n              returnBegin: true,\n              end: \"\\\\s*=>\",\n              contains: [\n                {\n                  className: \"params\",\n                  variants: [\n                    {\n                      begin: hljs.UNDERSCORE_IDENT_RE,\n                      relevance: 0\n                    },\n                    {\n                      className: null,\n                      begin: /\\(\\s*\\)/,\n                      skip: true\n                    },\n                    {\n                      begin: /(\\s*)\\(/,\n                      end: /\\)/,\n                      excludeBegin: true,\n                      excludeEnd: true,\n                      keywords: KEYWORDS$1,\n                      contains: PARAMS_CONTAINS\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              // could be a comma delimited list of params to a function call\n              begin: /,/,\n              relevance: 0\n            },\n            {\n              match: /\\s+/,\n              relevance: 0\n            },\n            {\n              // JSX\n              variants: [\n                { begin: FRAGMENT.begin, end: FRAGMENT.end },\n                { match: XML_SELF_CLOSING },\n                {\n                  begin: XML_TAG.begin,\n                  // we carefully check the opening tag to see if it truly\n                  // is a tag and not a false positive\n                  \"on:begin\": XML_TAG.isTrulyOpeningTag,\n                  end: XML_TAG.end\n                }\n              ],\n              subLanguage: \"xml\",\n              contains: [\n                {\n                  begin: XML_TAG.begin,\n                  end: XML_TAG.end,\n                  skip: true,\n                  contains: [\"self\"]\n                }\n              ]\n            }\n          ]\n        },\n        FUNCTION_DEFINITION,\n        {\n          // prevent this from getting swallowed up by function\n          // since they appear \"function like\"\n          beginKeywords: \"while if switch catch for\"\n        },\n        {\n          // we have to count the parens to make sure we actually have the correct\n          // bounding ( ).  There could be any number of sub-expressions inside\n          // also surrounded by parens.\n          begin: \"\\\\b(?!function)\" + hljs.UNDERSCORE_IDENT_RE + \"\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)\\\\s*\\\\{\",\n          // end parens\n          returnBegin: true,\n          label: \"func.def\",\n          contains: [\n            PARAMS,\n            hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n          ]\n        },\n        // catch ... so it won't trigger the property rule below\n        {\n          match: /\\.\\.\\./,\n          relevance: 0\n        },\n        PROPERTY_ACCESS,\n        // hack: prevents detection of keywords in some circumstances\n        // .keyword()\n        // $keyword = x\n        {\n          match: \"\\\\$\" + IDENT_RE$1,\n          relevance: 0\n        },\n        {\n          match: [/\\bconstructor(?=\\s*\\()/],\n          className: { 1: \"title.function\" },\n          contains: [PARAMS]\n        },\n        FUNCTION_CALL,\n        UPPER_CASE_CONSTANT,\n        CLASS_OR_EXTENDS,\n        GETTER_OR_SETTER,\n        {\n          match: /\\$[(.]/\n          // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n        }\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/typescript.js\n  var IDENT_RE2 = \"[A-Za-z$_][0-9A-Za-z$_]*\";\n  var KEYWORDS2 = [\n    \"as\",\n    // for exports\n    \"in\",\n    \"of\",\n    \"if\",\n    \"for\",\n    \"while\",\n    \"finally\",\n    \"var\",\n    \"new\",\n    \"function\",\n    \"do\",\n    \"return\",\n    \"void\",\n    \"else\",\n    \"break\",\n    \"catch\",\n    \"instanceof\",\n    \"with\",\n    \"throw\",\n    \"case\",\n    \"default\",\n    \"try\",\n    \"switch\",\n    \"continue\",\n    \"typeof\",\n    \"delete\",\n    \"let\",\n    \"yield\",\n    \"const\",\n    \"class\",\n    // JS handles these with a special rule\n    // \"get\",\n    // \"set\",\n    \"debugger\",\n    \"async\",\n    \"await\",\n    \"static\",\n    \"import\",\n    \"from\",\n    \"export\",\n    \"extends\",\n    // It's reached stage 3, which is \"recommended for implementation\":\n    \"using\"\n  ];\n  var LITERALS2 = [\n    \"true\",\n    \"false\",\n    \"null\",\n    \"undefined\",\n    \"NaN\",\n    \"Infinity\"\n  ];\n  var TYPES2 = [\n    // Fundamental objects\n    \"Object\",\n    \"Function\",\n    \"Boolean\",\n    \"Symbol\",\n    // numbers and dates\n    \"Math\",\n    \"Date\",\n    \"Number\",\n    \"BigInt\",\n    // text\n    \"String\",\n    \"RegExp\",\n    // Indexed collections\n    \"Array\",\n    \"Float32Array\",\n    \"Float64Array\",\n    \"Int8Array\",\n    \"Uint8Array\",\n    \"Uint8ClampedArray\",\n    \"Int16Array\",\n    \"Int32Array\",\n    \"Uint16Array\",\n    \"Uint32Array\",\n    \"BigInt64Array\",\n    \"BigUint64Array\",\n    // Keyed collections\n    \"Set\",\n    \"Map\",\n    \"WeakSet\",\n    \"WeakMap\",\n    // Structured data\n    \"ArrayBuffer\",\n    \"SharedArrayBuffer\",\n    \"Atomics\",\n    \"DataView\",\n    \"JSON\",\n    // Control abstraction objects\n    \"Promise\",\n    \"Generator\",\n    \"GeneratorFunction\",\n    \"AsyncFunction\",\n    // Reflection\n    \"Reflect\",\n    \"Proxy\",\n    // Internationalization\n    \"Intl\",\n    // WebAssembly\n    \"WebAssembly\"\n  ];\n  var ERROR_TYPES2 = [\n    \"Error\",\n    \"EvalError\",\n    \"InternalError\",\n    \"RangeError\",\n    \"ReferenceError\",\n    \"SyntaxError\",\n    \"TypeError\",\n    \"URIError\"\n  ];\n  var BUILT_IN_GLOBALS2 = [\n    \"setInterval\",\n    \"setTimeout\",\n    \"clearInterval\",\n    \"clearTimeout\",\n    \"require\",\n    \"exports\",\n    \"eval\",\n    \"isFinite\",\n    \"isNaN\",\n    \"parseFloat\",\n    \"parseInt\",\n    \"decodeURI\",\n    \"decodeURIComponent\",\n    \"encodeURI\",\n    \"encodeURIComponent\",\n    \"escape\",\n    \"unescape\"\n  ];\n  var BUILT_IN_VARIABLES2 = [\n    \"arguments\",\n    \"this\",\n    \"super\",\n    \"console\",\n    \"window\",\n    \"document\",\n    \"localStorage\",\n    \"sessionStorage\",\n    \"module\",\n    \"global\"\n    // Node.js\n  ];\n  var BUILT_INS2 = [].concat(\n    BUILT_IN_GLOBALS2,\n    TYPES2,\n    ERROR_TYPES2\n  );\n  function javascript2(hljs) {\n    const regex = hljs.regex;\n    const hasClosingTag = (match, { after }) => {\n      const tag = \"</\" + match[0].slice(1);\n      const pos = match.input.indexOf(tag, after);\n      return pos !== -1;\n    };\n    const IDENT_RE$1 = IDENT_RE2;\n    const FRAGMENT = {\n      begin: \"<>\",\n      end: \"</>\"\n    };\n    const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\n    const XML_TAG = {\n      begin: /<[A-Za-z0-9\\\\._:-]+/,\n      end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n      /**\n       * @param {RegExpMatchArray} match\n       * @param {CallbackResponse} response\n       */\n      isTrulyOpeningTag: (match, response) => {\n        const afterMatchIndex = match[0].length + match.index;\n        const nextChar = match.input[afterMatchIndex];\n        if (\n          // HTML should not include another raw `<` inside a tag\n          // nested type?\n          // `<Array<Array<number>>`, etc.\n          nextChar === \"<\" || // the , gives away that this is not HTML\n          // `<T, A extends keyof T, V>`\n          nextChar === \",\"\n        ) {\n          response.ignoreMatch();\n          return;\n        }\n        if (nextChar === \">\") {\n          if (!hasClosingTag(match, { after: afterMatchIndex })) {\n            response.ignoreMatch();\n          }\n        }\n        let m;\n        const afterMatch = match.input.substring(afterMatchIndex);\n        if (m = afterMatch.match(/^\\s*=/)) {\n          response.ignoreMatch();\n          return;\n        }\n        if (m = afterMatch.match(/^\\s+extends\\s+/)) {\n          if (m.index === 0) {\n            response.ignoreMatch();\n            return;\n          }\n        }\n      }\n    };\n    const KEYWORDS$1 = {\n      $pattern: IDENT_RE2,\n      keyword: KEYWORDS2,\n      literal: LITERALS2,\n      built_in: BUILT_INS2,\n      \"variable.language\": BUILT_IN_VARIABLES2\n    };\n    const decimalDigits2 = \"[0-9](_?[0-9])*\";\n    const frac2 = `\\\\.(${decimalDigits2})`;\n    const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n    const NUMBER = {\n      className: \"number\",\n      variants: [\n        // DecimalLiteral\n        { begin: `(\\\\b(${decimalInteger})((${frac2})|\\\\.)?|(${frac2}))[eE][+-]?(${decimalDigits2})\\\\b` },\n        { begin: `\\\\b(${decimalInteger})\\\\b((${frac2})\\\\b|\\\\.)?|(${frac2})\\\\b` },\n        // DecimalBigIntegerLiteral\n        { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n        // NonDecimalIntegerLiteral\n        { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n        { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n        { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n        // LegacyOctalIntegerLiteral (does not include underscore separators)\n        // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n        { begin: \"\\\\b0[0-7]+n?\\\\b\" }\n      ],\n      relevance: 0\n    };\n    const SUBST = {\n      className: \"subst\",\n      begin: \"\\\\$\\\\{\",\n      end: \"\\\\}\",\n      keywords: KEYWORDS$1,\n      contains: []\n      // defined later\n    };\n    const HTML_TEMPLATE = {\n      begin: \".?html`\",\n      end: \"\",\n      starts: {\n        end: \"`\",\n        returnEnd: false,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        subLanguage: \"xml\"\n      }\n    };\n    const CSS_TEMPLATE = {\n      begin: \".?css`\",\n      end: \"\",\n      starts: {\n        end: \"`\",\n        returnEnd: false,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        subLanguage: \"css\"\n      }\n    };\n    const GRAPHQL_TEMPLATE = {\n      begin: \".?gql`\",\n      end: \"\",\n      starts: {\n        end: \"`\",\n        returnEnd: false,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        subLanguage: \"graphql\"\n      }\n    };\n    const TEMPLATE_STRING = {\n      className: \"string\",\n      begin: \"`\",\n      end: \"`\",\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ]\n    };\n    const JSDOC_COMMENT = hljs.COMMENT(\n      /\\/\\*\\*(?!\\/)/,\n      \"\\\\*/\",\n      {\n        relevance: 0,\n        contains: [\n          {\n            begin: \"(?=@[A-Za-z]+)\",\n            relevance: 0,\n            contains: [\n              {\n                className: \"doctag\",\n                begin: \"@[A-Za-z]+\"\n              },\n              {\n                className: \"type\",\n                begin: \"\\\\{\",\n                end: \"\\\\}\",\n                excludeEnd: true,\n                excludeBegin: true,\n                relevance: 0\n              },\n              {\n                className: \"variable\",\n                begin: IDENT_RE$1 + \"(?=\\\\s*(-)|$)\",\n                endsParent: true,\n                relevance: 0\n              },\n              // eat spaces (not newlines) so we can find\n              // types or variables\n              {\n                begin: /(?=[^\\n])\\s/,\n                relevance: 0\n              }\n            ]\n          }\n        ]\n      }\n    );\n    const COMMENT = {\n      className: \"comment\",\n      variants: [\n        JSDOC_COMMENT,\n        hljs.C_BLOCK_COMMENT_MODE,\n        hljs.C_LINE_COMMENT_MODE\n      ]\n    };\n    const SUBST_INTERNALS = [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      GRAPHQL_TEMPLATE,\n      TEMPLATE_STRING,\n      // Skip numbers when they are part of a variable name\n      { match: /\\$\\d+/ },\n      NUMBER\n      // This is intentional:\n      // See https://github.com/highlightjs/highlight.js/issues/3288\n      // hljs.REGEXP_MODE\n    ];\n    SUBST.contains = SUBST_INTERNALS.concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n    const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n    const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n      // eat recursive parens in sub expressions\n      {\n        begin: /(\\s*)\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS$1,\n        contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n      }\n    ]);\n    const PARAMS = {\n      className: \"params\",\n      // convert this to negative lookbehind in v12\n      begin: /(\\s*)\\(/,\n      // to match the parms with\n      end: /\\)/,\n      excludeBegin: true,\n      excludeEnd: true,\n      keywords: KEYWORDS$1,\n      contains: PARAMS_CONTAINS\n    };\n    const CLASS_OR_EXTENDS = {\n      variants: [\n        // class Car extends vehicle\n        {\n          match: [\n            /class/,\n            /\\s+/,\n            IDENT_RE$1,\n            /\\s+/,\n            /extends/,\n            /\\s+/,\n            regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\n          ],\n          scope: {\n            1: \"keyword\",\n            3: \"title.class\",\n            5: \"keyword\",\n            7: \"title.class.inherited\"\n          }\n        },\n        // class Car\n        {\n          match: [\n            /class/,\n            /\\s+/,\n            IDENT_RE$1\n          ],\n          scope: {\n            1: \"keyword\",\n            3: \"title.class\"\n          }\n        }\n      ]\n    };\n    const CLASS_REFERENCE = {\n      relevance: 0,\n      match: regex.either(\n        // Hard coded exceptions\n        /\\bJSON/,\n        // Float32Array, OutT\n        /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n        // CSSFactory, CSSFactoryT\n        /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n        // FPs, FPsT\n        /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/\n        // P\n        // single letters are not highlighted\n        // BLAH\n        // this will be flagged as a UPPER_CASE_CONSTANT instead\n      ),\n      className: \"title.class\",\n      keywords: {\n        _: [\n          // se we still get relevance credit for JS library classes\n          ...TYPES2,\n          ...ERROR_TYPES2\n        ]\n      }\n    };\n    const USE_STRICT = {\n      label: \"use_strict\",\n      className: \"meta\",\n      relevance: 10,\n      begin: /^\\s*['\"]use (strict|asm)['\"]/\n    };\n    const FUNCTION_DEFINITION = {\n      variants: [\n        {\n          match: [\n            /function/,\n            /\\s+/,\n            IDENT_RE$1,\n            /(?=\\s*\\()/\n          ]\n        },\n        // anonymous function\n        {\n          match: [\n            /function/,\n            /\\s*(?=\\()/\n          ]\n        }\n      ],\n      className: {\n        1: \"keyword\",\n        3: \"title.function\"\n      },\n      label: \"func.def\",\n      contains: [PARAMS],\n      illegal: /%/\n    };\n    const UPPER_CASE_CONSTANT = {\n      relevance: 0,\n      match: /\\b[A-Z][A-Z_0-9]+\\b/,\n      className: \"variable.constant\"\n    };\n    function noneOf(list) {\n      return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n    }\n    const FUNCTION_CALL = {\n      match: regex.concat(\n        /\\b/,\n        noneOf([\n          ...BUILT_IN_GLOBALS2,\n          \"super\",\n          \"import\"\n        ].map((x) => `${x}\\\\s*\\\\(`)),\n        IDENT_RE$1,\n        regex.lookahead(/\\s*\\(/)\n      ),\n      className: \"title.function\",\n      relevance: 0\n    };\n    const PROPERTY_ACCESS = {\n      begin: regex.concat(/\\./, regex.lookahead(\n        regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n      )),\n      end: IDENT_RE$1,\n      excludeBegin: true,\n      keywords: \"prototype\",\n      className: \"property\",\n      relevance: 0\n    };\n    const GETTER_OR_SETTER = {\n      match: [\n        /get|set/,\n        /\\s+/,\n        IDENT_RE$1,\n        /(?=\\()/\n      ],\n      className: {\n        1: \"keyword\",\n        3: \"title.function\"\n      },\n      contains: [\n        {\n          // eat to avoid empty params\n          begin: /\\(\\)/\n        },\n        PARAMS\n      ]\n    };\n    const FUNC_LEAD_IN_RE = \"(\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)|\" + hljs.UNDERSCORE_IDENT_RE + \")\\\\s*=>\";\n    const FUNCTION_VARIABLE = {\n      match: [\n        /const|var|let/,\n        /\\s+/,\n        IDENT_RE$1,\n        /\\s*/,\n        /=\\s*/,\n        /(async\\s*)?/,\n        // async is optional\n        regex.lookahead(FUNC_LEAD_IN_RE)\n      ],\n      keywords: \"async\",\n      className: {\n        1: \"keyword\",\n        3: \"title.function\"\n      },\n      contains: [\n        PARAMS\n      ]\n    };\n    return {\n      name: \"JavaScript\",\n      aliases: [\"js\", \"jsx\", \"mjs\", \"cjs\"],\n      keywords: KEYWORDS$1,\n      // this will be extended by TypeScript\n      exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n      illegal: /#(?![$_A-z])/,\n      contains: [\n        hljs.SHEBANG({\n          label: \"shebang\",\n          binary: \"node\",\n          relevance: 5\n        }),\n        USE_STRICT,\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE,\n        HTML_TEMPLATE,\n        CSS_TEMPLATE,\n        GRAPHQL_TEMPLATE,\n        TEMPLATE_STRING,\n        COMMENT,\n        // Skip numbers when they are part of a variable name\n        { match: /\\$\\d+/ },\n        NUMBER,\n        CLASS_REFERENCE,\n        {\n          scope: \"attr\",\n          match: IDENT_RE$1 + regex.lookahead(\":\"),\n          relevance: 0\n        },\n        FUNCTION_VARIABLE,\n        {\n          // \"value\" container\n          begin: \"(\" + hljs.RE_STARTERS_RE + \"|\\\\b(case|return|throw)\\\\b)\\\\s*\",\n          keywords: \"return throw case\",\n          relevance: 0,\n          contains: [\n            COMMENT,\n            hljs.REGEXP_MODE,\n            {\n              className: \"function\",\n              // we have to count the parens to make sure we actually have the\n              // correct bounding ( ) before the =>.  There could be any number of\n              // sub-expressions inside also surrounded by parens.\n              begin: FUNC_LEAD_IN_RE,\n              returnBegin: true,\n              end: \"\\\\s*=>\",\n              contains: [\n                {\n                  className: \"params\",\n                  variants: [\n                    {\n                      begin: hljs.UNDERSCORE_IDENT_RE,\n                      relevance: 0\n                    },\n                    {\n                      className: null,\n                      begin: /\\(\\s*\\)/,\n                      skip: true\n                    },\n                    {\n                      begin: /(\\s*)\\(/,\n                      end: /\\)/,\n                      excludeBegin: true,\n                      excludeEnd: true,\n                      keywords: KEYWORDS$1,\n                      contains: PARAMS_CONTAINS\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              // could be a comma delimited list of params to a function call\n              begin: /,/,\n              relevance: 0\n            },\n            {\n              match: /\\s+/,\n              relevance: 0\n            },\n            {\n              // JSX\n              variants: [\n                { begin: FRAGMENT.begin, end: FRAGMENT.end },\n                { match: XML_SELF_CLOSING },\n                {\n                  begin: XML_TAG.begin,\n                  // we carefully check the opening tag to see if it truly\n                  // is a tag and not a false positive\n                  \"on:begin\": XML_TAG.isTrulyOpeningTag,\n                  end: XML_TAG.end\n                }\n              ],\n              subLanguage: \"xml\",\n              contains: [\n                {\n                  begin: XML_TAG.begin,\n                  end: XML_TAG.end,\n                  skip: true,\n                  contains: [\"self\"]\n                }\n              ]\n            }\n          ]\n        },\n        FUNCTION_DEFINITION,\n        {\n          // prevent this from getting swallowed up by function\n          // since they appear \"function like\"\n          beginKeywords: \"while if switch catch for\"\n        },\n        {\n          // we have to count the parens to make sure we actually have the correct\n          // bounding ( ).  There could be any number of sub-expressions inside\n          // also surrounded by parens.\n          begin: \"\\\\b(?!function)\" + hljs.UNDERSCORE_IDENT_RE + \"\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)\\\\s*\\\\{\",\n          // end parens\n          returnBegin: true,\n          label: \"func.def\",\n          contains: [\n            PARAMS,\n            hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n          ]\n        },\n        // catch ... so it won't trigger the property rule below\n        {\n          match: /\\.\\.\\./,\n          relevance: 0\n        },\n        PROPERTY_ACCESS,\n        // hack: prevents detection of keywords in some circumstances\n        // .keyword()\n        // $keyword = x\n        {\n          match: \"\\\\$\" + IDENT_RE$1,\n          relevance: 0\n        },\n        {\n          match: [/\\bconstructor(?=\\s*\\()/],\n          className: { 1: \"title.function\" },\n          contains: [PARAMS]\n        },\n        FUNCTION_CALL,\n        UPPER_CASE_CONSTANT,\n        CLASS_OR_EXTENDS,\n        GETTER_OR_SETTER,\n        {\n          match: /\\$[(.]/\n          // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n        }\n      ]\n    };\n  }\n  function typescript(hljs) {\n    const regex = hljs.regex;\n    const tsLanguage = javascript2(hljs);\n    const IDENT_RE$1 = IDENT_RE2;\n    const TYPES3 = [\n      \"any\",\n      \"void\",\n      \"number\",\n      \"boolean\",\n      \"string\",\n      \"object\",\n      \"never\",\n      \"symbol\",\n      \"bigint\",\n      \"unknown\"\n    ];\n    const NAMESPACE = {\n      begin: [\n        /namespace/,\n        /\\s+/,\n        hljs.IDENT_RE\n      ],\n      beginScope: {\n        1: \"keyword\",\n        3: \"title.class\"\n      }\n    };\n    const INTERFACE = {\n      beginKeywords: \"interface\",\n      end: /\\{/,\n      excludeEnd: true,\n      keywords: {\n        keyword: \"interface extends\",\n        built_in: TYPES3\n      },\n      contains: [tsLanguage.exports.CLASS_REFERENCE]\n    };\n    const USE_STRICT = {\n      className: \"meta\",\n      relevance: 10,\n      begin: /^\\s*['\"]use strict['\"]/\n    };\n    const TS_SPECIFIC_KEYWORDS = [\n      \"type\",\n      // \"namespace\",\n      \"interface\",\n      \"public\",\n      \"private\",\n      \"protected\",\n      \"implements\",\n      \"declare\",\n      \"abstract\",\n      \"readonly\",\n      \"enum\",\n      \"override\",\n      \"satisfies\"\n    ];\n    const KEYWORDS$1 = {\n      $pattern: IDENT_RE2,\n      keyword: KEYWORDS2.concat(TS_SPECIFIC_KEYWORDS),\n      literal: LITERALS2,\n      built_in: BUILT_INS2.concat(TYPES3),\n      \"variable.language\": BUILT_IN_VARIABLES2\n    };\n    const DECORATOR = {\n      className: \"meta\",\n      begin: \"@\" + IDENT_RE$1\n    };\n    const swapMode = (mode, label, replacement) => {\n      const indx = mode.contains.findIndex((m) => m.label === label);\n      if (indx === -1) {\n        throw new Error(\"can not find mode to replace\");\n      }\n      mode.contains.splice(indx, 1, replacement);\n    };\n    Object.assign(tsLanguage.keywords, KEYWORDS$1);\n    tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);\n    const ATTRIBUTE_HIGHLIGHT = tsLanguage.contains.find((c) => c.scope === \"attr\");\n    const OPTIONAL_KEY_OR_ARGUMENT = Object.assign(\n      {},\n      ATTRIBUTE_HIGHLIGHT,\n      { match: regex.concat(IDENT_RE$1, regex.lookahead(/\\s*\\?:/)) }\n    );\n    tsLanguage.exports.PARAMS_CONTAINS.push([\n      tsLanguage.exports.CLASS_REFERENCE,\n      // class reference for highlighting the params types\n      ATTRIBUTE_HIGHLIGHT,\n      // highlight the params key\n      OPTIONAL_KEY_OR_ARGUMENT\n      // Added for optional property assignment highlighting\n    ]);\n    tsLanguage.contains = tsLanguage.contains.concat([\n      DECORATOR,\n      NAMESPACE,\n      INTERFACE,\n      OPTIONAL_KEY_OR_ARGUMENT\n      // Added for optional property assignment highlighting\n    ]);\n    swapMode(tsLanguage, \"shebang\", hljs.SHEBANG());\n    swapMode(tsLanguage, \"use_strict\", USE_STRICT);\n    const functionDeclaration = tsLanguage.contains.find((m) => m.label === \"func.def\");\n    functionDeclaration.relevance = 0;\n    Object.assign(tsLanguage, {\n      name: \"TypeScript\",\n      aliases: [\n        \"ts\",\n        \"tsx\",\n        \"mts\",\n        \"cts\"\n      ]\n    });\n    return tsLanguage;\n  }\n\n  // node_modules/highlight.js/es/languages/json.js\n  function json(hljs) {\n    const ATTRIBUTE = {\n      className: \"attr\",\n      begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      relevance: 1.01\n    };\n    const PUNCTUATION = {\n      match: /[{}[\\],:]/,\n      className: \"punctuation\",\n      relevance: 0\n    };\n    const LITERALS3 = [\n      \"true\",\n      \"false\",\n      \"null\"\n    ];\n    const LITERALS_MODE = {\n      scope: \"literal\",\n      beginKeywords: LITERALS3.join(\" \")\n    };\n    return {\n      name: \"JSON\",\n      aliases: [\"jsonc\"],\n      keywords: {\n        literal: LITERALS3\n      },\n      contains: [\n        ATTRIBUTE,\n        PUNCTUATION,\n        hljs.QUOTE_STRING_MODE,\n        LITERALS_MODE,\n        hljs.C_NUMBER_MODE,\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE\n      ],\n      illegal: \"\\\\S\"\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/yaml.js\n  function yaml(hljs) {\n    const LITERALS3 = \"true false yes no null\";\n    const URI_CHARACTERS = \"[\\\\w#;/?:@&=+$,.~*'()[\\\\]]+\";\n    const KEY = {\n      className: \"attr\",\n      variants: [\n        // added brackets support and special char support\n        { begin: /[\\w*@][\\w*@ :()\\./-]*:(?=[ \\t]|$)/ },\n        {\n          // double quoted keys - with brackets and special char support\n          begin: /\"[\\w*@][\\w*@ :()\\./-]*\":(?=[ \\t]|$)/\n        },\n        {\n          // single quoted keys - with brackets and special char support\n          begin: /'[\\w*@][\\w*@ :()\\./-]*':(?=[ \\t]|$)/\n        }\n      ]\n    };\n    const TEMPLATE_VARIABLES = {\n      className: \"template-variable\",\n      variants: [\n        {\n          // jinja templates Ansible\n          begin: /\\{\\{/,\n          end: /\\}\\}/\n        },\n        {\n          // Ruby i18n\n          begin: /%\\{/,\n          end: /\\}/\n        }\n      ]\n    };\n    const SINGLE_QUOTE_STRING = {\n      className: \"string\",\n      relevance: 0,\n      begin: /'/,\n      end: /'/,\n      contains: [\n        {\n          match: /''/,\n          scope: \"char.escape\",\n          relevance: 0\n        }\n      ]\n    };\n    const STRING = {\n      className: \"string\",\n      relevance: 0,\n      variants: [\n        {\n          begin: /\"/,\n          end: /\"/\n        },\n        { begin: /\\S+/ }\n      ],\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        TEMPLATE_VARIABLES\n      ]\n    };\n    const CONTAINER_STRING = hljs.inherit(STRING, { variants: [\n      {\n        begin: /'/,\n        end: /'/,\n        contains: [\n          {\n            begin: /''/,\n            relevance: 0\n          }\n        ]\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      { begin: /[^\\s,{}[\\]]+/ }\n    ] });\n    const DATE_RE = \"[0-9]{4}(-[0-9][0-9]){0,2}\";\n    const TIME_RE = \"([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?\";\n    const FRACTION_RE = \"(\\\\.[0-9]*)?\";\n    const ZONE_RE = \"([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\";\n    const TIMESTAMP = {\n      className: \"number\",\n      begin: \"\\\\b\" + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + \"\\\\b\"\n    };\n    const VALUE_CONTAINER = {\n      end: \",\",\n      endsWithParent: true,\n      excludeEnd: true,\n      keywords: LITERALS3,\n      relevance: 0\n    };\n    const OBJECT = {\n      begin: /\\{/,\n      end: /\\}/,\n      contains: [VALUE_CONTAINER],\n      illegal: \"\\\\n\",\n      relevance: 0\n    };\n    const ARRAY = {\n      begin: \"\\\\[\",\n      end: \"\\\\]\",\n      contains: [VALUE_CONTAINER],\n      illegal: \"\\\\n\",\n      relevance: 0\n    };\n    const MODES3 = [\n      KEY,\n      {\n        className: \"meta\",\n        begin: \"^---\\\\s*$\",\n        relevance: 10\n      },\n      {\n        // multi line string\n        // Blocks start with a | or > followed by a newline\n        //\n        // Indentation of subsequent lines must be the same to\n        // be considered part of the block\n        className: \"string\",\n        begin: \"[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*\"\n      },\n      {\n        // Ruby/Rails erb\n        begin: \"<%[%=-]?\",\n        end: \"[%-]?%>\",\n        subLanguage: \"ruby\",\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        // named tags\n        className: \"type\",\n        begin: \"!\\\\w+!\" + URI_CHARACTERS\n      },\n      // https://yaml.org/spec/1.2/spec.html#id2784064\n      {\n        // verbatim tags\n        className: \"type\",\n        begin: \"!<\" + URI_CHARACTERS + \">\"\n      },\n      {\n        // primary tags\n        className: \"type\",\n        begin: \"!\" + URI_CHARACTERS\n      },\n      {\n        // secondary tags\n        className: \"type\",\n        begin: \"!!\" + URI_CHARACTERS\n      },\n      {\n        // fragment id &ref\n        className: \"meta\",\n        begin: \"&\" + hljs.UNDERSCORE_IDENT_RE + \"$\"\n      },\n      {\n        // fragment reference *ref\n        className: \"meta\",\n        begin: \"\\\\*\" + hljs.UNDERSCORE_IDENT_RE + \"$\"\n      },\n      {\n        // array listing\n        className: \"bullet\",\n        // TODO: remove |$ hack when we have proper look-ahead support\n        begin: \"-(?=[ ]|$)\",\n        relevance: 0\n      },\n      hljs.HASH_COMMENT_MODE,\n      {\n        beginKeywords: LITERALS3,\n        keywords: { literal: LITERALS3 }\n      },\n      TIMESTAMP,\n      // numbers are any valid C-style number that\n      // sit isolated from other words\n      {\n        className: \"number\",\n        begin: hljs.C_NUMBER_RE + \"\\\\b\",\n        relevance: 0\n      },\n      OBJECT,\n      ARRAY,\n      SINGLE_QUOTE_STRING,\n      STRING\n    ];\n    const VALUE_MODES = [...MODES3];\n    VALUE_MODES.pop();\n    VALUE_MODES.push(CONTAINER_STRING);\n    VALUE_CONTAINER.contains = VALUE_MODES;\n    return {\n      name: \"YAML\",\n      case_insensitive: true,\n      aliases: [\"yml\"],\n      contains: MODES3\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/markdown.js\n  function markdown(hljs) {\n    const regex = hljs.regex;\n    const INLINE_HTML = {\n      begin: /<\\/?[A-Za-z_]/,\n      end: \">\",\n      subLanguage: \"xml\",\n      relevance: 0\n    };\n    const HORIZONTAL_RULE = {\n      begin: \"^[-\\\\*]{3,}\",\n      end: \"$\"\n    };\n    const CODE = {\n      className: \"code\",\n      variants: [\n        // TODO: fix to allow these to work with sublanguage also\n        { begin: \"(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*\" },\n        { begin: \"(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*\" },\n        // needed to allow markdown as a sublanguage to work\n        {\n          begin: \"```\",\n          end: \"```+[ ]*$\"\n        },\n        {\n          begin: \"~~~\",\n          end: \"~~~+[ ]*$\"\n        },\n        { begin: \"`.+?`\" },\n        {\n          begin: \"(?=^( {4}|\\\\t))\",\n          // use contains to gobble up multiple lines to allow the block to be whatever size\n          // but only have a single open/close tag vs one per line\n          contains: [\n            {\n              begin: \"^( {4}|\\\\t)\",\n              end: \"(\\\\n)$\"\n            }\n          ],\n          relevance: 0\n        }\n      ]\n    };\n    const LIST = {\n      className: \"bullet\",\n      begin: \"^[ \t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)\",\n      end: \"\\\\s+\",\n      excludeEnd: true\n    };\n    const LINK_REFERENCE = {\n      begin: /^\\[[^\\n]+\\]:/,\n      returnBegin: true,\n      contains: [\n        {\n          className: \"symbol\",\n          begin: /\\[/,\n          end: /\\]/,\n          excludeBegin: true,\n          excludeEnd: true\n        },\n        {\n          className: \"link\",\n          begin: /:\\s*/,\n          end: /$/,\n          excludeBegin: true\n        }\n      ]\n    };\n    const URL_SCHEME = /[A-Za-z][A-Za-z0-9+.-]*/;\n    const LINK = {\n      variants: [\n        // too much like nested array access in so many languages\n        // to have any real relevance\n        {\n          begin: /\\[.+?\\]\\[.*?\\]/,\n          relevance: 0\n        },\n        // popular internet URLs\n        {\n          begin: /\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\n          relevance: 2\n        },\n        {\n          begin: regex.concat(/\\[.+?\\]\\(/, URL_SCHEME, /:\\/\\/.*?\\)/),\n          relevance: 2\n        },\n        // relative urls\n        {\n          begin: /\\[.+?\\]\\([./?&#].*?\\)/,\n          relevance: 1\n        },\n        // whatever else, lower relevance (might not be a link at all)\n        {\n          begin: /\\[.*?\\]\\(.*?\\)/,\n          relevance: 0\n        }\n      ],\n      returnBegin: true,\n      contains: [\n        {\n          // empty strings for alt or link text\n          match: /\\[(?=\\])/\n        },\n        {\n          className: \"string\",\n          relevance: 0,\n          begin: \"\\\\[\",\n          end: \"\\\\]\",\n          excludeBegin: true,\n          returnEnd: true\n        },\n        {\n          className: \"link\",\n          relevance: 0,\n          begin: \"\\\\]\\\\(\",\n          end: \"\\\\)\",\n          excludeBegin: true,\n          excludeEnd: true\n        },\n        {\n          className: \"symbol\",\n          relevance: 0,\n          begin: \"\\\\]\\\\[\",\n          end: \"\\\\]\",\n          excludeBegin: true,\n          excludeEnd: true\n        }\n      ]\n    };\n    const BOLD = {\n      className: \"strong\",\n      contains: [],\n      // defined later\n      variants: [\n        {\n          begin: /_{2}(?!\\s)/,\n          end: /_{2}/\n        },\n        {\n          begin: /\\*{2}(?!\\s)/,\n          end: /\\*{2}/\n        }\n      ]\n    };\n    const ITALIC = {\n      className: \"emphasis\",\n      contains: [],\n      // defined later\n      variants: [\n        {\n          begin: /\\*(?![*\\s])/,\n          end: /\\*/\n        },\n        {\n          begin: /_(?![_\\s])/,\n          end: /_/,\n          relevance: 0\n        }\n      ]\n    };\n    const BOLD_WITHOUT_ITALIC = hljs.inherit(BOLD, { contains: [] });\n    const ITALIC_WITHOUT_BOLD = hljs.inherit(ITALIC, { contains: [] });\n    BOLD.contains.push(ITALIC_WITHOUT_BOLD);\n    ITALIC.contains.push(BOLD_WITHOUT_ITALIC);\n    let CONTAINABLE = [\n      INLINE_HTML,\n      LINK\n    ];\n    [\n      BOLD,\n      ITALIC,\n      BOLD_WITHOUT_ITALIC,\n      ITALIC_WITHOUT_BOLD\n    ].forEach((m) => {\n      m.contains = m.contains.concat(CONTAINABLE);\n    });\n    CONTAINABLE = CONTAINABLE.concat(BOLD, ITALIC);\n    const HEADER = {\n      className: \"section\",\n      variants: [\n        {\n          begin: \"^#{1,6}\",\n          end: \"$\",\n          contains: CONTAINABLE\n        },\n        {\n          begin: \"(?=^.+?\\\\n[=-]{2,}$)\",\n          contains: [\n            { begin: \"^[=-]*$\" },\n            {\n              begin: \"^\",\n              end: \"\\\\n\",\n              contains: CONTAINABLE\n            }\n          ]\n        }\n      ]\n    };\n    const BLOCKQUOTE = {\n      className: \"quote\",\n      begin: \"^>\\\\s+\",\n      contains: CONTAINABLE,\n      end: \"$\"\n    };\n    const ENTITY = {\n      //https://spec.commonmark.org/0.31.2/#entity-references\n      scope: \"literal\",\n      match: /&([a-zA-Z0-9]+|#[0-9]{1,7}|#[Xx][0-9a-fA-F]{1,6});/\n    };\n    return {\n      name: \"Markdown\",\n      aliases: [\n        \"md\",\n        \"mkdown\",\n        \"mkd\"\n      ],\n      contains: [\n        HEADER,\n        INLINE_HTML,\n        LIST,\n        BOLD,\n        ITALIC,\n        BLOCKQUOTE,\n        CODE,\n        HORIZONTAL_RULE,\n        LINK,\n        LINK_REFERENCE,\n        ENTITY\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/xml.js\n  function xml(hljs) {\n    const regex = hljs.regex;\n    const TAG_NAME_RE = regex.concat(/[\\p{L}_]/u, regex.optional(/[\\p{L}0-9_.-]*:/u), /[\\p{L}0-9_.-]*/u);\n    const XML_IDENT_RE = /[\\p{L}0-9._:-]+/u;\n    const XML_ENTITIES = {\n      className: \"symbol\",\n      begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n    };\n    const XML_META_KEYWORDS = {\n      begin: /\\s/,\n      contains: [\n        {\n          className: \"keyword\",\n          begin: /#?[a-z_][a-z1-9_-]+/,\n          illegal: /\\n/\n        }\n      ]\n    };\n    const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n      begin: /\\(/,\n      end: /\\)/\n    });\n    const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, { className: \"string\" });\n    const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, { className: \"string\" });\n    const TAG_INTERNALS = {\n      endsWithParent: true,\n      illegal: /</,\n      relevance: 0,\n      contains: [\n        {\n          className: \"attr\",\n          begin: XML_IDENT_RE,\n          relevance: 0\n        },\n        {\n          begin: /=\\s*/,\n          relevance: 0,\n          contains: [\n            {\n              className: \"string\",\n              endsParent: true,\n              variants: [\n                {\n                  begin: /\"/,\n                  end: /\"/,\n                  contains: [XML_ENTITIES]\n                },\n                {\n                  begin: /'/,\n                  end: /'/,\n                  contains: [XML_ENTITIES]\n                },\n                { begin: /[^\\s\"'=<>`]+/ }\n              ]\n            }\n          ]\n        }\n      ]\n    };\n    return {\n      name: \"HTML, XML\",\n      aliases: [\n        \"html\",\n        \"xhtml\",\n        \"rss\",\n        \"atom\",\n        \"xjb\",\n        \"xsd\",\n        \"xsl\",\n        \"plist\",\n        \"wsf\",\n        \"svg\"\n      ],\n      case_insensitive: true,\n      unicodeRegex: true,\n      contains: [\n        {\n          className: \"meta\",\n          begin: /<![a-z]/,\n          end: />/,\n          relevance: 10,\n          contains: [\n            XML_META_KEYWORDS,\n            QUOTE_META_STRING_MODE,\n            APOS_META_STRING_MODE,\n            XML_META_PAR_KEYWORDS,\n            {\n              begin: /\\[/,\n              end: /\\]/,\n              contains: [\n                {\n                  className: \"meta\",\n                  begin: /<![a-z]/,\n                  end: />/,\n                  contains: [\n                    XML_META_KEYWORDS,\n                    XML_META_PAR_KEYWORDS,\n                    QUOTE_META_STRING_MODE,\n                    APOS_META_STRING_MODE\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        hljs.COMMENT(\n          /<!--/,\n          /-->/,\n          { relevance: 10 }\n        ),\n        {\n          begin: /<!\\[CDATA\\[/,\n          end: /\\]\\]>/,\n          relevance: 10\n        },\n        XML_ENTITIES,\n        // xml processing instructions\n        {\n          className: \"meta\",\n          end: /\\?>/,\n          variants: [\n            {\n              begin: /<\\?xml/,\n              relevance: 10,\n              contains: [\n                QUOTE_META_STRING_MODE\n              ]\n            },\n            {\n              begin: /<\\?[a-z][a-z0-9]+/\n            }\n          ]\n        },\n        {\n          className: \"tag\",\n          /*\n          The lookahead pattern (?=...) ensures that 'begin' only matches\n          '<style' as a single word, followed by a whitespace or an\n          ending bracket.\n          */\n          begin: /<style(?=\\s|>)/,\n          end: />/,\n          keywords: { name: \"style\" },\n          contains: [TAG_INTERNALS],\n          starts: {\n            end: /<\\/style>/,\n            returnEnd: true,\n            subLanguage: [\n              \"css\",\n              \"xml\"\n            ]\n          }\n        },\n        {\n          className: \"tag\",\n          // See the comment in the <style tag about the lookahead pattern\n          begin: /<script(?=\\s|>)/,\n          end: />/,\n          keywords: { name: \"script\" },\n          contains: [TAG_INTERNALS],\n          starts: {\n            end: /<\\/script>/,\n            returnEnd: true,\n            subLanguage: [\n              \"javascript\",\n              \"handlebars\",\n              \"xml\"\n            ]\n          }\n        },\n        // we need this for now for jSX\n        {\n          className: \"tag\",\n          begin: /<>|<\\/>/\n        },\n        // open tag\n        {\n          className: \"tag\",\n          begin: regex.concat(\n            /</,\n            regex.lookahead(regex.concat(\n              TAG_NAME_RE,\n              // <tag/>\n              // <tag>\n              // <tag ...\n              regex.either(/\\/>/, />/, /\\s/)\n            ))\n          ),\n          end: /\\/?>/,\n          contains: [\n            {\n              className: \"name\",\n              begin: TAG_NAME_RE,\n              relevance: 0,\n              starts: TAG_INTERNALS\n            }\n          ]\n        },\n        // close tag\n        {\n          className: \"tag\",\n          begin: regex.concat(\n            /<\\//,\n            regex.lookahead(regex.concat(\n              TAG_NAME_RE,\n              />/\n            ))\n          ),\n          contains: [\n            {\n              className: \"name\",\n              begin: TAG_NAME_RE,\n              relevance: 0\n            },\n            {\n              begin: />/,\n              relevance: 0,\n              endsParent: true\n            }\n          ]\n        }\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/css.js\n  var MODES = (hljs) => {\n    return {\n      IMPORTANT: {\n        scope: \"meta\",\n        begin: \"!important\"\n      },\n      BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\n      HEXCOLOR: {\n        scope: \"number\",\n        begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n      },\n      FUNCTION_DISPATCH: {\n        className: \"built_in\",\n        begin: /[\\w-]+(?=\\()/\n      },\n      ATTRIBUTE_SELECTOR_MODE: {\n        scope: \"selector-attr\",\n        begin: /\\[/,\n        end: /\\]/,\n        illegal: \"$\",\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE\n        ]\n      },\n      CSS_NUMBER_MODE: {\n        scope: \"number\",\n        begin: hljs.NUMBER_RE + \"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?\",\n        relevance: 0\n      },\n      CSS_VARIABLE: {\n        className: \"attr\",\n        begin: /--[A-Za-z_][A-Za-z0-9_-]*/\n      }\n    };\n  };\n  var HTML_TAGS = [\n    \"a\",\n    \"abbr\",\n    \"address\",\n    \"article\",\n    \"aside\",\n    \"audio\",\n    \"b\",\n    \"blockquote\",\n    \"body\",\n    \"button\",\n    \"canvas\",\n    \"caption\",\n    \"cite\",\n    \"code\",\n    \"dd\",\n    \"del\",\n    \"details\",\n    \"dfn\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"em\",\n    \"fieldset\",\n    \"figcaption\",\n    \"figure\",\n    \"footer\",\n    \"form\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"header\",\n    \"hgroup\",\n    \"html\",\n    \"i\",\n    \"iframe\",\n    \"img\",\n    \"input\",\n    \"ins\",\n    \"kbd\",\n    \"label\",\n    \"legend\",\n    \"li\",\n    \"main\",\n    \"mark\",\n    \"menu\",\n    \"nav\",\n    \"object\",\n    \"ol\",\n    \"optgroup\",\n    \"option\",\n    \"p\",\n    \"picture\",\n    \"q\",\n    \"quote\",\n    \"samp\",\n    \"section\",\n    \"select\",\n    \"source\",\n    \"span\",\n    \"strong\",\n    \"summary\",\n    \"sup\",\n    \"table\",\n    \"tbody\",\n    \"td\",\n    \"textarea\",\n    \"tfoot\",\n    \"th\",\n    \"thead\",\n    \"time\",\n    \"tr\",\n    \"ul\",\n    \"var\",\n    \"video\"\n  ];\n  var SVG_TAGS = [\n    \"defs\",\n    \"g\",\n    \"marker\",\n    \"mask\",\n    \"pattern\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feFlood\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"feSpecularLighting\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"stop\",\n    \"circle\",\n    \"ellipse\",\n    \"image\",\n    \"line\",\n    \"path\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"text\",\n    \"use\",\n    \"textPath\",\n    \"tspan\",\n    \"foreignObject\",\n    \"clipPath\"\n  ];\n  var TAGS = [\n    ...HTML_TAGS,\n    ...SVG_TAGS\n  ];\n  var MEDIA_FEATURES = [\n    \"any-hover\",\n    \"any-pointer\",\n    \"aspect-ratio\",\n    \"color\",\n    \"color-gamut\",\n    \"color-index\",\n    \"device-aspect-ratio\",\n    \"device-height\",\n    \"device-width\",\n    \"display-mode\",\n    \"forced-colors\",\n    \"grid\",\n    \"height\",\n    \"hover\",\n    \"inverted-colors\",\n    \"monochrome\",\n    \"orientation\",\n    \"overflow-block\",\n    \"overflow-inline\",\n    \"pointer\",\n    \"prefers-color-scheme\",\n    \"prefers-contrast\",\n    \"prefers-reduced-motion\",\n    \"prefers-reduced-transparency\",\n    \"resolution\",\n    \"scan\",\n    \"scripting\",\n    \"update\",\n    \"width\",\n    // TODO: find a better solution?\n    \"min-width\",\n    \"max-width\",\n    \"min-height\",\n    \"max-height\"\n  ].sort().reverse();\n  var PSEUDO_CLASSES = [\n    \"active\",\n    \"any-link\",\n    \"blank\",\n    \"checked\",\n    \"current\",\n    \"default\",\n    \"defined\",\n    \"dir\",\n    // dir()\n    \"disabled\",\n    \"drop\",\n    \"empty\",\n    \"enabled\",\n    \"first\",\n    \"first-child\",\n    \"first-of-type\",\n    \"fullscreen\",\n    \"future\",\n    \"focus\",\n    \"focus-visible\",\n    \"focus-within\",\n    \"has\",\n    // has()\n    \"host\",\n    // host or host()\n    \"host-context\",\n    // host-context()\n    \"hover\",\n    \"indeterminate\",\n    \"in-range\",\n    \"invalid\",\n    \"is\",\n    // is()\n    \"lang\",\n    // lang()\n    \"last-child\",\n    \"last-of-type\",\n    \"left\",\n    \"link\",\n    \"local-link\",\n    \"not\",\n    // not()\n    \"nth-child\",\n    // nth-child()\n    \"nth-col\",\n    // nth-col()\n    \"nth-last-child\",\n    // nth-last-child()\n    \"nth-last-col\",\n    // nth-last-col()\n    \"nth-last-of-type\",\n    //nth-last-of-type()\n    \"nth-of-type\",\n    //nth-of-type()\n    \"only-child\",\n    \"only-of-type\",\n    \"optional\",\n    \"out-of-range\",\n    \"past\",\n    \"placeholder-shown\",\n    \"read-only\",\n    \"read-write\",\n    \"required\",\n    \"right\",\n    \"root\",\n    \"scope\",\n    \"target\",\n    \"target-within\",\n    \"user-invalid\",\n    \"valid\",\n    \"visited\",\n    \"where\"\n    // where()\n  ].sort().reverse();\n  var PSEUDO_ELEMENTS = [\n    \"after\",\n    \"backdrop\",\n    \"before\",\n    \"cue\",\n    \"cue-region\",\n    \"first-letter\",\n    \"first-line\",\n    \"grammar-error\",\n    \"marker\",\n    \"part\",\n    \"placeholder\",\n    \"selection\",\n    \"slotted\",\n    \"spelling-error\"\n  ].sort().reverse();\n  var ATTRIBUTES = [\n    \"accent-color\",\n    \"align-content\",\n    \"align-items\",\n    \"align-self\",\n    \"alignment-baseline\",\n    \"all\",\n    \"anchor-name\",\n    \"animation\",\n    \"animation-composition\",\n    \"animation-delay\",\n    \"animation-direction\",\n    \"animation-duration\",\n    \"animation-fill-mode\",\n    \"animation-iteration-count\",\n    \"animation-name\",\n    \"animation-play-state\",\n    \"animation-range\",\n    \"animation-range-end\",\n    \"animation-range-start\",\n    \"animation-timeline\",\n    \"animation-timing-function\",\n    \"appearance\",\n    \"aspect-ratio\",\n    \"backdrop-filter\",\n    \"backface-visibility\",\n    \"background\",\n    \"background-attachment\",\n    \"background-blend-mode\",\n    \"background-clip\",\n    \"background-color\",\n    \"background-image\",\n    \"background-origin\",\n    \"background-position\",\n    \"background-position-x\",\n    \"background-position-y\",\n    \"background-repeat\",\n    \"background-size\",\n    \"baseline-shift\",\n    \"block-size\",\n    \"border\",\n    \"border-block\",\n    \"border-block-color\",\n    \"border-block-end\",\n    \"border-block-end-color\",\n    \"border-block-end-style\",\n    \"border-block-end-width\",\n    \"border-block-start\",\n    \"border-block-start-color\",\n    \"border-block-start-style\",\n    \"border-block-start-width\",\n    \"border-block-style\",\n    \"border-block-width\",\n    \"border-bottom\",\n    \"border-bottom-color\",\n    \"border-bottom-left-radius\",\n    \"border-bottom-right-radius\",\n    \"border-bottom-style\",\n    \"border-bottom-width\",\n    \"border-collapse\",\n    \"border-color\",\n    \"border-end-end-radius\",\n    \"border-end-start-radius\",\n    \"border-image\",\n    \"border-image-outset\",\n    \"border-image-repeat\",\n    \"border-image-slice\",\n    \"border-image-source\",\n    \"border-image-width\",\n    \"border-inline\",\n    \"border-inline-color\",\n    \"border-inline-end\",\n    \"border-inline-end-color\",\n    \"border-inline-end-style\",\n    \"border-inline-end-width\",\n    \"border-inline-start\",\n    \"border-inline-start-color\",\n    \"border-inline-start-style\",\n    \"border-inline-start-width\",\n    \"border-inline-style\",\n    \"border-inline-width\",\n    \"border-left\",\n    \"border-left-color\",\n    \"border-left-style\",\n    \"border-left-width\",\n    \"border-radius\",\n    \"border-right\",\n    \"border-right-color\",\n    \"border-right-style\",\n    \"border-right-width\",\n    \"border-spacing\",\n    \"border-start-end-radius\",\n    \"border-start-start-radius\",\n    \"border-style\",\n    \"border-top\",\n    \"border-top-color\",\n    \"border-top-left-radius\",\n    \"border-top-right-radius\",\n    \"border-top-style\",\n    \"border-top-width\",\n    \"border-width\",\n    \"bottom\",\n    \"box-align\",\n    \"box-decoration-break\",\n    \"box-direction\",\n    \"box-flex\",\n    \"box-flex-group\",\n    \"box-lines\",\n    \"box-ordinal-group\",\n    \"box-orient\",\n    \"box-pack\",\n    \"box-shadow\",\n    \"box-sizing\",\n    \"break-after\",\n    \"break-before\",\n    \"break-inside\",\n    \"caption-side\",\n    \"caret-color\",\n    \"clear\",\n    \"clip\",\n    \"clip-path\",\n    \"clip-rule\",\n    \"color\",\n    \"color-interpolation\",\n    \"color-interpolation-filters\",\n    \"color-profile\",\n    \"color-rendering\",\n    \"color-scheme\",\n    \"column-count\",\n    \"column-fill\",\n    \"column-gap\",\n    \"column-rule\",\n    \"column-rule-color\",\n    \"column-rule-style\",\n    \"column-rule-width\",\n    \"column-span\",\n    \"column-width\",\n    \"columns\",\n    \"contain\",\n    \"contain-intrinsic-block-size\",\n    \"contain-intrinsic-height\",\n    \"contain-intrinsic-inline-size\",\n    \"contain-intrinsic-size\",\n    \"contain-intrinsic-width\",\n    \"container\",\n    \"container-name\",\n    \"container-type\",\n    \"content\",\n    \"content-visibility\",\n    \"counter-increment\",\n    \"counter-reset\",\n    \"counter-set\",\n    \"cue\",\n    \"cue-after\",\n    \"cue-before\",\n    \"cursor\",\n    \"cx\",\n    \"cy\",\n    \"direction\",\n    \"display\",\n    \"dominant-baseline\",\n    \"empty-cells\",\n    \"enable-background\",\n    \"field-sizing\",\n    \"fill\",\n    \"fill-opacity\",\n    \"fill-rule\",\n    \"filter\",\n    \"flex\",\n    \"flex-basis\",\n    \"flex-direction\",\n    \"flex-flow\",\n    \"flex-grow\",\n    \"flex-shrink\",\n    \"flex-wrap\",\n    \"float\",\n    \"flood-color\",\n    \"flood-opacity\",\n    \"flow\",\n    \"font\",\n    \"font-display\",\n    \"font-family\",\n    \"font-feature-settings\",\n    \"font-kerning\",\n    \"font-language-override\",\n    \"font-optical-sizing\",\n    \"font-palette\",\n    \"font-size\",\n    \"font-size-adjust\",\n    \"font-smooth\",\n    \"font-smoothing\",\n    \"font-stretch\",\n    \"font-style\",\n    \"font-synthesis\",\n    \"font-synthesis-position\",\n    \"font-synthesis-small-caps\",\n    \"font-synthesis-style\",\n    \"font-synthesis-weight\",\n    \"font-variant\",\n    \"font-variant-alternates\",\n    \"font-variant-caps\",\n    \"font-variant-east-asian\",\n    \"font-variant-emoji\",\n    \"font-variant-ligatures\",\n    \"font-variant-numeric\",\n    \"font-variant-position\",\n    \"font-variation-settings\",\n    \"font-weight\",\n    \"forced-color-adjust\",\n    \"gap\",\n    \"glyph-orientation-horizontal\",\n    \"glyph-orientation-vertical\",\n    \"grid\",\n    \"grid-area\",\n    \"grid-auto-columns\",\n    \"grid-auto-flow\",\n    \"grid-auto-rows\",\n    \"grid-column\",\n    \"grid-column-end\",\n    \"grid-column-start\",\n    \"grid-gap\",\n    \"grid-row\",\n    \"grid-row-end\",\n    \"grid-row-start\",\n    \"grid-template\",\n    \"grid-template-areas\",\n    \"grid-template-columns\",\n    \"grid-template-rows\",\n    \"hanging-punctuation\",\n    \"height\",\n    \"hyphenate-character\",\n    \"hyphenate-limit-chars\",\n    \"hyphens\",\n    \"icon\",\n    \"image-orientation\",\n    \"image-rendering\",\n    \"image-resolution\",\n    \"ime-mode\",\n    \"initial-letter\",\n    \"initial-letter-align\",\n    \"inline-size\",\n    \"inset\",\n    \"inset-area\",\n    \"inset-block\",\n    \"inset-block-end\",\n    \"inset-block-start\",\n    \"inset-inline\",\n    \"inset-inline-end\",\n    \"inset-inline-start\",\n    \"isolation\",\n    \"justify-content\",\n    \"justify-items\",\n    \"justify-self\",\n    \"kerning\",\n    \"left\",\n    \"letter-spacing\",\n    \"lighting-color\",\n    \"line-break\",\n    \"line-height\",\n    \"line-height-step\",\n    \"list-style\",\n    \"list-style-image\",\n    \"list-style-position\",\n    \"list-style-type\",\n    \"margin\",\n    \"margin-block\",\n    \"margin-block-end\",\n    \"margin-block-start\",\n    \"margin-bottom\",\n    \"margin-inline\",\n    \"margin-inline-end\",\n    \"margin-inline-start\",\n    \"margin-left\",\n    \"margin-right\",\n    \"margin-top\",\n    \"margin-trim\",\n    \"marker\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"marker-start\",\n    \"marks\",\n    \"mask\",\n    \"mask-border\",\n    \"mask-border-mode\",\n    \"mask-border-outset\",\n    \"mask-border-repeat\",\n    \"mask-border-slice\",\n    \"mask-border-source\",\n    \"mask-border-width\",\n    \"mask-clip\",\n    \"mask-composite\",\n    \"mask-image\",\n    \"mask-mode\",\n    \"mask-origin\",\n    \"mask-position\",\n    \"mask-repeat\",\n    \"mask-size\",\n    \"mask-type\",\n    \"masonry-auto-flow\",\n    \"math-depth\",\n    \"math-shift\",\n    \"math-style\",\n    \"max-block-size\",\n    \"max-height\",\n    \"max-inline-size\",\n    \"max-width\",\n    \"min-block-size\",\n    \"min-height\",\n    \"min-inline-size\",\n    \"min-width\",\n    \"mix-blend-mode\",\n    \"nav-down\",\n    \"nav-index\",\n    \"nav-left\",\n    \"nav-right\",\n    \"nav-up\",\n    \"none\",\n    \"normal\",\n    \"object-fit\",\n    \"object-position\",\n    \"offset\",\n    \"offset-anchor\",\n    \"offset-distance\",\n    \"offset-path\",\n    \"offset-position\",\n    \"offset-rotate\",\n    \"opacity\",\n    \"order\",\n    \"orphans\",\n    \"outline\",\n    \"outline-color\",\n    \"outline-offset\",\n    \"outline-style\",\n    \"outline-width\",\n    \"overflow\",\n    \"overflow-anchor\",\n    \"overflow-block\",\n    \"overflow-clip-margin\",\n    \"overflow-inline\",\n    \"overflow-wrap\",\n    \"overflow-x\",\n    \"overflow-y\",\n    \"overlay\",\n    \"overscroll-behavior\",\n    \"overscroll-behavior-block\",\n    \"overscroll-behavior-inline\",\n    \"overscroll-behavior-x\",\n    \"overscroll-behavior-y\",\n    \"padding\",\n    \"padding-block\",\n    \"padding-block-end\",\n    \"padding-block-start\",\n    \"padding-bottom\",\n    \"padding-inline\",\n    \"padding-inline-end\",\n    \"padding-inline-start\",\n    \"padding-left\",\n    \"padding-right\",\n    \"padding-top\",\n    \"page\",\n    \"page-break-after\",\n    \"page-break-before\",\n    \"page-break-inside\",\n    \"paint-order\",\n    \"pause\",\n    \"pause-after\",\n    \"pause-before\",\n    \"perspective\",\n    \"perspective-origin\",\n    \"place-content\",\n    \"place-items\",\n    \"place-self\",\n    \"pointer-events\",\n    \"position\",\n    \"position-anchor\",\n    \"position-visibility\",\n    \"print-color-adjust\",\n    \"quotes\",\n    \"r\",\n    \"resize\",\n    \"rest\",\n    \"rest-after\",\n    \"rest-before\",\n    \"right\",\n    \"rotate\",\n    \"row-gap\",\n    \"ruby-align\",\n    \"ruby-position\",\n    \"scale\",\n    \"scroll-behavior\",\n    \"scroll-margin\",\n    \"scroll-margin-block\",\n    \"scroll-margin-block-end\",\n    \"scroll-margin-block-start\",\n    \"scroll-margin-bottom\",\n    \"scroll-margin-inline\",\n    \"scroll-margin-inline-end\",\n    \"scroll-margin-inline-start\",\n    \"scroll-margin-left\",\n    \"scroll-margin-right\",\n    \"scroll-margin-top\",\n    \"scroll-padding\",\n    \"scroll-padding-block\",\n    \"scroll-padding-block-end\",\n    \"scroll-padding-block-start\",\n    \"scroll-padding-bottom\",\n    \"scroll-padding-inline\",\n    \"scroll-padding-inline-end\",\n    \"scroll-padding-inline-start\",\n    \"scroll-padding-left\",\n    \"scroll-padding-right\",\n    \"scroll-padding-top\",\n    \"scroll-snap-align\",\n    \"scroll-snap-stop\",\n    \"scroll-snap-type\",\n    \"scroll-timeline\",\n    \"scroll-timeline-axis\",\n    \"scroll-timeline-name\",\n    \"scrollbar-color\",\n    \"scrollbar-gutter\",\n    \"scrollbar-width\",\n    \"shape-image-threshold\",\n    \"shape-margin\",\n    \"shape-outside\",\n    \"shape-rendering\",\n    \"speak\",\n    \"speak-as\",\n    \"src\",\n    // @font-face\n    \"stop-color\",\n    \"stop-opacity\",\n    \"stroke\",\n    \"stroke-dasharray\",\n    \"stroke-dashoffset\",\n    \"stroke-linecap\",\n    \"stroke-linejoin\",\n    \"stroke-miterlimit\",\n    \"stroke-opacity\",\n    \"stroke-width\",\n    \"tab-size\",\n    \"table-layout\",\n    \"text-align\",\n    \"text-align-all\",\n    \"text-align-last\",\n    \"text-anchor\",\n    \"text-combine-upright\",\n    \"text-decoration\",\n    \"text-decoration-color\",\n    \"text-decoration-line\",\n    \"text-decoration-skip\",\n    \"text-decoration-skip-ink\",\n    \"text-decoration-style\",\n    \"text-decoration-thickness\",\n    \"text-emphasis\",\n    \"text-emphasis-color\",\n    \"text-emphasis-position\",\n    \"text-emphasis-style\",\n    \"text-indent\",\n    \"text-justify\",\n    \"text-orientation\",\n    \"text-overflow\",\n    \"text-rendering\",\n    \"text-shadow\",\n    \"text-size-adjust\",\n    \"text-transform\",\n    \"text-underline-offset\",\n    \"text-underline-position\",\n    \"text-wrap\",\n    \"text-wrap-mode\",\n    \"text-wrap-style\",\n    \"timeline-scope\",\n    \"top\",\n    \"touch-action\",\n    \"transform\",\n    \"transform-box\",\n    \"transform-origin\",\n    \"transform-style\",\n    \"transition\",\n    \"transition-behavior\",\n    \"transition-delay\",\n    \"transition-duration\",\n    \"transition-property\",\n    \"transition-timing-function\",\n    \"translate\",\n    \"unicode-bidi\",\n    \"user-modify\",\n    \"user-select\",\n    \"vector-effect\",\n    \"vertical-align\",\n    \"view-timeline\",\n    \"view-timeline-axis\",\n    \"view-timeline-inset\",\n    \"view-timeline-name\",\n    \"view-transition-name\",\n    \"visibility\",\n    \"voice-balance\",\n    \"voice-duration\",\n    \"voice-family\",\n    \"voice-pitch\",\n    \"voice-range\",\n    \"voice-rate\",\n    \"voice-stress\",\n    \"voice-volume\",\n    \"white-space\",\n    \"white-space-collapse\",\n    \"widows\",\n    \"width\",\n    \"will-change\",\n    \"word-break\",\n    \"word-spacing\",\n    \"word-wrap\",\n    \"writing-mode\",\n    \"x\",\n    \"y\",\n    \"z-index\",\n    \"zoom\"\n  ].sort().reverse();\n  function css(hljs) {\n    const regex = hljs.regex;\n    const modes = MODES(hljs);\n    const VENDOR_PREFIX = { begin: /-(webkit|moz|ms|o)-(?=[a-z])/ };\n    const AT_MODIFIERS = \"and or not only\";\n    const AT_PROPERTY_RE = /@-?\\w[\\w]*(-\\w+)*/;\n    const IDENT_RE3 = \"[a-zA-Z-][a-zA-Z0-9_-]*\";\n    const STRINGS = [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ];\n    return {\n      name: \"CSS\",\n      case_insensitive: true,\n      illegal: /[=|'\\$]/,\n      keywords: { keyframePosition: \"from to\" },\n      classNameAliases: {\n        // for visual continuity with `tag {}` and because we\n        // don't have a great class for this?\n        keyframePosition: \"selector-tag\"\n      },\n      contains: [\n        modes.BLOCK_COMMENT,\n        VENDOR_PREFIX,\n        // to recognize keyframe 40% etc which are outside the scope of our\n        // attribute value mode\n        modes.CSS_NUMBER_MODE,\n        {\n          className: \"selector-id\",\n          begin: /#[A-Za-z0-9_-]+/,\n          relevance: 0\n        },\n        {\n          className: \"selector-class\",\n          begin: \"\\\\.\" + IDENT_RE3,\n          relevance: 0\n        },\n        modes.ATTRIBUTE_SELECTOR_MODE,\n        {\n          className: \"selector-pseudo\",\n          variants: [\n            { begin: \":(\" + PSEUDO_CLASSES.join(\"|\") + \")\" },\n            { begin: \":(:)?(\" + PSEUDO_ELEMENTS.join(\"|\") + \")\" }\n          ]\n        },\n        // we may actually need this (12/2020)\n        // { // pseudo-selector params\n        //   begin: /\\(/,\n        //   end: /\\)/,\n        //   contains: [ hljs.CSS_NUMBER_MODE ]\n        // },\n        modes.CSS_VARIABLE,\n        {\n          className: \"attribute\",\n          begin: \"\\\\b(\" + ATTRIBUTES.join(\"|\") + \")\\\\b\"\n        },\n        // attribute values\n        {\n          begin: /:/,\n          end: /[;}{]/,\n          contains: [\n            modes.BLOCK_COMMENT,\n            modes.HEXCOLOR,\n            modes.IMPORTANT,\n            modes.CSS_NUMBER_MODE,\n            ...STRINGS,\n            // needed to highlight these as strings and to avoid issues with\n            // illegal characters that might be inside urls that would tigger the\n            // languages illegal stack\n            {\n              begin: /(url|data-uri)\\(/,\n              end: /\\)/,\n              relevance: 0,\n              // from keywords\n              keywords: { built_in: \"url data-uri\" },\n              contains: [\n                ...STRINGS,\n                {\n                  className: \"string\",\n                  // any character other than `)` as in `url()` will be the start\n                  // of a string, which ends with `)` (from the parent mode)\n                  begin: /[^)]/,\n                  endsWithParent: true,\n                  excludeEnd: true\n                }\n              ]\n            },\n            modes.FUNCTION_DISPATCH\n          ]\n        },\n        {\n          begin: regex.lookahead(/@/),\n          end: \"[{;]\",\n          relevance: 0,\n          illegal: /:/,\n          // break on Less variables @var: ...\n          contains: [\n            {\n              className: \"keyword\",\n              begin: AT_PROPERTY_RE\n            },\n            {\n              begin: /\\s/,\n              endsWithParent: true,\n              excludeEnd: true,\n              relevance: 0,\n              keywords: {\n                $pattern: /[a-z-]+/,\n                keyword: AT_MODIFIERS,\n                attribute: MEDIA_FEATURES.join(\" \")\n              },\n              contains: [\n                {\n                  begin: /[a-z-]+(?=:)/,\n                  className: \"attribute\"\n                },\n                ...STRINGS,\n                modes.CSS_NUMBER_MODE\n              ]\n            }\n          ]\n        },\n        {\n          className: \"selector-tag\",\n          begin: \"\\\\b(\" + TAGS.join(\"|\") + \")\\\\b\"\n        }\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/scss.js\n  var MODES2 = (hljs) => {\n    return {\n      IMPORTANT: {\n        scope: \"meta\",\n        begin: \"!important\"\n      },\n      BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\n      HEXCOLOR: {\n        scope: \"number\",\n        begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n      },\n      FUNCTION_DISPATCH: {\n        className: \"built_in\",\n        begin: /[\\w-]+(?=\\()/\n      },\n      ATTRIBUTE_SELECTOR_MODE: {\n        scope: \"selector-attr\",\n        begin: /\\[/,\n        end: /\\]/,\n        illegal: \"$\",\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE\n        ]\n      },\n      CSS_NUMBER_MODE: {\n        scope: \"number\",\n        begin: hljs.NUMBER_RE + \"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?\",\n        relevance: 0\n      },\n      CSS_VARIABLE: {\n        className: \"attr\",\n        begin: /--[A-Za-z_][A-Za-z0-9_-]*/\n      }\n    };\n  };\n  var HTML_TAGS2 = [\n    \"a\",\n    \"abbr\",\n    \"address\",\n    \"article\",\n    \"aside\",\n    \"audio\",\n    \"b\",\n    \"blockquote\",\n    \"body\",\n    \"button\",\n    \"canvas\",\n    \"caption\",\n    \"cite\",\n    \"code\",\n    \"dd\",\n    \"del\",\n    \"details\",\n    \"dfn\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"em\",\n    \"fieldset\",\n    \"figcaption\",\n    \"figure\",\n    \"footer\",\n    \"form\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"header\",\n    \"hgroup\",\n    \"html\",\n    \"i\",\n    \"iframe\",\n    \"img\",\n    \"input\",\n    \"ins\",\n    \"kbd\",\n    \"label\",\n    \"legend\",\n    \"li\",\n    \"main\",\n    \"mark\",\n    \"menu\",\n    \"nav\",\n    \"object\",\n    \"ol\",\n    \"optgroup\",\n    \"option\",\n    \"p\",\n    \"picture\",\n    \"q\",\n    \"quote\",\n    \"samp\",\n    \"section\",\n    \"select\",\n    \"source\",\n    \"span\",\n    \"strong\",\n    \"summary\",\n    \"sup\",\n    \"table\",\n    \"tbody\",\n    \"td\",\n    \"textarea\",\n    \"tfoot\",\n    \"th\",\n    \"thead\",\n    \"time\",\n    \"tr\",\n    \"ul\",\n    \"var\",\n    \"video\"\n  ];\n  var SVG_TAGS2 = [\n    \"defs\",\n    \"g\",\n    \"marker\",\n    \"mask\",\n    \"pattern\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feFlood\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"feSpecularLighting\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"stop\",\n    \"circle\",\n    \"ellipse\",\n    \"image\",\n    \"line\",\n    \"path\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"text\",\n    \"use\",\n    \"textPath\",\n    \"tspan\",\n    \"foreignObject\",\n    \"clipPath\"\n  ];\n  var TAGS2 = [\n    ...HTML_TAGS2,\n    ...SVG_TAGS2\n  ];\n  var MEDIA_FEATURES2 = [\n    \"any-hover\",\n    \"any-pointer\",\n    \"aspect-ratio\",\n    \"color\",\n    \"color-gamut\",\n    \"color-index\",\n    \"device-aspect-ratio\",\n    \"device-height\",\n    \"device-width\",\n    \"display-mode\",\n    \"forced-colors\",\n    \"grid\",\n    \"height\",\n    \"hover\",\n    \"inverted-colors\",\n    \"monochrome\",\n    \"orientation\",\n    \"overflow-block\",\n    \"overflow-inline\",\n    \"pointer\",\n    \"prefers-color-scheme\",\n    \"prefers-contrast\",\n    \"prefers-reduced-motion\",\n    \"prefers-reduced-transparency\",\n    \"resolution\",\n    \"scan\",\n    \"scripting\",\n    \"update\",\n    \"width\",\n    // TODO: find a better solution?\n    \"min-width\",\n    \"max-width\",\n    \"min-height\",\n    \"max-height\"\n  ].sort().reverse();\n  var PSEUDO_CLASSES2 = [\n    \"active\",\n    \"any-link\",\n    \"blank\",\n    \"checked\",\n    \"current\",\n    \"default\",\n    \"defined\",\n    \"dir\",\n    // dir()\n    \"disabled\",\n    \"drop\",\n    \"empty\",\n    \"enabled\",\n    \"first\",\n    \"first-child\",\n    \"first-of-type\",\n    \"fullscreen\",\n    \"future\",\n    \"focus\",\n    \"focus-visible\",\n    \"focus-within\",\n    \"has\",\n    // has()\n    \"host\",\n    // host or host()\n    \"host-context\",\n    // host-context()\n    \"hover\",\n    \"indeterminate\",\n    \"in-range\",\n    \"invalid\",\n    \"is\",\n    // is()\n    \"lang\",\n    // lang()\n    \"last-child\",\n    \"last-of-type\",\n    \"left\",\n    \"link\",\n    \"local-link\",\n    \"not\",\n    // not()\n    \"nth-child\",\n    // nth-child()\n    \"nth-col\",\n    // nth-col()\n    \"nth-last-child\",\n    // nth-last-child()\n    \"nth-last-col\",\n    // nth-last-col()\n    \"nth-last-of-type\",\n    //nth-last-of-type()\n    \"nth-of-type\",\n    //nth-of-type()\n    \"only-child\",\n    \"only-of-type\",\n    \"optional\",\n    \"out-of-range\",\n    \"past\",\n    \"placeholder-shown\",\n    \"read-only\",\n    \"read-write\",\n    \"required\",\n    \"right\",\n    \"root\",\n    \"scope\",\n    \"target\",\n    \"target-within\",\n    \"user-invalid\",\n    \"valid\",\n    \"visited\",\n    \"where\"\n    // where()\n  ].sort().reverse();\n  var PSEUDO_ELEMENTS2 = [\n    \"after\",\n    \"backdrop\",\n    \"before\",\n    \"cue\",\n    \"cue-region\",\n    \"first-letter\",\n    \"first-line\",\n    \"grammar-error\",\n    \"marker\",\n    \"part\",\n    \"placeholder\",\n    \"selection\",\n    \"slotted\",\n    \"spelling-error\"\n  ].sort().reverse();\n  var ATTRIBUTES2 = [\n    \"accent-color\",\n    \"align-content\",\n    \"align-items\",\n    \"align-self\",\n    \"alignment-baseline\",\n    \"all\",\n    \"anchor-name\",\n    \"animation\",\n    \"animation-composition\",\n    \"animation-delay\",\n    \"animation-direction\",\n    \"animation-duration\",\n    \"animation-fill-mode\",\n    \"animation-iteration-count\",\n    \"animation-name\",\n    \"animation-play-state\",\n    \"animation-range\",\n    \"animation-range-end\",\n    \"animation-range-start\",\n    \"animation-timeline\",\n    \"animation-timing-function\",\n    \"appearance\",\n    \"aspect-ratio\",\n    \"backdrop-filter\",\n    \"backface-visibility\",\n    \"background\",\n    \"background-attachment\",\n    \"background-blend-mode\",\n    \"background-clip\",\n    \"background-color\",\n    \"background-image\",\n    \"background-origin\",\n    \"background-position\",\n    \"background-position-x\",\n    \"background-position-y\",\n    \"background-repeat\",\n    \"background-size\",\n    \"baseline-shift\",\n    \"block-size\",\n    \"border\",\n    \"border-block\",\n    \"border-block-color\",\n    \"border-block-end\",\n    \"border-block-end-color\",\n    \"border-block-end-style\",\n    \"border-block-end-width\",\n    \"border-block-start\",\n    \"border-block-start-color\",\n    \"border-block-start-style\",\n    \"border-block-start-width\",\n    \"border-block-style\",\n    \"border-block-width\",\n    \"border-bottom\",\n    \"border-bottom-color\",\n    \"border-bottom-left-radius\",\n    \"border-bottom-right-radius\",\n    \"border-bottom-style\",\n    \"border-bottom-width\",\n    \"border-collapse\",\n    \"border-color\",\n    \"border-end-end-radius\",\n    \"border-end-start-radius\",\n    \"border-image\",\n    \"border-image-outset\",\n    \"border-image-repeat\",\n    \"border-image-slice\",\n    \"border-image-source\",\n    \"border-image-width\",\n    \"border-inline\",\n    \"border-inline-color\",\n    \"border-inline-end\",\n    \"border-inline-end-color\",\n    \"border-inline-end-style\",\n    \"border-inline-end-width\",\n    \"border-inline-start\",\n    \"border-inline-start-color\",\n    \"border-inline-start-style\",\n    \"border-inline-start-width\",\n    \"border-inline-style\",\n    \"border-inline-width\",\n    \"border-left\",\n    \"border-left-color\",\n    \"border-left-style\",\n    \"border-left-width\",\n    \"border-radius\",\n    \"border-right\",\n    \"border-right-color\",\n    \"border-right-style\",\n    \"border-right-width\",\n    \"border-spacing\",\n    \"border-start-end-radius\",\n    \"border-start-start-radius\",\n    \"border-style\",\n    \"border-top\",\n    \"border-top-color\",\n    \"border-top-left-radius\",\n    \"border-top-right-radius\",\n    \"border-top-style\",\n    \"border-top-width\",\n    \"border-width\",\n    \"bottom\",\n    \"box-align\",\n    \"box-decoration-break\",\n    \"box-direction\",\n    \"box-flex\",\n    \"box-flex-group\",\n    \"box-lines\",\n    \"box-ordinal-group\",\n    \"box-orient\",\n    \"box-pack\",\n    \"box-shadow\",\n    \"box-sizing\",\n    \"break-after\",\n    \"break-before\",\n    \"break-inside\",\n    \"caption-side\",\n    \"caret-color\",\n    \"clear\",\n    \"clip\",\n    \"clip-path\",\n    \"clip-rule\",\n    \"color\",\n    \"color-interpolation\",\n    \"color-interpolation-filters\",\n    \"color-profile\",\n    \"color-rendering\",\n    \"color-scheme\",\n    \"column-count\",\n    \"column-fill\",\n    \"column-gap\",\n    \"column-rule\",\n    \"column-rule-color\",\n    \"column-rule-style\",\n    \"column-rule-width\",\n    \"column-span\",\n    \"column-width\",\n    \"columns\",\n    \"contain\",\n    \"contain-intrinsic-block-size\",\n    \"contain-intrinsic-height\",\n    \"contain-intrinsic-inline-size\",\n    \"contain-intrinsic-size\",\n    \"contain-intrinsic-width\",\n    \"container\",\n    \"container-name\",\n    \"container-type\",\n    \"content\",\n    \"content-visibility\",\n    \"counter-increment\",\n    \"counter-reset\",\n    \"counter-set\",\n    \"cue\",\n    \"cue-after\",\n    \"cue-before\",\n    \"cursor\",\n    \"cx\",\n    \"cy\",\n    \"direction\",\n    \"display\",\n    \"dominant-baseline\",\n    \"empty-cells\",\n    \"enable-background\",\n    \"field-sizing\",\n    \"fill\",\n    \"fill-opacity\",\n    \"fill-rule\",\n    \"filter\",\n    \"flex\",\n    \"flex-basis\",\n    \"flex-direction\",\n    \"flex-flow\",\n    \"flex-grow\",\n    \"flex-shrink\",\n    \"flex-wrap\",\n    \"float\",\n    \"flood-color\",\n    \"flood-opacity\",\n    \"flow\",\n    \"font\",\n    \"font-display\",\n    \"font-family\",\n    \"font-feature-settings\",\n    \"font-kerning\",\n    \"font-language-override\",\n    \"font-optical-sizing\",\n    \"font-palette\",\n    \"font-size\",\n    \"font-size-adjust\",\n    \"font-smooth\",\n    \"font-smoothing\",\n    \"font-stretch\",\n    \"font-style\",\n    \"font-synthesis\",\n    \"font-synthesis-position\",\n    \"font-synthesis-small-caps\",\n    \"font-synthesis-style\",\n    \"font-synthesis-weight\",\n    \"font-variant\",\n    \"font-variant-alternates\",\n    \"font-variant-caps\",\n    \"font-variant-east-asian\",\n    \"font-variant-emoji\",\n    \"font-variant-ligatures\",\n    \"font-variant-numeric\",\n    \"font-variant-position\",\n    \"font-variation-settings\",\n    \"font-weight\",\n    \"forced-color-adjust\",\n    \"gap\",\n    \"glyph-orientation-horizontal\",\n    \"glyph-orientation-vertical\",\n    \"grid\",\n    \"grid-area\",\n    \"grid-auto-columns\",\n    \"grid-auto-flow\",\n    \"grid-auto-rows\",\n    \"grid-column\",\n    \"grid-column-end\",\n    \"grid-column-start\",\n    \"grid-gap\",\n    \"grid-row\",\n    \"grid-row-end\",\n    \"grid-row-start\",\n    \"grid-template\",\n    \"grid-template-areas\",\n    \"grid-template-columns\",\n    \"grid-template-rows\",\n    \"hanging-punctuation\",\n    \"height\",\n    \"hyphenate-character\",\n    \"hyphenate-limit-chars\",\n    \"hyphens\",\n    \"icon\",\n    \"image-orientation\",\n    \"image-rendering\",\n    \"image-resolution\",\n    \"ime-mode\",\n    \"initial-letter\",\n    \"initial-letter-align\",\n    \"inline-size\",\n    \"inset\",\n    \"inset-area\",\n    \"inset-block\",\n    \"inset-block-end\",\n    \"inset-block-start\",\n    \"inset-inline\",\n    \"inset-inline-end\",\n    \"inset-inline-start\",\n    \"isolation\",\n    \"justify-content\",\n    \"justify-items\",\n    \"justify-self\",\n    \"kerning\",\n    \"left\",\n    \"letter-spacing\",\n    \"lighting-color\",\n    \"line-break\",\n    \"line-height\",\n    \"line-height-step\",\n    \"list-style\",\n    \"list-style-image\",\n    \"list-style-position\",\n    \"list-style-type\",\n    \"margin\",\n    \"margin-block\",\n    \"margin-block-end\",\n    \"margin-block-start\",\n    \"margin-bottom\",\n    \"margin-inline\",\n    \"margin-inline-end\",\n    \"margin-inline-start\",\n    \"margin-left\",\n    \"margin-right\",\n    \"margin-top\",\n    \"margin-trim\",\n    \"marker\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"marker-start\",\n    \"marks\",\n    \"mask\",\n    \"mask-border\",\n    \"mask-border-mode\",\n    \"mask-border-outset\",\n    \"mask-border-repeat\",\n    \"mask-border-slice\",\n    \"mask-border-source\",\n    \"mask-border-width\",\n    \"mask-clip\",\n    \"mask-composite\",\n    \"mask-image\",\n    \"mask-mode\",\n    \"mask-origin\",\n    \"mask-position\",\n    \"mask-repeat\",\n    \"mask-size\",\n    \"mask-type\",\n    \"masonry-auto-flow\",\n    \"math-depth\",\n    \"math-shift\",\n    \"math-style\",\n    \"max-block-size\",\n    \"max-height\",\n    \"max-inline-size\",\n    \"max-width\",\n    \"min-block-size\",\n    \"min-height\",\n    \"min-inline-size\",\n    \"min-width\",\n    \"mix-blend-mode\",\n    \"nav-down\",\n    \"nav-index\",\n    \"nav-left\",\n    \"nav-right\",\n    \"nav-up\",\n    \"none\",\n    \"normal\",\n    \"object-fit\",\n    \"object-position\",\n    \"offset\",\n    \"offset-anchor\",\n    \"offset-distance\",\n    \"offset-path\",\n    \"offset-position\",\n    \"offset-rotate\",\n    \"opacity\",\n    \"order\",\n    \"orphans\",\n    \"outline\",\n    \"outline-color\",\n    \"outline-offset\",\n    \"outline-style\",\n    \"outline-width\",\n    \"overflow\",\n    \"overflow-anchor\",\n    \"overflow-block\",\n    \"overflow-clip-margin\",\n    \"overflow-inline\",\n    \"overflow-wrap\",\n    \"overflow-x\",\n    \"overflow-y\",\n    \"overlay\",\n    \"overscroll-behavior\",\n    \"overscroll-behavior-block\",\n    \"overscroll-behavior-inline\",\n    \"overscroll-behavior-x\",\n    \"overscroll-behavior-y\",\n    \"padding\",\n    \"padding-block\",\n    \"padding-block-end\",\n    \"padding-block-start\",\n    \"padding-bottom\",\n    \"padding-inline\",\n    \"padding-inline-end\",\n    \"padding-inline-start\",\n    \"padding-left\",\n    \"padding-right\",\n    \"padding-top\",\n    \"page\",\n    \"page-break-after\",\n    \"page-break-before\",\n    \"page-break-inside\",\n    \"paint-order\",\n    \"pause\",\n    \"pause-after\",\n    \"pause-before\",\n    \"perspective\",\n    \"perspective-origin\",\n    \"place-content\",\n    \"place-items\",\n    \"place-self\",\n    \"pointer-events\",\n    \"position\",\n    \"position-anchor\",\n    \"position-visibility\",\n    \"print-color-adjust\",\n    \"quotes\",\n    \"r\",\n    \"resize\",\n    \"rest\",\n    \"rest-after\",\n    \"rest-before\",\n    \"right\",\n    \"rotate\",\n    \"row-gap\",\n    \"ruby-align\",\n    \"ruby-position\",\n    \"scale\",\n    \"scroll-behavior\",\n    \"scroll-margin\",\n    \"scroll-margin-block\",\n    \"scroll-margin-block-end\",\n    \"scroll-margin-block-start\",\n    \"scroll-margin-bottom\",\n    \"scroll-margin-inline\",\n    \"scroll-margin-inline-end\",\n    \"scroll-margin-inline-start\",\n    \"scroll-margin-left\",\n    \"scroll-margin-right\",\n    \"scroll-margin-top\",\n    \"scroll-padding\",\n    \"scroll-padding-block\",\n    \"scroll-padding-block-end\",\n    \"scroll-padding-block-start\",\n    \"scroll-padding-bottom\",\n    \"scroll-padding-inline\",\n    \"scroll-padding-inline-end\",\n    \"scroll-padding-inline-start\",\n    \"scroll-padding-left\",\n    \"scroll-padding-right\",\n    \"scroll-padding-top\",\n    \"scroll-snap-align\",\n    \"scroll-snap-stop\",\n    \"scroll-snap-type\",\n    \"scroll-timeline\",\n    \"scroll-timeline-axis\",\n    \"scroll-timeline-name\",\n    \"scrollbar-color\",\n    \"scrollbar-gutter\",\n    \"scrollbar-width\",\n    \"shape-image-threshold\",\n    \"shape-margin\",\n    \"shape-outside\",\n    \"shape-rendering\",\n    \"speak\",\n    \"speak-as\",\n    \"src\",\n    // @font-face\n    \"stop-color\",\n    \"stop-opacity\",\n    \"stroke\",\n    \"stroke-dasharray\",\n    \"stroke-dashoffset\",\n    \"stroke-linecap\",\n    \"stroke-linejoin\",\n    \"stroke-miterlimit\",\n    \"stroke-opacity\",\n    \"stroke-width\",\n    \"tab-size\",\n    \"table-layout\",\n    \"text-align\",\n    \"text-align-all\",\n    \"text-align-last\",\n    \"text-anchor\",\n    \"text-combine-upright\",\n    \"text-decoration\",\n    \"text-decoration-color\",\n    \"text-decoration-line\",\n    \"text-decoration-skip\",\n    \"text-decoration-skip-ink\",\n    \"text-decoration-style\",\n    \"text-decoration-thickness\",\n    \"text-emphasis\",\n    \"text-emphasis-color\",\n    \"text-emphasis-position\",\n    \"text-emphasis-style\",\n    \"text-indent\",\n    \"text-justify\",\n    \"text-orientation\",\n    \"text-overflow\",\n    \"text-rendering\",\n    \"text-shadow\",\n    \"text-size-adjust\",\n    \"text-transform\",\n    \"text-underline-offset\",\n    \"text-underline-position\",\n    \"text-wrap\",\n    \"text-wrap-mode\",\n    \"text-wrap-style\",\n    \"timeline-scope\",\n    \"top\",\n    \"touch-action\",\n    \"transform\",\n    \"transform-box\",\n    \"transform-origin\",\n    \"transform-style\",\n    \"transition\",\n    \"transition-behavior\",\n    \"transition-delay\",\n    \"transition-duration\",\n    \"transition-property\",\n    \"transition-timing-function\",\n    \"translate\",\n    \"unicode-bidi\",\n    \"user-modify\",\n    \"user-select\",\n    \"vector-effect\",\n    \"vertical-align\",\n    \"view-timeline\",\n    \"view-timeline-axis\",\n    \"view-timeline-inset\",\n    \"view-timeline-name\",\n    \"view-transition-name\",\n    \"visibility\",\n    \"voice-balance\",\n    \"voice-duration\",\n    \"voice-family\",\n    \"voice-pitch\",\n    \"voice-range\",\n    \"voice-rate\",\n    \"voice-stress\",\n    \"voice-volume\",\n    \"white-space\",\n    \"white-space-collapse\",\n    \"widows\",\n    \"width\",\n    \"will-change\",\n    \"word-break\",\n    \"word-spacing\",\n    \"word-wrap\",\n    \"writing-mode\",\n    \"x\",\n    \"y\",\n    \"z-index\",\n    \"zoom\"\n  ].sort().reverse();\n  function scss(hljs) {\n    const modes = MODES2(hljs);\n    const PSEUDO_ELEMENTS$1 = PSEUDO_ELEMENTS2;\n    const PSEUDO_CLASSES$1 = PSEUDO_CLASSES2;\n    const AT_IDENTIFIER = \"@[a-z-]+\";\n    const AT_MODIFIERS = \"and or not only\";\n    const IDENT_RE3 = \"[a-zA-Z-][a-zA-Z0-9_-]*\";\n    const VARIABLE = {\n      className: \"variable\",\n      begin: \"(\\\\$\" + IDENT_RE3 + \")\\\\b\",\n      relevance: 0\n    };\n    return {\n      name: \"SCSS\",\n      case_insensitive: true,\n      illegal: \"[=/|']\",\n      contains: [\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        // to recognize keyframe 40% etc which are outside the scope of our\n        // attribute value mode\n        modes.CSS_NUMBER_MODE,\n        {\n          className: \"selector-id\",\n          begin: \"#[A-Za-z0-9_-]+\",\n          relevance: 0\n        },\n        {\n          className: \"selector-class\",\n          begin: \"\\\\.[A-Za-z0-9_-]+\",\n          relevance: 0\n        },\n        modes.ATTRIBUTE_SELECTOR_MODE,\n        {\n          className: \"selector-tag\",\n          begin: \"\\\\b(\" + TAGS2.join(\"|\") + \")\\\\b\",\n          // was there, before, but why?\n          relevance: 0\n        },\n        {\n          className: \"selector-pseudo\",\n          begin: \":(\" + PSEUDO_CLASSES$1.join(\"|\") + \")\"\n        },\n        {\n          className: \"selector-pseudo\",\n          begin: \":(:)?(\" + PSEUDO_ELEMENTS$1.join(\"|\") + \")\"\n        },\n        VARIABLE,\n        {\n          // pseudo-selector params\n          begin: /\\(/,\n          end: /\\)/,\n          contains: [modes.CSS_NUMBER_MODE]\n        },\n        modes.CSS_VARIABLE,\n        {\n          className: \"attribute\",\n          begin: \"\\\\b(\" + ATTRIBUTES2.join(\"|\") + \")\\\\b\"\n        },\n        { begin: \"\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b\" },\n        {\n          begin: /:/,\n          end: /[;}{]/,\n          relevance: 0,\n          contains: [\n            modes.BLOCK_COMMENT,\n            VARIABLE,\n            modes.HEXCOLOR,\n            modes.CSS_NUMBER_MODE,\n            hljs.QUOTE_STRING_MODE,\n            hljs.APOS_STRING_MODE,\n            modes.IMPORTANT,\n            modes.FUNCTION_DISPATCH\n          ]\n        },\n        // matching these here allows us to treat them more like regular CSS\n        // rules so everything between the {} gets regular rule highlighting,\n        // which is what we want for page and font-face\n        {\n          begin: \"@(page|font-face)\",\n          keywords: {\n            $pattern: AT_IDENTIFIER,\n            keyword: \"@page @font-face\"\n          }\n        },\n        {\n          begin: \"@\",\n          end: \"[{;]\",\n          returnBegin: true,\n          keywords: {\n            $pattern: /[a-z-]+/,\n            keyword: AT_MODIFIERS,\n            attribute: MEDIA_FEATURES2.join(\" \")\n          },\n          contains: [\n            {\n              begin: AT_IDENTIFIER,\n              className: \"keyword\"\n            },\n            {\n              begin: /[a-z-]+(?=:)/,\n              className: \"attribute\"\n            },\n            VARIABLE,\n            hljs.QUOTE_STRING_MODE,\n            hljs.APOS_STRING_MODE,\n            modes.HEXCOLOR,\n            modes.CSS_NUMBER_MODE\n          ]\n        },\n        modes.FUNCTION_DISPATCH\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/bash.js\n  function bash(hljs) {\n    const regex = hljs.regex;\n    const VAR = {};\n    const BRACED_VAR = {\n      begin: /\\$\\{/,\n      end: /\\}/,\n      contains: [\n        \"self\",\n        {\n          begin: /:-/,\n          contains: [VAR]\n        }\n        // default values\n      ]\n    };\n    Object.assign(VAR, {\n      className: \"variable\",\n      variants: [\n        { begin: regex.concat(\n          /\\$[\\w\\d#@][\\w\\d_]*/,\n          // negative look-ahead tries to avoid matching patterns that are not\n          // Perl at all like $ident$, @ident@, etc.\n          `(?![\\\\w\\\\d])(?![$])`\n        ) },\n        BRACED_VAR\n      ]\n    });\n    const SUBST = {\n      className: \"subst\",\n      begin: /\\$\\(/,\n      end: /\\)/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    };\n    const COMMENT = hljs.inherit(\n      hljs.COMMENT(),\n      {\n        match: [\n          /(^|\\s)/,\n          /#.*$/\n        ],\n        scope: {\n          2: \"comment\"\n        }\n      }\n    );\n    const HERE_DOC = {\n      begin: /<<-?\\s*(?=\\w+)/,\n      starts: { contains: [\n        hljs.END_SAME_AS_BEGIN({\n          begin: /(\\w+)/,\n          end: /(\\w+)/,\n          className: \"string\"\n        })\n      ] }\n    };\n    const QUOTE_STRING = {\n      className: \"string\",\n      begin: /\"/,\n      end: /\"/,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        VAR,\n        SUBST\n      ]\n    };\n    SUBST.contains.push(QUOTE_STRING);\n    const ESCAPED_QUOTE = {\n      match: /\\\\\"/\n    };\n    const APOS_STRING = {\n      className: \"string\",\n      begin: /'/,\n      end: /'/\n    };\n    const ESCAPED_APOS = {\n      match: /\\\\'/\n    };\n    const ARITHMETIC = {\n      begin: /\\$?\\(\\(/,\n      end: /\\)\\)/,\n      contains: [\n        {\n          begin: /\\d+#[0-9a-f]+/,\n          className: \"number\"\n        },\n        hljs.NUMBER_MODE,\n        VAR\n      ]\n    };\n    const SH_LIKE_SHELLS = [\n      \"fish\",\n      \"bash\",\n      \"zsh\",\n      \"sh\",\n      \"csh\",\n      \"ksh\",\n      \"tcsh\",\n      \"dash\",\n      \"scsh\"\n    ];\n    const KNOWN_SHEBANG = hljs.SHEBANG({\n      binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n      relevance: 10\n    });\n    const FUNCTION = {\n      className: \"function\",\n      begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n      returnBegin: true,\n      contains: [hljs.inherit(hljs.TITLE_MODE, { begin: /\\w[\\w\\d_]*/ })],\n      relevance: 0\n    };\n    const KEYWORDS3 = [\n      \"if\",\n      \"then\",\n      \"else\",\n      \"elif\",\n      \"fi\",\n      \"time\",\n      \"for\",\n      \"while\",\n      \"until\",\n      \"in\",\n      \"do\",\n      \"done\",\n      \"case\",\n      \"esac\",\n      \"coproc\",\n      \"function\",\n      \"select\"\n    ];\n    const LITERALS3 = [\n      \"true\",\n      \"false\"\n    ];\n    const PATH_MODE = { match: /(\\/[a-z._-]+)+/ };\n    const SHELL_BUILT_INS = [\n      \"break\",\n      \"cd\",\n      \"continue\",\n      \"eval\",\n      \"exec\",\n      \"exit\",\n      \"export\",\n      \"getopts\",\n      \"hash\",\n      \"pwd\",\n      \"readonly\",\n      \"return\",\n      \"shift\",\n      \"test\",\n      \"times\",\n      \"trap\",\n      \"umask\",\n      \"unset\"\n    ];\n    const BASH_BUILT_INS = [\n      \"alias\",\n      \"bind\",\n      \"builtin\",\n      \"caller\",\n      \"command\",\n      \"declare\",\n      \"echo\",\n      \"enable\",\n      \"help\",\n      \"let\",\n      \"local\",\n      \"logout\",\n      \"mapfile\",\n      \"printf\",\n      \"read\",\n      \"readarray\",\n      \"source\",\n      \"sudo\",\n      \"type\",\n      \"typeset\",\n      \"ulimit\",\n      \"unalias\"\n    ];\n    const ZSH_BUILT_INS = [\n      \"autoload\",\n      \"bg\",\n      \"bindkey\",\n      \"bye\",\n      \"cap\",\n      \"chdir\",\n      \"clone\",\n      \"comparguments\",\n      \"compcall\",\n      \"compctl\",\n      \"compdescribe\",\n      \"compfiles\",\n      \"compgroups\",\n      \"compquote\",\n      \"comptags\",\n      \"comptry\",\n      \"compvalues\",\n      \"dirs\",\n      \"disable\",\n      \"disown\",\n      \"echotc\",\n      \"echoti\",\n      \"emulate\",\n      \"fc\",\n      \"fg\",\n      \"float\",\n      \"functions\",\n      \"getcap\",\n      \"getln\",\n      \"history\",\n      \"integer\",\n      \"jobs\",\n      \"kill\",\n      \"limit\",\n      \"log\",\n      \"noglob\",\n      \"popd\",\n      \"print\",\n      \"pushd\",\n      \"pushln\",\n      \"rehash\",\n      \"sched\",\n      \"setcap\",\n      \"setopt\",\n      \"stat\",\n      \"suspend\",\n      \"ttyctl\",\n      \"unfunction\",\n      \"unhash\",\n      \"unlimit\",\n      \"unsetopt\",\n      \"vared\",\n      \"wait\",\n      \"whence\",\n      \"where\",\n      \"which\",\n      \"zcompile\",\n      \"zformat\",\n      \"zftp\",\n      \"zle\",\n      \"zmodload\",\n      \"zparseopts\",\n      \"zprof\",\n      \"zpty\",\n      \"zregexparse\",\n      \"zsocket\",\n      \"zstyle\",\n      \"ztcp\"\n    ];\n    const GNU_CORE_UTILS = [\n      \"chcon\",\n      \"chgrp\",\n      \"chown\",\n      \"chmod\",\n      \"cp\",\n      \"dd\",\n      \"df\",\n      \"dir\",\n      \"dircolors\",\n      \"ln\",\n      \"ls\",\n      \"mkdir\",\n      \"mkfifo\",\n      \"mknod\",\n      \"mktemp\",\n      \"mv\",\n      \"realpath\",\n      \"rm\",\n      \"rmdir\",\n      \"shred\",\n      \"sync\",\n      \"touch\",\n      \"truncate\",\n      \"vdir\",\n      \"b2sum\",\n      \"base32\",\n      \"base64\",\n      \"cat\",\n      \"cksum\",\n      \"comm\",\n      \"csplit\",\n      \"cut\",\n      \"expand\",\n      \"fmt\",\n      \"fold\",\n      \"head\",\n      \"join\",\n      \"md5sum\",\n      \"nl\",\n      \"numfmt\",\n      \"od\",\n      \"paste\",\n      \"ptx\",\n      \"pr\",\n      \"sha1sum\",\n      \"sha224sum\",\n      \"sha256sum\",\n      \"sha384sum\",\n      \"sha512sum\",\n      \"shuf\",\n      \"sort\",\n      \"split\",\n      \"sum\",\n      \"tac\",\n      \"tail\",\n      \"tr\",\n      \"tsort\",\n      \"unexpand\",\n      \"uniq\",\n      \"wc\",\n      \"arch\",\n      \"basename\",\n      \"chroot\",\n      \"date\",\n      \"dirname\",\n      \"du\",\n      \"echo\",\n      \"env\",\n      \"expr\",\n      \"factor\",\n      // \"false\", // keyword literal already\n      \"groups\",\n      \"hostid\",\n      \"id\",\n      \"link\",\n      \"logname\",\n      \"nice\",\n      \"nohup\",\n      \"nproc\",\n      \"pathchk\",\n      \"pinky\",\n      \"printenv\",\n      \"printf\",\n      \"pwd\",\n      \"readlink\",\n      \"runcon\",\n      \"seq\",\n      \"sleep\",\n      \"stat\",\n      \"stdbuf\",\n      \"stty\",\n      \"tee\",\n      \"test\",\n      \"timeout\",\n      // \"true\", // keyword literal already\n      \"tty\",\n      \"uname\",\n      \"unlink\",\n      \"uptime\",\n      \"users\",\n      \"who\",\n      \"whoami\",\n      \"yes\"\n    ];\n    return {\n      name: \"Bash\",\n      aliases: [\n        \"sh\",\n        \"zsh\"\n      ],\n      keywords: {\n        $pattern: /\\b[a-z][a-z0-9._-]+\\b/,\n        keyword: KEYWORDS3,\n        literal: LITERALS3,\n        built_in: [\n          ...SHELL_BUILT_INS,\n          ...BASH_BUILT_INS,\n          // Shell modifiers\n          \"set\",\n          \"shopt\",\n          ...ZSH_BUILT_INS,\n          ...GNU_CORE_UTILS\n        ]\n      },\n      contains: [\n        KNOWN_SHEBANG,\n        // to catch known shells and boost relevancy\n        hljs.SHEBANG(),\n        // to catch unknown shells but still highlight the shebang\n        FUNCTION,\n        ARITHMETIC,\n        COMMENT,\n        HERE_DOC,\n        PATH_MODE,\n        QUOTE_STRING,\n        ESCAPED_QUOTE,\n        APOS_STRING,\n        ESCAPED_APOS,\n        VAR\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/python.js\n  function python(hljs) {\n    const regex = hljs.regex;\n    const IDENT_RE3 = /[\\p{XID_Start}_]\\p{XID_Continue}*/u;\n    const RESERVED_WORDS = [\n      \"and\",\n      \"as\",\n      \"assert\",\n      \"async\",\n      \"await\",\n      \"break\",\n      \"case\",\n      \"class\",\n      \"continue\",\n      \"def\",\n      \"del\",\n      \"elif\",\n      \"else\",\n      \"except\",\n      \"finally\",\n      \"for\",\n      \"from\",\n      \"global\",\n      \"if\",\n      \"import\",\n      \"in\",\n      \"is\",\n      \"lambda\",\n      \"match\",\n      \"nonlocal|10\",\n      \"not\",\n      \"or\",\n      \"pass\",\n      \"raise\",\n      \"return\",\n      \"try\",\n      \"while\",\n      \"with\",\n      \"yield\"\n    ];\n    const BUILT_INS3 = [\n      \"__import__\",\n      \"abs\",\n      \"all\",\n      \"any\",\n      \"ascii\",\n      \"bin\",\n      \"bool\",\n      \"breakpoint\",\n      \"bytearray\",\n      \"bytes\",\n      \"callable\",\n      \"chr\",\n      \"classmethod\",\n      \"compile\",\n      \"complex\",\n      \"delattr\",\n      \"dict\",\n      \"dir\",\n      \"divmod\",\n      \"enumerate\",\n      \"eval\",\n      \"exec\",\n      \"filter\",\n      \"float\",\n      \"format\",\n      \"frozenset\",\n      \"getattr\",\n      \"globals\",\n      \"hasattr\",\n      \"hash\",\n      \"help\",\n      \"hex\",\n      \"id\",\n      \"input\",\n      \"int\",\n      \"isinstance\",\n      \"issubclass\",\n      \"iter\",\n      \"len\",\n      \"list\",\n      \"locals\",\n      \"map\",\n      \"max\",\n      \"memoryview\",\n      \"min\",\n      \"next\",\n      \"object\",\n      \"oct\",\n      \"open\",\n      \"ord\",\n      \"pow\",\n      \"print\",\n      \"property\",\n      \"range\",\n      \"repr\",\n      \"reversed\",\n      \"round\",\n      \"set\",\n      \"setattr\",\n      \"slice\",\n      \"sorted\",\n      \"staticmethod\",\n      \"str\",\n      \"sum\",\n      \"super\",\n      \"tuple\",\n      \"type\",\n      \"vars\",\n      \"zip\"\n    ];\n    const LITERALS3 = [\n      \"__debug__\",\n      \"Ellipsis\",\n      \"False\",\n      \"None\",\n      \"NotImplemented\",\n      \"True\"\n    ];\n    const TYPES3 = [\n      \"Any\",\n      \"Callable\",\n      \"Coroutine\",\n      \"Dict\",\n      \"List\",\n      \"Literal\",\n      \"Generic\",\n      \"Optional\",\n      \"Sequence\",\n      \"Set\",\n      \"Tuple\",\n      \"Type\",\n      \"Union\"\n    ];\n    const KEYWORDS3 = {\n      $pattern: /[A-Za-z]\\w+|__\\w+__/,\n      keyword: RESERVED_WORDS,\n      built_in: BUILT_INS3,\n      literal: LITERALS3,\n      type: TYPES3\n    };\n    const PROMPT = {\n      className: \"meta\",\n      begin: /^(>>>|\\.\\.\\.) /\n    };\n    const SUBST = {\n      className: \"subst\",\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS3,\n      illegal: /#/\n    };\n    const LITERAL_BRACKET = {\n      begin: /\\{\\{/,\n      relevance: 0\n    };\n    const STRING = {\n      className: \"string\",\n      contains: [hljs.BACKSLASH_ESCAPE],\n      variants: [\n        {\n          begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n          end: /'''/,\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            PROMPT\n          ],\n          relevance: 10\n        },\n        {\n          begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n          end: /\"\"\"/,\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            PROMPT\n          ],\n          relevance: 10\n        },\n        {\n          begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n          end: /'''/,\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            PROMPT,\n            LITERAL_BRACKET,\n            SUBST\n          ]\n        },\n        {\n          begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n          end: /\"\"\"/,\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            PROMPT,\n            LITERAL_BRACKET,\n            SUBST\n          ]\n        },\n        {\n          begin: /([uU]|[rR])'/,\n          end: /'/,\n          relevance: 10\n        },\n        {\n          begin: /([uU]|[rR])\"/,\n          end: /\"/,\n          relevance: 10\n        },\n        {\n          begin: /([bB]|[bB][rR]|[rR][bB])'/,\n          end: /'/\n        },\n        {\n          begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n          end: /\"/\n        },\n        {\n          begin: /([fF][rR]|[rR][fF]|[fF])'/,\n          end: /'/,\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            LITERAL_BRACKET,\n            SUBST\n          ]\n        },\n        {\n          begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n          end: /\"/,\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            LITERAL_BRACKET,\n            SUBST\n          ]\n        },\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    };\n    const digitpart = \"[0-9](_?[0-9])*\";\n    const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n    const lookahead = `\\\\b|${RESERVED_WORDS.join(\"|\")}`;\n    const NUMBER = {\n      className: \"number\",\n      relevance: 0,\n      variants: [\n        // exponentfloat, pointfloat\n        // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n        // optionally imaginary\n        // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n        // Note: no leading \\b because floats can start with a decimal point\n        // and we don't want to mishandle e.g. `fn(.5)`,\n        // no trailing \\b for pointfloat because it can end with a decimal point\n        // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n        // because both MUST contain a decimal point and so cannot be confused with\n        // the interior part of an identifier\n        {\n          begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`\n        },\n        {\n          begin: `(${pointfloat})[jJ]?`\n        },\n        // decinteger, bininteger, octinteger, hexinteger\n        // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n        // optionally \"long\" in Python 2\n        // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n        // decinteger is optionally imaginary\n        // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n        {\n          begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`\n        },\n        {\n          begin: `\\\\b0[bB](_?[01])+[lL]?(?=${lookahead})`\n        },\n        {\n          begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`\n        },\n        {\n          begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`\n        },\n        // imagnumber (digitpart-based)\n        // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n        {\n          begin: `\\\\b(${digitpart})[jJ](?=${lookahead})`\n        }\n      ]\n    };\n    const COMMENT_TYPE = {\n      className: \"comment\",\n      begin: regex.lookahead(/# type:/),\n      end: /$/,\n      keywords: KEYWORDS3,\n      contains: [\n        {\n          // prevent keywords from coloring `type`\n          begin: /# type:/\n        },\n        // comment within a datatype comment includes no keywords\n        {\n          begin: /#/,\n          end: /\\b\\B/,\n          endsWithParent: true\n        }\n      ]\n    };\n    const PARAMS = {\n      className: \"params\",\n      variants: [\n        // Exclude params in functions without params\n        {\n          className: \"\",\n          begin: /\\(\\s*\\)/,\n          skip: true\n        },\n        {\n          begin: /\\(/,\n          end: /\\)/,\n          excludeBegin: true,\n          excludeEnd: true,\n          keywords: KEYWORDS3,\n          contains: [\n            \"self\",\n            PROMPT,\n            NUMBER,\n            STRING,\n            hljs.HASH_COMMENT_MODE\n          ]\n        }\n      ]\n    };\n    SUBST.contains = [\n      STRING,\n      NUMBER,\n      PROMPT\n    ];\n    return {\n      name: \"Python\",\n      aliases: [\n        \"py\",\n        \"gyp\",\n        \"ipython\"\n      ],\n      unicodeRegex: true,\n      keywords: KEYWORDS3,\n      illegal: /(<\\/|\\?)|=>/,\n      contains: [\n        PROMPT,\n        NUMBER,\n        {\n          // very common convention\n          scope: \"variable.language\",\n          match: /\\bself\\b/\n        },\n        {\n          // eat \"if\" prior to string so that it won't accidentally be\n          // labeled as an f-string\n          beginKeywords: \"if\",\n          relevance: 0\n        },\n        { match: /\\bor\\b/, scope: \"keyword\" },\n        STRING,\n        COMMENT_TYPE,\n        hljs.HASH_COMMENT_MODE,\n        {\n          match: [\n            /\\bdef/,\n            /\\s+/,\n            IDENT_RE3\n          ],\n          scope: {\n            1: \"keyword\",\n            3: \"title.function\"\n          },\n          contains: [PARAMS]\n        },\n        {\n          variants: [\n            {\n              match: [\n                /\\bclass/,\n                /\\s+/,\n                IDENT_RE3,\n                /\\s*/,\n                /\\(\\s*/,\n                IDENT_RE3,\n                /\\s*\\)/\n              ]\n            },\n            {\n              match: [\n                /\\bclass/,\n                /\\s+/,\n                IDENT_RE3\n              ]\n            }\n          ],\n          scope: {\n            1: \"keyword\",\n            3: \"title.class\",\n            6: \"title.class.inherited\"\n          }\n        },\n        {\n          className: \"meta\",\n          begin: /^[\\t ]*@/,\n          end: /(?=#)|$/,\n          contains: [\n            NUMBER,\n            PARAMS,\n            STRING\n          ]\n        }\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/java.js\n  var decimalDigits = \"[0-9](_*[0-9])*\";\n  var frac = `\\\\.(${decimalDigits})`;\n  var hexDigits = \"[0-9a-fA-F](_*[0-9a-fA-F])*\";\n  var NUMERIC = {\n    className: \"number\",\n    variants: [\n      // DecimalFloatingPointLiteral\n      // including ExponentPart\n      { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n      // excluding ExponentPart\n      { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n      { begin: `(${frac})[fFdD]?\\\\b` },\n      { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n      // HexadecimalFloatingPointLiteral\n      { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n      // DecimalIntegerLiteral\n      { begin: \"\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b\" },\n      // HexIntegerLiteral\n      { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n      // OctalIntegerLiteral\n      { begin: \"\\\\b0(_*[0-7])*[lL]?\\\\b\" },\n      // BinaryIntegerLiteral\n      { begin: \"\\\\b0[bB][01](_*[01])*[lL]?\\\\b\" }\n    ],\n    relevance: 0\n  };\n  function recurRegex(re, substitution, depth) {\n    if (depth === -1)\n      return \"\";\n    return re.replace(substitution, (_) => {\n      return recurRegex(re, substitution, depth - 1);\n    });\n  }\n  function java(hljs) {\n    const regex = hljs.regex;\n    const JAVA_IDENT_RE = \"[\\xC0-\\u02B8a-zA-Z_$][\\xC0-\\u02B8a-zA-Z_$0-9]*\";\n    const GENERIC_IDENT_RE = JAVA_IDENT_RE + recurRegex(\"(?:<\" + JAVA_IDENT_RE + \"~~~(?:\\\\s*,\\\\s*\" + JAVA_IDENT_RE + \"~~~)*>)?\", /~~~/g, 2);\n    const MAIN_KEYWORDS = [\n      \"synchronized\",\n      \"abstract\",\n      \"private\",\n      \"var\",\n      \"static\",\n      \"if\",\n      \"const \",\n      \"for\",\n      \"while\",\n      \"strictfp\",\n      \"finally\",\n      \"protected\",\n      \"import\",\n      \"native\",\n      \"final\",\n      \"void\",\n      \"enum\",\n      \"else\",\n      \"break\",\n      \"transient\",\n      \"catch\",\n      \"instanceof\",\n      \"volatile\",\n      \"case\",\n      \"assert\",\n      \"package\",\n      \"default\",\n      \"public\",\n      \"try\",\n      \"switch\",\n      \"continue\",\n      \"throws\",\n      \"protected\",\n      \"public\",\n      \"private\",\n      \"module\",\n      \"requires\",\n      \"exports\",\n      \"do\",\n      \"sealed\",\n      \"yield\",\n      \"permits\",\n      \"goto\",\n      \"when\"\n    ];\n    const BUILT_INS3 = [\n      \"super\",\n      \"this\"\n    ];\n    const LITERALS3 = [\n      \"false\",\n      \"true\",\n      \"null\"\n    ];\n    const TYPES3 = [\n      \"char\",\n      \"boolean\",\n      \"long\",\n      \"float\",\n      \"int\",\n      \"byte\",\n      \"short\",\n      \"double\"\n    ];\n    const KEYWORDS3 = {\n      keyword: MAIN_KEYWORDS,\n      literal: LITERALS3,\n      type: TYPES3,\n      built_in: BUILT_INS3\n    };\n    const ANNOTATION = {\n      className: \"meta\",\n      begin: \"@\" + JAVA_IDENT_RE,\n      contains: [\n        {\n          begin: /\\(/,\n          end: /\\)/,\n          contains: [\"self\"]\n          // allow nested () inside our annotation\n        }\n      ]\n    };\n    const PARAMS = {\n      className: \"params\",\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS3,\n      relevance: 0,\n      contains: [hljs.C_BLOCK_COMMENT_MODE],\n      endsParent: true\n    };\n    return {\n      name: \"Java\",\n      aliases: [\"jsp\"],\n      keywords: KEYWORDS3,\n      illegal: /<\\/|#/,\n      contains: [\n        hljs.COMMENT(\n          \"/\\\\*\\\\*\",\n          \"\\\\*/\",\n          {\n            relevance: 0,\n            contains: [\n              {\n                // eat up @'s in emails to prevent them to be recognized as doctags\n                begin: /\\w+@/,\n                relevance: 0\n              },\n              {\n                className: \"doctag\",\n                begin: \"@[A-Za-z]+\"\n              }\n            ]\n          }\n        ),\n        // relevance boost\n        {\n          begin: /import java\\.[a-z]+\\./,\n          keywords: \"import\",\n          relevance: 2\n        },\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          begin: /\"\"\"/,\n          end: /\"\"\"/,\n          className: \"string\",\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE,\n        {\n          match: [\n            /\\b(?:class|interface|enum|extends|implements|new)/,\n            /\\s+/,\n            JAVA_IDENT_RE\n          ],\n          className: {\n            1: \"keyword\",\n            3: \"title.class\"\n          }\n        },\n        {\n          // Exceptions for hyphenated keywords\n          match: /non-sealed/,\n          scope: \"keyword\"\n        },\n        {\n          begin: [\n            regex.concat(/(?!else)/, JAVA_IDENT_RE),\n            /\\s+/,\n            JAVA_IDENT_RE,\n            /\\s+/,\n            /=(?!=)/\n          ],\n          className: {\n            1: \"type\",\n            3: \"variable\",\n            5: \"operator\"\n          }\n        },\n        {\n          begin: [\n            /record/,\n            /\\s+/,\n            JAVA_IDENT_RE\n          ],\n          className: {\n            1: \"keyword\",\n            3: \"title.class\"\n          },\n          contains: [\n            PARAMS,\n            hljs.C_LINE_COMMENT_MODE,\n            hljs.C_BLOCK_COMMENT_MODE\n          ]\n        },\n        {\n          // Expression keywords prevent 'keyword Name(...)' from being\n          // recognized as a function definition\n          beginKeywords: \"new throw return else\",\n          relevance: 0\n        },\n        {\n          begin: [\n            \"(?:\" + GENERIC_IDENT_RE + \"\\\\s+)\",\n            hljs.UNDERSCORE_IDENT_RE,\n            /\\s*(?=\\()/\n          ],\n          className: { 2: \"title.function\" },\n          keywords: KEYWORDS3,\n          contains: [\n            {\n              className: \"params\",\n              begin: /\\(/,\n              end: /\\)/,\n              keywords: KEYWORDS3,\n              relevance: 0,\n              contains: [\n                ANNOTATION,\n                hljs.APOS_STRING_MODE,\n                hljs.QUOTE_STRING_MODE,\n                NUMERIC,\n                hljs.C_BLOCK_COMMENT_MODE\n              ]\n            },\n            hljs.C_LINE_COMMENT_MODE,\n            hljs.C_BLOCK_COMMENT_MODE\n          ]\n        },\n        NUMERIC,\n        ANNOTATION\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/go.js\n  function go(hljs) {\n    const LITERALS3 = [\n      \"true\",\n      \"false\",\n      \"iota\",\n      \"nil\"\n    ];\n    const BUILT_INS3 = [\n      \"append\",\n      \"cap\",\n      \"close\",\n      \"complex\",\n      \"copy\",\n      \"imag\",\n      \"len\",\n      \"make\",\n      \"new\",\n      \"panic\",\n      \"print\",\n      \"println\",\n      \"real\",\n      \"recover\",\n      \"delete\"\n    ];\n    const TYPES3 = [\n      \"bool\",\n      \"byte\",\n      \"complex64\",\n      \"complex128\",\n      \"error\",\n      \"float32\",\n      \"float64\",\n      \"int8\",\n      \"int16\",\n      \"int32\",\n      \"int64\",\n      \"string\",\n      \"uint8\",\n      \"uint16\",\n      \"uint32\",\n      \"uint64\",\n      \"int\",\n      \"uint\",\n      \"uintptr\",\n      \"rune\"\n    ];\n    const KWS = [\n      \"break\",\n      \"case\",\n      \"chan\",\n      \"const\",\n      \"continue\",\n      \"default\",\n      \"defer\",\n      \"else\",\n      \"fallthrough\",\n      \"for\",\n      \"func\",\n      \"go\",\n      \"goto\",\n      \"if\",\n      \"import\",\n      \"interface\",\n      \"map\",\n      \"package\",\n      \"range\",\n      \"return\",\n      \"select\",\n      \"struct\",\n      \"switch\",\n      \"type\",\n      \"var\"\n    ];\n    const KEYWORDS3 = {\n      keyword: KWS,\n      type: TYPES3,\n      literal: LITERALS3,\n      built_in: BUILT_INS3\n    };\n    return {\n      name: \"Go\",\n      aliases: [\"golang\"],\n      keywords: KEYWORDS3,\n      illegal: \"</\",\n      contains: [\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          className: \"string\",\n          variants: [\n            hljs.QUOTE_STRING_MODE,\n            hljs.APOS_STRING_MODE,\n            {\n              begin: \"`\",\n              end: \"`\"\n            }\n          ]\n        },\n        {\n          className: \"number\",\n          variants: [\n            {\n              match: /-?\\b0[xX]\\.[a-fA-F0-9](_?[a-fA-F0-9])*[pP][+-]?\\d(_?\\d)*i?/,\n              // hex without a present digit before . (making a digit afterwards required)\n              relevance: 0\n            },\n            {\n              match: /-?\\b0[xX](_?[a-fA-F0-9])+((\\.([a-fA-F0-9](_?[a-fA-F0-9])*)?)?[pP][+-]?\\d(_?\\d)*)?i?/,\n              // hex with a present digit before . (making a digit afterwards optional)\n              relevance: 0\n            },\n            {\n              match: /-?\\b0[oO](_?[0-7])*i?/,\n              // leading 0o octal\n              relevance: 0\n            },\n            {\n              match: /-?\\.\\d(_?\\d)*([eE][+-]?\\d(_?\\d)*)?i?/,\n              // decimal without a present digit before . (making a digit afterwards required)\n              relevance: 0\n            },\n            {\n              match: /-?\\b\\d(_?\\d)*(\\.(\\d(_?\\d)*)?)?([eE][+-]?\\d(_?\\d)*)?i?/,\n              // decimal with a present digit before . (making a digit afterwards optional)\n              relevance: 0\n            }\n          ]\n        },\n        {\n          begin: /:=/\n          // relevance booster\n        },\n        {\n          className: \"function\",\n          beginKeywords: \"func\",\n          end: \"\\\\s*(\\\\{|$)\",\n          excludeEnd: true,\n          contains: [\n            hljs.TITLE_MODE,\n            {\n              className: \"params\",\n              begin: /\\(/,\n              end: /\\)/,\n              endsParent: true,\n              keywords: KEYWORDS3,\n              illegal: /[\"']/\n            }\n          ]\n        }\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/rust.js\n  function rust(hljs) {\n    const regex = hljs.regex;\n    const RAW_IDENTIFIER = /(r#)?/;\n    const UNDERSCORE_IDENT_RE = regex.concat(RAW_IDENTIFIER, hljs.UNDERSCORE_IDENT_RE);\n    const IDENT_RE3 = regex.concat(RAW_IDENTIFIER, hljs.IDENT_RE);\n    const FUNCTION_INVOKE = {\n      className: \"title.function.invoke\",\n      relevance: 0,\n      begin: regex.concat(\n        /\\b/,\n        /(?!let|for|while|if|else|match\\b)/,\n        IDENT_RE3,\n        regex.lookahead(/\\s*\\(/)\n      )\n    };\n    const NUMBER_SUFFIX = \"([ui](8|16|32|64|128|size)|f(32|64))?\";\n    const KEYWORDS3 = [\n      \"abstract\",\n      \"as\",\n      \"async\",\n      \"await\",\n      \"become\",\n      \"box\",\n      \"break\",\n      \"const\",\n      \"continue\",\n      \"crate\",\n      \"do\",\n      \"dyn\",\n      \"else\",\n      \"enum\",\n      \"extern\",\n      \"false\",\n      \"final\",\n      \"fn\",\n      \"for\",\n      \"if\",\n      \"impl\",\n      \"in\",\n      \"let\",\n      \"loop\",\n      \"macro\",\n      \"match\",\n      \"mod\",\n      \"move\",\n      \"mut\",\n      \"override\",\n      \"priv\",\n      \"pub\",\n      \"ref\",\n      \"return\",\n      \"self\",\n      \"Self\",\n      \"static\",\n      \"struct\",\n      \"super\",\n      \"trait\",\n      \"true\",\n      \"try\",\n      \"type\",\n      \"typeof\",\n      \"union\",\n      \"unsafe\",\n      \"unsized\",\n      \"use\",\n      \"virtual\",\n      \"where\",\n      \"while\",\n      \"yield\"\n    ];\n    const LITERALS3 = [\n      \"true\",\n      \"false\",\n      \"Some\",\n      \"None\",\n      \"Ok\",\n      \"Err\"\n    ];\n    const BUILTINS = [\n      // functions\n      \"drop \",\n      // traits\n      \"Copy\",\n      \"Send\",\n      \"Sized\",\n      \"Sync\",\n      \"Drop\",\n      \"Fn\",\n      \"FnMut\",\n      \"FnOnce\",\n      \"ToOwned\",\n      \"Clone\",\n      \"Debug\",\n      \"PartialEq\",\n      \"PartialOrd\",\n      \"Eq\",\n      \"Ord\",\n      \"AsRef\",\n      \"AsMut\",\n      \"Into\",\n      \"From\",\n      \"Default\",\n      \"Iterator\",\n      \"Extend\",\n      \"IntoIterator\",\n      \"DoubleEndedIterator\",\n      \"ExactSizeIterator\",\n      \"SliceConcatExt\",\n      \"ToString\",\n      // macros\n      \"assert!\",\n      \"assert_eq!\",\n      \"bitflags!\",\n      \"bytes!\",\n      \"cfg!\",\n      \"col!\",\n      \"concat!\",\n      \"concat_idents!\",\n      \"debug_assert!\",\n      \"debug_assert_eq!\",\n      \"env!\",\n      \"eprintln!\",\n      \"panic!\",\n      \"file!\",\n      \"format!\",\n      \"format_args!\",\n      \"include_bytes!\",\n      \"include_str!\",\n      \"line!\",\n      \"local_data_key!\",\n      \"module_path!\",\n      \"option_env!\",\n      \"print!\",\n      \"println!\",\n      \"select!\",\n      \"stringify!\",\n      \"try!\",\n      \"unimplemented!\",\n      \"unreachable!\",\n      \"vec!\",\n      \"write!\",\n      \"writeln!\",\n      \"macro_rules!\",\n      \"assert_ne!\",\n      \"debug_assert_ne!\"\n    ];\n    const TYPES3 = [\n      \"i8\",\n      \"i16\",\n      \"i32\",\n      \"i64\",\n      \"i128\",\n      \"isize\",\n      \"u8\",\n      \"u16\",\n      \"u32\",\n      \"u64\",\n      \"u128\",\n      \"usize\",\n      \"f32\",\n      \"f64\",\n      \"str\",\n      \"char\",\n      \"bool\",\n      \"Box\",\n      \"Option\",\n      \"Result\",\n      \"String\",\n      \"Vec\"\n    ];\n    return {\n      name: \"Rust\",\n      aliases: [\"rs\"],\n      keywords: {\n        $pattern: hljs.IDENT_RE + \"!?\",\n        type: TYPES3,\n        keyword: KEYWORDS3,\n        literal: LITERALS3,\n        built_in: BUILTINS\n      },\n      illegal: \"</\",\n      contains: [\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.COMMENT(\"/\\\\*\", \"\\\\*/\", { contains: [\"self\"] }),\n        hljs.inherit(hljs.QUOTE_STRING_MODE, {\n          begin: /b?\"/,\n          illegal: null\n        }),\n        {\n          className: \"symbol\",\n          // negative lookahead to avoid matching `'`\n          begin: /'[a-zA-Z_][a-zA-Z0-9_]*(?!')/\n        },\n        {\n          scope: \"string\",\n          variants: [\n            { begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/ },\n            {\n              begin: /b?'/,\n              end: /'/,\n              contains: [\n                {\n                  scope: \"char.escape\",\n                  match: /\\\\('|\\w|x\\w{2}|u\\w{4}|U\\w{8})/\n                }\n              ]\n            }\n          ]\n        },\n        {\n          className: \"number\",\n          variants: [\n            { begin: \"\\\\b0b([01_]+)\" + NUMBER_SUFFIX },\n            { begin: \"\\\\b0o([0-7_]+)\" + NUMBER_SUFFIX },\n            { begin: \"\\\\b0x([A-Fa-f0-9_]+)\" + NUMBER_SUFFIX },\n            { begin: \"\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)\" + NUMBER_SUFFIX }\n          ],\n          relevance: 0\n        },\n        {\n          begin: [\n            /fn/,\n            /\\s+/,\n            UNDERSCORE_IDENT_RE\n          ],\n          className: {\n            1: \"keyword\",\n            3: \"title.function\"\n          }\n        },\n        {\n          className: \"meta\",\n          begin: \"#!?\\\\[\",\n          end: \"\\\\]\",\n          contains: [\n            {\n              className: \"string\",\n              begin: /\"/,\n              end: /\"/,\n              contains: [\n                hljs.BACKSLASH_ESCAPE\n              ]\n            }\n          ]\n        },\n        {\n          begin: [\n            /let/,\n            /\\s+/,\n            /(?:mut\\s+)?/,\n            UNDERSCORE_IDENT_RE\n          ],\n          className: {\n            1: \"keyword\",\n            3: \"keyword\",\n            4: \"variable\"\n          }\n        },\n        // must come before impl/for rule later\n        {\n          begin: [\n            /for/,\n            /\\s+/,\n            UNDERSCORE_IDENT_RE,\n            /\\s+/,\n            /in/\n          ],\n          className: {\n            1: \"keyword\",\n            3: \"variable\",\n            5: \"keyword\"\n          }\n        },\n        {\n          begin: [\n            /type/,\n            /\\s+/,\n            UNDERSCORE_IDENT_RE\n          ],\n          className: {\n            1: \"keyword\",\n            3: \"title.class\"\n          }\n        },\n        {\n          begin: [\n            /(?:trait|enum|struct|union|impl|for)/,\n            /\\s+/,\n            UNDERSCORE_IDENT_RE\n          ],\n          className: {\n            1: \"keyword\",\n            3: \"title.class\"\n          }\n        },\n        {\n          begin: hljs.IDENT_RE + \"::\",\n          keywords: {\n            keyword: \"Self\",\n            built_in: BUILTINS,\n            type: TYPES3\n          }\n        },\n        {\n          className: \"punctuation\",\n          begin: \"->\"\n        },\n        FUNCTION_INVOKE\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/sql.js\n  function sql(hljs) {\n    const regex = hljs.regex;\n    const COMMENT_MODE = hljs.COMMENT(\"--\", \"$\");\n    const STRING = {\n      scope: \"string\",\n      variants: [\n        {\n          begin: /'/,\n          end: /'/,\n          contains: [{ match: /''/ }]\n        }\n      ]\n    };\n    const QUOTED_IDENTIFIER = {\n      begin: /\"/,\n      end: /\"/,\n      contains: [{ match: /\"\"/ }]\n    };\n    const LITERALS3 = [\n      \"true\",\n      \"false\",\n      // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\n      // \"null\",\n      \"unknown\"\n    ];\n    const MULTI_WORD_TYPES = [\n      \"double precision\",\n      \"large object\",\n      \"with timezone\",\n      \"without timezone\"\n    ];\n    const TYPES3 = [\n      \"bigint\",\n      \"binary\",\n      \"blob\",\n      \"boolean\",\n      \"char\",\n      \"character\",\n      \"clob\",\n      \"date\",\n      \"dec\",\n      \"decfloat\",\n      \"decimal\",\n      \"float\",\n      \"int\",\n      \"integer\",\n      \"interval\",\n      \"nchar\",\n      \"nclob\",\n      \"national\",\n      \"numeric\",\n      \"real\",\n      \"row\",\n      \"smallint\",\n      \"time\",\n      \"timestamp\",\n      \"varchar\",\n      \"varying\",\n      // modifier (character varying)\n      \"varbinary\"\n    ];\n    const NON_RESERVED_WORDS = [\n      \"add\",\n      \"asc\",\n      \"collation\",\n      \"desc\",\n      \"final\",\n      \"first\",\n      \"last\",\n      \"view\"\n    ];\n    const RESERVED_WORDS = [\n      \"abs\",\n      \"acos\",\n      \"all\",\n      \"allocate\",\n      \"alter\",\n      \"and\",\n      \"any\",\n      \"are\",\n      \"array\",\n      \"array_agg\",\n      \"array_max_cardinality\",\n      \"as\",\n      \"asensitive\",\n      \"asin\",\n      \"asymmetric\",\n      \"at\",\n      \"atan\",\n      \"atomic\",\n      \"authorization\",\n      \"avg\",\n      \"begin\",\n      \"begin_frame\",\n      \"begin_partition\",\n      \"between\",\n      \"bigint\",\n      \"binary\",\n      \"blob\",\n      \"boolean\",\n      \"both\",\n      \"by\",\n      \"call\",\n      \"called\",\n      \"cardinality\",\n      \"cascaded\",\n      \"case\",\n      \"cast\",\n      \"ceil\",\n      \"ceiling\",\n      \"char\",\n      \"char_length\",\n      \"character\",\n      \"character_length\",\n      \"check\",\n      \"classifier\",\n      \"clob\",\n      \"close\",\n      \"coalesce\",\n      \"collate\",\n      \"collect\",\n      \"column\",\n      \"commit\",\n      \"condition\",\n      \"connect\",\n      \"constraint\",\n      \"contains\",\n      \"convert\",\n      \"copy\",\n      \"corr\",\n      \"corresponding\",\n      \"cos\",\n      \"cosh\",\n      \"count\",\n      \"covar_pop\",\n      \"covar_samp\",\n      \"create\",\n      \"cross\",\n      \"cube\",\n      \"cume_dist\",\n      \"current\",\n      \"current_catalog\",\n      \"current_date\",\n      \"current_default_transform_group\",\n      \"current_path\",\n      \"current_role\",\n      \"current_row\",\n      \"current_schema\",\n      \"current_time\",\n      \"current_timestamp\",\n      \"current_path\",\n      \"current_role\",\n      \"current_transform_group_for_type\",\n      \"current_user\",\n      \"cursor\",\n      \"cycle\",\n      \"date\",\n      \"day\",\n      \"deallocate\",\n      \"dec\",\n      \"decimal\",\n      \"decfloat\",\n      \"declare\",\n      \"default\",\n      \"define\",\n      \"delete\",\n      \"dense_rank\",\n      \"deref\",\n      \"describe\",\n      \"deterministic\",\n      \"disconnect\",\n      \"distinct\",\n      \"double\",\n      \"drop\",\n      \"dynamic\",\n      \"each\",\n      \"element\",\n      \"else\",\n      \"empty\",\n      \"end\",\n      \"end_frame\",\n      \"end_partition\",\n      \"end-exec\",\n      \"equals\",\n      \"escape\",\n      \"every\",\n      \"except\",\n      \"exec\",\n      \"execute\",\n      \"exists\",\n      \"exp\",\n      \"external\",\n      \"extract\",\n      \"false\",\n      \"fetch\",\n      \"filter\",\n      \"first_value\",\n      \"float\",\n      \"floor\",\n      \"for\",\n      \"foreign\",\n      \"frame_row\",\n      \"free\",\n      \"from\",\n      \"full\",\n      \"function\",\n      \"fusion\",\n      \"get\",\n      \"global\",\n      \"grant\",\n      \"group\",\n      \"grouping\",\n      \"groups\",\n      \"having\",\n      \"hold\",\n      \"hour\",\n      \"identity\",\n      \"in\",\n      \"indicator\",\n      \"initial\",\n      \"inner\",\n      \"inout\",\n      \"insensitive\",\n      \"insert\",\n      \"int\",\n      \"integer\",\n      \"intersect\",\n      \"intersection\",\n      \"interval\",\n      \"into\",\n      \"is\",\n      \"join\",\n      \"json_array\",\n      \"json_arrayagg\",\n      \"json_exists\",\n      \"json_object\",\n      \"json_objectagg\",\n      \"json_query\",\n      \"json_table\",\n      \"json_table_primitive\",\n      \"json_value\",\n      \"lag\",\n      \"language\",\n      \"large\",\n      \"last_value\",\n      \"lateral\",\n      \"lead\",\n      \"leading\",\n      \"left\",\n      \"like\",\n      \"like_regex\",\n      \"listagg\",\n      \"ln\",\n      \"local\",\n      \"localtime\",\n      \"localtimestamp\",\n      \"log\",\n      \"log10\",\n      \"lower\",\n      \"match\",\n      \"match_number\",\n      \"match_recognize\",\n      \"matches\",\n      \"max\",\n      \"member\",\n      \"merge\",\n      \"method\",\n      \"min\",\n      \"minute\",\n      \"mod\",\n      \"modifies\",\n      \"module\",\n      \"month\",\n      \"multiset\",\n      \"national\",\n      \"natural\",\n      \"nchar\",\n      \"nclob\",\n      \"new\",\n      \"no\",\n      \"none\",\n      \"normalize\",\n      \"not\",\n      \"nth_value\",\n      \"ntile\",\n      \"null\",\n      \"nullif\",\n      \"numeric\",\n      \"octet_length\",\n      \"occurrences_regex\",\n      \"of\",\n      \"offset\",\n      \"old\",\n      \"omit\",\n      \"on\",\n      \"one\",\n      \"only\",\n      \"open\",\n      \"or\",\n      \"order\",\n      \"out\",\n      \"outer\",\n      \"over\",\n      \"overlaps\",\n      \"overlay\",\n      \"parameter\",\n      \"partition\",\n      \"pattern\",\n      \"per\",\n      \"percent\",\n      \"percent_rank\",\n      \"percentile_cont\",\n      \"percentile_disc\",\n      \"period\",\n      \"portion\",\n      \"position\",\n      \"position_regex\",\n      \"power\",\n      \"precedes\",\n      \"precision\",\n      \"prepare\",\n      \"primary\",\n      \"procedure\",\n      \"ptf\",\n      \"range\",\n      \"rank\",\n      \"reads\",\n      \"real\",\n      \"recursive\",\n      \"ref\",\n      \"references\",\n      \"referencing\",\n      \"regr_avgx\",\n      \"regr_avgy\",\n      \"regr_count\",\n      \"regr_intercept\",\n      \"regr_r2\",\n      \"regr_slope\",\n      \"regr_sxx\",\n      \"regr_sxy\",\n      \"regr_syy\",\n      \"release\",\n      \"result\",\n      \"return\",\n      \"returns\",\n      \"revoke\",\n      \"right\",\n      \"rollback\",\n      \"rollup\",\n      \"row\",\n      \"row_number\",\n      \"rows\",\n      \"running\",\n      \"savepoint\",\n      \"scope\",\n      \"scroll\",\n      \"search\",\n      \"second\",\n      \"seek\",\n      \"select\",\n      \"sensitive\",\n      \"session_user\",\n      \"set\",\n      \"show\",\n      \"similar\",\n      \"sin\",\n      \"sinh\",\n      \"skip\",\n      \"smallint\",\n      \"some\",\n      \"specific\",\n      \"specifictype\",\n      \"sql\",\n      \"sqlexception\",\n      \"sqlstate\",\n      \"sqlwarning\",\n      \"sqrt\",\n      \"start\",\n      \"static\",\n      \"stddev_pop\",\n      \"stddev_samp\",\n      \"submultiset\",\n      \"subset\",\n      \"substring\",\n      \"substring_regex\",\n      \"succeeds\",\n      \"sum\",\n      \"symmetric\",\n      \"system\",\n      \"system_time\",\n      \"system_user\",\n      \"table\",\n      \"tablesample\",\n      \"tan\",\n      \"tanh\",\n      \"then\",\n      \"time\",\n      \"timestamp\",\n      \"timezone_hour\",\n      \"timezone_minute\",\n      \"to\",\n      \"trailing\",\n      \"translate\",\n      \"translate_regex\",\n      \"translation\",\n      \"treat\",\n      \"trigger\",\n      \"trim\",\n      \"trim_array\",\n      \"true\",\n      \"truncate\",\n      \"uescape\",\n      \"union\",\n      \"unique\",\n      \"unknown\",\n      \"unnest\",\n      \"update\",\n      \"upper\",\n      \"user\",\n      \"using\",\n      \"value\",\n      \"values\",\n      \"value_of\",\n      \"var_pop\",\n      \"var_samp\",\n      \"varbinary\",\n      \"varchar\",\n      \"varying\",\n      \"versioning\",\n      \"when\",\n      \"whenever\",\n      \"where\",\n      \"width_bucket\",\n      \"window\",\n      \"with\",\n      \"within\",\n      \"without\",\n      \"year\"\n    ];\n    const RESERVED_FUNCTIONS = [\n      \"abs\",\n      \"acos\",\n      \"array_agg\",\n      \"asin\",\n      \"atan\",\n      \"avg\",\n      \"cast\",\n      \"ceil\",\n      \"ceiling\",\n      \"coalesce\",\n      \"corr\",\n      \"cos\",\n      \"cosh\",\n      \"count\",\n      \"covar_pop\",\n      \"covar_samp\",\n      \"cume_dist\",\n      \"dense_rank\",\n      \"deref\",\n      \"element\",\n      \"exp\",\n      \"extract\",\n      \"first_value\",\n      \"floor\",\n      \"json_array\",\n      \"json_arrayagg\",\n      \"json_exists\",\n      \"json_object\",\n      \"json_objectagg\",\n      \"json_query\",\n      \"json_table\",\n      \"json_table_primitive\",\n      \"json_value\",\n      \"lag\",\n      \"last_value\",\n      \"lead\",\n      \"listagg\",\n      \"ln\",\n      \"log\",\n      \"log10\",\n      \"lower\",\n      \"max\",\n      \"min\",\n      \"mod\",\n      \"nth_value\",\n      \"ntile\",\n      \"nullif\",\n      \"percent_rank\",\n      \"percentile_cont\",\n      \"percentile_disc\",\n      \"position\",\n      \"position_regex\",\n      \"power\",\n      \"rank\",\n      \"regr_avgx\",\n      \"regr_avgy\",\n      \"regr_count\",\n      \"regr_intercept\",\n      \"regr_r2\",\n      \"regr_slope\",\n      \"regr_sxx\",\n      \"regr_sxy\",\n      \"regr_syy\",\n      \"row_number\",\n      \"sin\",\n      \"sinh\",\n      \"sqrt\",\n      \"stddev_pop\",\n      \"stddev_samp\",\n      \"substring\",\n      \"substring_regex\",\n      \"sum\",\n      \"tan\",\n      \"tanh\",\n      \"translate\",\n      \"translate_regex\",\n      \"treat\",\n      \"trim\",\n      \"trim_array\",\n      \"unnest\",\n      \"upper\",\n      \"value_of\",\n      \"var_pop\",\n      \"var_samp\",\n      \"width_bucket\"\n    ];\n    const POSSIBLE_WITHOUT_PARENS = [\n      \"current_catalog\",\n      \"current_date\",\n      \"current_default_transform_group\",\n      \"current_path\",\n      \"current_role\",\n      \"current_schema\",\n      \"current_transform_group_for_type\",\n      \"current_user\",\n      \"session_user\",\n      \"system_time\",\n      \"system_user\",\n      \"current_time\",\n      \"localtime\",\n      \"current_timestamp\",\n      \"localtimestamp\"\n    ];\n    const COMBOS = [\n      \"create table\",\n      \"insert into\",\n      \"primary key\",\n      \"foreign key\",\n      \"not null\",\n      \"alter table\",\n      \"add constraint\",\n      \"grouping sets\",\n      \"on overflow\",\n      \"character set\",\n      \"respect nulls\",\n      \"ignore nulls\",\n      \"nulls first\",\n      \"nulls last\",\n      \"depth first\",\n      \"breadth first\"\n    ];\n    const FUNCTIONS = RESERVED_FUNCTIONS;\n    const KEYWORDS3 = [\n      ...RESERVED_WORDS,\n      ...NON_RESERVED_WORDS\n    ].filter((keyword) => {\n      return !RESERVED_FUNCTIONS.includes(keyword);\n    });\n    const VARIABLE = {\n      scope: \"variable\",\n      match: /@[a-z0-9][a-z0-9_]*/\n    };\n    const OPERATOR = {\n      scope: \"operator\",\n      match: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\n      relevance: 0\n    };\n    const FUNCTION_CALL = {\n      match: regex.concat(/\\b/, regex.either(...FUNCTIONS), /\\s*\\(/),\n      relevance: 0,\n      keywords: { built_in: FUNCTIONS }\n    };\n    function kws_to_regex(list) {\n      return regex.concat(\n        /\\b/,\n        regex.either(...list.map((kw) => {\n          return kw.replace(/\\s+/, \"\\\\s+\");\n        })),\n        /\\b/\n      );\n    }\n    const MULTI_WORD_KEYWORDS = {\n      scope: \"keyword\",\n      match: kws_to_regex(COMBOS),\n      relevance: 0\n    };\n    function reduceRelevancy(list, {\n      exceptions,\n      when\n    } = {}) {\n      const qualifyFn = when;\n      exceptions = exceptions || [];\n      return list.map((item) => {\n        if (item.match(/\\|\\d+$/) || exceptions.includes(item)) {\n          return item;\n        } else if (qualifyFn(item)) {\n          return `${item}|0`;\n        } else {\n          return item;\n        }\n      });\n    }\n    return {\n      name: \"SQL\",\n      case_insensitive: true,\n      // does not include {} or HTML tags `</`\n      illegal: /[{}]|<\\//,\n      keywords: {\n        $pattern: /\\b[\\w\\.]+/,\n        keyword: reduceRelevancy(KEYWORDS3, { when: (x) => x.length < 3 }),\n        literal: LITERALS3,\n        type: TYPES3,\n        built_in: POSSIBLE_WITHOUT_PARENS\n      },\n      contains: [\n        {\n          scope: \"type\",\n          match: kws_to_regex(MULTI_WORD_TYPES)\n        },\n        MULTI_WORD_KEYWORDS,\n        FUNCTION_CALL,\n        VARIABLE,\n        STRING,\n        QUOTED_IDENTIFIER,\n        hljs.C_NUMBER_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        COMMENT_MODE,\n        OPERATOR\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/diff.js\n  function diff(hljs) {\n    const regex = hljs.regex;\n    return {\n      name: \"Diff\",\n      aliases: [\"patch\"],\n      contains: [\n        {\n          className: \"meta\",\n          relevance: 10,\n          match: regex.either(\n            /^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/,\n            /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/,\n            /^--- +\\d+,\\d+ +----$/\n          )\n        },\n        {\n          className: \"comment\",\n          variants: [\n            {\n              begin: regex.either(\n                /Index: /,\n                /^index/,\n                /={3,}/,\n                /^-{3}/,\n                /^\\*{3} /,\n                /^\\+{3}/,\n                /^diff --git/\n              ),\n              end: /$/\n            },\n            { match: /^\\*{15}$/ }\n          ]\n        },\n        {\n          className: \"addition\",\n          begin: /^\\+/,\n          end: /$/\n        },\n        {\n          className: \"deletion\",\n          begin: /^-/,\n          end: /$/\n        },\n        {\n          className: \"addition\",\n          begin: /^!/,\n          end: /$/\n        }\n      ]\n    };\n  }\n\n  // node_modules/highlight.js/es/languages/dockerfile.js\n  function dockerfile(hljs) {\n    const KEYWORDS3 = [\n      \"from\",\n      \"maintainer\",\n      \"expose\",\n      \"env\",\n      \"arg\",\n      \"user\",\n      \"onbuild\",\n      \"stopsignal\"\n    ];\n    return {\n      name: \"Dockerfile\",\n      aliases: [\"docker\"],\n      case_insensitive: true,\n      keywords: KEYWORDS3,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.NUMBER_MODE,\n        {\n          beginKeywords: \"run cmd entrypoint volume add copy workdir label healthcheck shell\",\n          starts: {\n            end: /[^\\\\]$/,\n            subLanguage: \"bash\"\n          }\n        }\n      ],\n      illegal: \"</\"\n    };\n  }\n\n  // src/lib/utils/highlight.ts\n  async function loadHighlightJsStyle() {\n    try {\n      if (document.getElementById(\"hljs-theme-style\"))\n        return;\n      const link = document.createElement(\"link\");\n      link.id = \"hljs-theme-style\";\n      link.rel = \"stylesheet\";\n      link.href = \"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github.min.css\";\n      document.head.appendChild(link);\n    } catch (error) {\n      console.error(\"Failed to load highlight.js styles:\", error);\n    }\n  }\n\n  // src/lib/utils/markdownRenderer.ts\n  core_default.registerLanguage(\"javascript\", javascript);\n  core_default.registerLanguage(\"typescript\", typescript);\n  core_default.registerLanguage(\"json\", json);\n  core_default.registerLanguage(\"yaml\", yaml);\n  core_default.registerLanguage(\"markdown\", markdown);\n  core_default.registerLanguage(\"html\", xml);\n  core_default.registerLanguage(\"xml\", xml);\n  core_default.registerLanguage(\"css\", css);\n  core_default.registerLanguage(\"scss\", scss);\n  core_default.registerLanguage(\"bash\", bash);\n  core_default.registerLanguage(\"shell\", bash);\n  core_default.registerLanguage(\"sh\", bash);\n  core_default.registerLanguage(\"python\", python);\n  core_default.registerLanguage(\"java\", java);\n  core_default.registerLanguage(\"go\", go);\n  core_default.registerLanguage(\"rust\", rust);\n  core_default.registerLanguage(\"sql\", sql);\n  core_default.registerLanguage(\"diff\", diff);\n  core_default.registerLanguage(\"dockerfile\", dockerfile);\n  var SafeMarkdownRenderer = class {\n    constructor(options = {}) {\n      __publicField(this, \"options\");\n      __publicField(this, \"md\");\n      // 允许的 HTML 标签白名单\n      __publicField(this, \"defaultAllowedTags\", [\n        \"h1\",\n        \"h2\",\n        \"h3\",\n        \"h4\",\n        \"h5\",\n        \"h6\",\n        \"p\",\n        \"br\",\n        \"strong\",\n        \"em\",\n        \"code\",\n        \"pre\",\n        \"ul\",\n        \"ol\",\n        \"li\",\n        \"a\",\n        \"blockquote\"\n      ]);\n      this.options = {\n        enableCodeHighlight: true,\n        allowedTags: this.defaultAllowedTags,\n        ...options\n      };\n      this.md = new import_markdown_it.default({\n        html: false,\n        // 禁用 HTML 以防止 XSS 攻击\n        linkify: true,\n        breaks: true,\n        // 使用 highlight.js 在渲染阶段生成高亮后的 HTML\n        highlight: (str, lang) => {\n          const language = (lang || \"\").toLowerCase();\n          if (language && core_default.getLanguage(language)) {\n            try {\n              const { value } = core_default.highlight(str, {\n                language,\n                ignoreIllegals: true\n              });\n              return `<pre class=\"code-block\"><code class=\"hljs language-${language}\">${value}</code></pre>`;\n            } catch (e) {\n              console.error(`Error highlighting code block with language ${language}:`, e);\n            }\n          }\n          const escaped = this.escapeHtml(str);\n          return `<pre class=\"code-block\"><code class=\"hljs\">${escaped}</code></pre>`;\n        }\n      });\n      const self = this;\n      const defaultFence = this.md.renderer.rules.fence?.bind(this.md.renderer);\n      this.md.renderer.rules.fence = function(tokens, idx, options2, env, slf) {\n        const token = tokens[idx];\n        const info = (token.info || \"\").trim().toLowerCase();\n        const content = token.content || \"\";\n        if (info === \"mermaid\" || info === \"sequencediagram\") {\n          const diagramId = `mermaid-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n          return `<div class=\"mermaid-diagram\" id=\"${diagramId}\">${self.escapeHtml(content)}</div>`;\n        }\n        if (defaultFence) {\n          return defaultFence(tokens, idx, options2, env, slf);\n        }\n        const lang = info || \"text\";\n        const escaped = self.escapeHtml(content);\n        return `<pre class=\"code-block\"><code class=\"hljs language-${lang}\">${escaped}</code></pre>`;\n      };\n      const defaultImage = this.md.renderer.rules.image?.bind(this.md.renderer);\n      this.md.renderer.rules.image = function(tokens, idx, options2, env, slf) {\n        const token = tokens[idx];\n        const src = token.attrGet(\"src\") || \"\";\n        const alt = token.content || token.attrGet(\"alt\") || \"\";\n        const isAllowedSrc = /^https?:\\/\\//.test(src) || src.startsWith(\"/\") || src.startsWith(\"./\") || src.startsWith(\"../\");\n        const isDangerousProtocol = /^(data|javascript|vbscript|file|mailto|tel):/i.test(src);\n        if (!isAllowedSrc || isDangerousProtocol) {\n          return `<span class=\"md-image-blocked\">${self.escapeHtml(alt)}</span>`;\n        }\n        token.attrSet(\"loading\", \"lazy\");\n        token.attrSet(\"decoding\", \"async\");\n        token.attrSet(\"referrerpolicy\", \"no-referrer\");\n        token.attrSet(\"alt\", alt);\n        token.attrJoin(\"class\", \"markdown-image\");\n        if (defaultImage) {\n          return defaultImage(tokens, idx, options2, env, slf);\n        }\n        return slf.renderToken(tokens, idx, options2);\n      };\n    }\n    /**\n     * 渲染 Markdown 为 HTML\n     */\n    render(markdown2) {\n      if (!markdown2 || typeof markdown2 !== \"string\") {\n        return \"\";\n      }\n      const html = this.md.render(markdown2);\n      const sanitizedHtml = import_isomorphic_dompurify.default.sanitize(html, {\n        ALLOWED_TAGS: [\n          \"h1\",\n          \"h2\",\n          \"h3\",\n          \"h4\",\n          \"h5\",\n          \"h6\",\n          \"p\",\n          \"br\",\n          \"strong\",\n          \"em\",\n          \"code\",\n          \"pre\",\n          \"ul\",\n          \"ol\",\n          \"li\",\n          \"a\",\n          \"blockquote\",\n          \"div\",\n          \"img\"\n        ],\n        ALLOWED_ATTR: [\n          \"class\",\n          \"id\",\n          \"href\",\n          \"target\",\n          \"rel\",\n          // img 相关\n          \"src\",\n          \"alt\",\n          \"title\",\n          \"loading\",\n          \"referrerpolicy\",\n          \"decoding\",\n          \"width\",\n          \"height\",\n          \"srcset\",\n          \"sizes\"\n        ],\n        ALLOW_DATA_ATTR: false\n      });\n      return sanitizedHtml;\n    }\n    /**\n     * 转义 HTML 字符以防止 XSS\n     */\n    escapeHtml(text) {\n      const escapeMap = {\n        \"&\": \"&amp;\",\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\",\n        '\"': \"&quot;\",\n        \"'\": \"&#39;\"\n      };\n      return String(text).replace(/[&<>\"']/g, (char) => escapeMap[char] || char);\n    }\n    /**\n     * 保留已经处理的 HTML 标签，对其他内容进行转义\n     */\n    preserveHtmlTags(text) {\n      if (text.includes(\"<\") && text.includes(\">\")) {\n        return text;\n      }\n      return this.escapeHtml(text);\n    }\n    /**\n     * 渲染标题\n     */\n    renderHeaders(html) {\n      html = html.replace(/^######\\s(.+)$/gm, (match, title) => `<h6>${this.escapeHtml(title.trim())}</h6>`);\n      html = html.replace(/^#####\\s(.+)$/gm, (match, title) => `<h5>${this.escapeHtml(title.trim())}</h5>`);\n      html = html.replace(/^####\\s(.+)$/gm, (match, title) => `<h4>${this.escapeHtml(title.trim())}</h4>`);\n      html = html.replace(/^###\\s(.+)$/gm, (match, title) => `<h3>${this.escapeHtml(title.trim())}</h3>`);\n      html = html.replace(/^##\\s(.+)$/gm, (match, title) => `<h2>${this.escapeHtml(title.trim())}</h2>`);\n      html = html.replace(/^#\\s(.+)$/gm, (match, title) => `<h1>${this.escapeHtml(title.trim())}</h1>`);\n      return html;\n    }\n    /**\n     * 渲染代码块\n     */\n    renderCodeBlocks(html) {\n      console.log(\"renderCodeBlocks called, input length:\", html.length);\n      const hasCodeBlocks = html.includes(\"```\");\n      console.log(\"Contains code blocks:\", hasCodeBlocks);\n      if (hasCodeBlocks) {\n        const codeBlockMatches = html.match(/```[\\s\\S]*?```/g);\n        console.log(\"Found code block matches:\", codeBlockMatches?.length || 0);\n        if (codeBlockMatches) {\n          codeBlockMatches.forEach((match, index) => {\n            console.log(`Code block ${index}:`, match.substring(0, 100) + \"...\");\n          });\n        }\n      }\n      html = html.replace(/```([^`]*?)```/gs, (match, codeWithLang) => {\n        const lines = codeWithLang.trim().split(\"\\n\");\n        const firstLine = lines[0] || \"\";\n        const language = firstLine.toLowerCase().trim();\n        const code = lines.slice(1).join(\"\\n\").trim();\n        console.log(\"Processing code block:\", { language, codeLength: code.length });\n        if (language === \"mermaid\" || language === \"sequencediagram\") {\n          console.log(\"Detected Mermaid diagram!\");\n          return this.renderMermaidDiagram(code);\n        }\n        console.log(\"Rendering as regular code block\");\n        return `<pre><code class=\"language-${language}\">${this.escapeHtml(code)}</code></pre>`;\n      });\n      console.log(\"renderCodeBlocks finished, output length:\", html.length);\n      return html;\n    }\n    /**\n     * 渲染 Mermaid 图表\n     */\n    renderMermaidDiagram(code) {\n      const diagramId = `mermaid-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      console.log(\"Rendering Mermaid diagram:\", { diagramId, code: code.substring(0, 100) + \"...\" });\n      return `<div class=\"mermaid-diagram\" id=\"${diagramId}\">${this.escapeHtml(code)}</div>`;\n    }\n    /**\n     * 渲染行内代码\n     */\n    renderInlineCode(html) {\n      html = html.replace(/`([^`\\n]+)`/g, (match, code) => {\n        if (html.indexOf(\"<pre><code>\") !== -1 && html.indexOf(\"</code></pre>\") !== -1) {\n          const preStart = html.lastIndexOf(\"<pre><code>\", html.indexOf(match));\n          const preEnd = html.indexOf(\"</code></pre>\", html.indexOf(match));\n          if (preStart !== -1 && preEnd !== -1 && preStart < html.indexOf(match) && html.indexOf(match) < preEnd) {\n            return match;\n          }\n        }\n        return `<code>${this.escapeHtml(code)}</code>`;\n      });\n      return html;\n    }\n    /**\n     * 渲染粗体和斜体\n     */\n    renderBoldItalic(html) {\n      html = html.replace(/\\*\\*([^*\\n]+)\\*\\*/g, \"<strong>$1</strong>\");\n      html = html.replace(/\\*([^*\\n]+)\\*/g, \"<em>$1</em>\");\n      return html;\n    }\n    /**\n     * 渲染链接\n     */\n    renderLinks(html) {\n      html = html.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, (match, text, url) => {\n        if (url.match(/^https?:\\/\\//)) {\n          return `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${text}</a>`;\n        }\n        return match;\n      });\n      return html;\n    }\n    /**\n     * 渲染列表\n     */\n    renderLists(html) {\n      const lines = html.split(\"\\n\");\n      const result = [];\n      let inUnorderedList = false;\n      let inOrderedList = false;\n      let listItems = [];\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        const isUnorderedListItem = /^[*+-]\\s(.+)$/.test(line);\n        const isOrderedListItem = /^\\d+\\.\\s(.+)$/.test(line);\n        if (isUnorderedListItem) {\n          if (inOrderedList) {\n            result.push(`<ol>${listItems.join(\"\")}</ol>`);\n            inOrderedList = false;\n            listItems = [];\n          }\n          if (!inUnorderedList) {\n            inUnorderedList = true;\n            listItems = [];\n          }\n          const content = line.replace(/^[*+-]\\s/, \"\");\n          const formattedContent = content.replace(/\\n/g, \"<br>\");\n          listItems.push(`<li>${formattedContent}</li>`);\n        } else if (isOrderedListItem) {\n          if (inUnorderedList) {\n            result.push(`<ul>${listItems.join(\"\")}</ul>`);\n            inUnorderedList = false;\n            listItems = [];\n          }\n          if (!inOrderedList) {\n            inOrderedList = true;\n            listItems = [];\n          }\n          const content = line.replace(/^\\d+\\.\\s/, \"\");\n          listItems.push(`<li>${content}</li>`);\n        } else {\n          if (inUnorderedList) {\n            result.push(`<ul>${listItems.join(\"\")}</ul>`);\n            inUnorderedList = false;\n            listItems = [];\n          } else if (inOrderedList) {\n            result.push(`<ol>${listItems.join(\"\")}</ol>`);\n            inOrderedList = false;\n            listItems = [];\n          }\n          result.push(line);\n        }\n      }\n      if (inUnorderedList && listItems.length > 0) {\n        result.push(`<ul>${listItems.join(\"\")}</ul>`);\n      } else if (inOrderedList && listItems.length > 0) {\n        result.push(`<ol>${listItems.join(\"\")}</ol>`);\n      }\n      return result.join(\"\\n\");\n    }\n    /**\n     * 渲染段落\n     */\n    renderParagraphs(html) {\n      const paragraphs = html.split(\"\\n\\n\").filter((p) => p.trim());\n      return paragraphs.map((paragraph) => {\n        const trimmed = paragraph.trim();\n        if (trimmed.match(/^<(h[1-6]|ul|ol|pre|blockquote|div)/)) {\n          return trimmed;\n        }\n        if (!trimmed) {\n          return \"\";\n        }\n        let content = trimmed;\n        const hasHtmlTags = /<[^>]+>/.test(content);\n        if (!hasHtmlTags) {\n          content = this.escapeHtml(content);\n          content = content.replace(/\\n/g, \"<br>\");\n        } else {\n          content = trimmed;\n        }\n        return `<p>${content}</p>`;\n      }).join(\"\\n\\n\");\n    }\n    /**\n     * 添加代码高亮（简单实现）\n     */\n    highlightCode(container) {\n      this.ensureHighlightCss();\n      this.renderMermaidDiagrams(container);\n    }\n    /**\n     * 动态加载 highlight.js 与默认样式\n     */\n    loadHighlightJsLibrary() {\n      return new Promise((resolve) => {\n        this.ensureHighlightCss();\n        resolve();\n      });\n    }\n    /**\n     * 确保高亮样式已加载（已移除 CDN 依赖）\n     */\n    ensureHighlightCss() {\n      loadHighlightJsStyle().catch(() => {\n        if (!document.getElementById(\"hljs-style-note\")) {\n          const note = document.createElement(\"style\");\n          note.id = \"hljs-style-note\";\n          note.textContent = \"/* highlight.js styles should be bundled locally */\";\n          document.head.appendChild(note);\n        }\n      });\n    }\n    /**\n     * 渲染 Mermaid 图表\n     */\n    renderMermaidDiagrams(container) {\n      const mermaidDiagrams = container.querySelectorAll(\".mermaid-diagram\");\n      if (mermaidDiagrams.length === 0)\n        return;\n      console.log(`Found ${mermaidDiagrams.length} Mermaid diagrams to render`);\n      this.loadMermaidLibrary().then(() => {\n        console.log(\"Mermaid library loaded successfully\");\n        mermaidDiagrams.forEach((diagram, index) => {\n          console.log(`Initializing Mermaid diagram ${index + 1}/${mermaidDiagrams.length}`);\n          this.initializeMermaidDiagram(diagram);\n        });\n      }).catch((error) => {\n        console.error(\"Failed to load Mermaid library:\", error);\n        mermaidDiagrams.forEach((diagram) => {\n          const code = diagram.textContent || \"\";\n          diagram.innerHTML = `<pre><code>${code}</code></pre>`;\n          diagram.classList.add(\"mermaid-fallback\");\n        });\n      });\n    }\n    /**\n     * 动态加载 Mermaid 库\n     */\n    loadMermaidLibrary() {\n      return new Promise((resolve, reject) => {\n        if (window.mermaid) {\n          console.log(\"Mermaid library already loaded\");\n          resolve();\n          return;\n        }\n        console.log(\"Loading Mermaid library from CDN...\");\n        const script = document.createElement(\"script\");\n        script.src = \"https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.min.js\";\n        script.async = true;\n        script.onload = () => {\n          console.log(\"Mermaid library script loaded, initializing...\");\n          try {\n            const mermaid = window.mermaid;\n            mermaid.initialize({\n              startOnLoad: false,\n              theme: \"default\",\n              securityLevel: \"loose\",\n              fontFamily: \"monospace\"\n            });\n            console.log(\"Mermaid library initialized\");\n            resolve();\n          } catch (error) {\n            console.error(\"Error initializing Mermaid:\", error);\n            reject(error);\n          }\n        };\n        script.onerror = (error) => {\n          console.error(\"Failed to load Mermaid script:\", error);\n          reject(new Error(\"Failed to load Mermaid library\"));\n        };\n        document.head.appendChild(script);\n      });\n    }\n    /**\n     * 初始化单个 Mermaid 图表\n     */\n    initializeMermaidDiagram(element) {\n      const mermaid = window.mermaid;\n      if (!mermaid) {\n        console.error(\"Mermaid library not available\");\n        return;\n      }\n      const code = element.textContent || \"\";\n      const id = element.id;\n      console.log(`Rendering diagram ${id}:`, code.substring(0, 100) + \"...\");\n      try {\n        element.textContent = \"\";\n        element.innerHTML = '<div style=\"padding: 20px; color: #666;\">\\u6B63\\u5728\\u6E32\\u67D3\\u56FE\\u8868...</div>';\n        mermaid.render(id + \"-svg\", code).then((result) => {\n          console.log(`Successfully rendered diagram ${id}`);\n          element.innerHTML = result.svg;\n          element.classList.add(\"mermaid-rendered\");\n          element.addEventListener(\"click\", () => {\n            this.showMermaidFullscreen(result.svg, id);\n          });\n        }).catch((error) => {\n          console.error(`Mermaid rendering error for ${id}:`, error);\n          element.innerHTML = `\n                    <div style=\"color: #dc2626; margin-bottom: 8px;\">\\u26A0\\uFE0F \\u56FE\\u8868\\u6E32\\u67D3\\u5931\\u8D25</div>\n                    <pre><code>${this.escapeHtml(code)}</code></pre>\n                `;\n          element.classList.add(\"mermaid-error\");\n        });\n      } catch (error) {\n        console.error(`Mermaid initialization error for ${id}:`, error);\n        element.innerHTML = `\n                <div style=\"color: #dc2626; margin-bottom: 8px;\">\\u26A0\\uFE0F \\u56FE\\u8868\\u521D\\u59CB\\u5316\\u5931\\u8D25</div>\n                <pre><code>${this.escapeHtml(code)}</code></pre>\n            `;\n        element.classList.add(\"mermaid-error\");\n      }\n    }\n    /**\n     * 显示 Mermaid 图表全屏模式\n     */\n    showMermaidFullscreen(svgContent, diagramId) {\n      const modal = document.createElement(\"div\");\n      modal.className = \"mermaid-fullscreen-modal\";\n      modal.innerHTML = `\n            <div class=\"mermaid-fullscreen-content\">\n                <button class=\"mermaid-fullscreen-close\" onclick=\"this.closest('.mermaid-fullscreen-modal').remove()\">&times;</button>\n                ${svgContent}\n            </div>\n        `;\n      modal.addEventListener(\"click\", (e) => {\n        if (e.target === modal) {\n          modal.remove();\n        }\n      });\n      const handleEscape = (e) => {\n        if (e.key === \"Escape\") {\n          modal.remove();\n          document.removeEventListener(\"keydown\", handleEscape);\n        }\n      };\n      document.addEventListener(\"keydown\", handleEscape);\n      document.body.appendChild(modal);\n    }\n    /**\n     * 应用基础语法高亮\n     */\n    applyBasicHighlighting(codeBlock) {\n      let code = codeBlock.textContent || \"\";\n      const keywords = [\n        \"function\",\n        \"const\",\n        \"let\",\n        \"var\",\n        \"if\",\n        \"else\",\n        \"for\",\n        \"while\",\n        \"return\",\n        \"class\",\n        \"interface\",\n        \"type\",\n        \"import\",\n        \"export\",\n        \"async\",\n        \"await\",\n        \"try\",\n        \"catch\",\n        \"throw\",\n        \"new\"\n      ];\n      keywords.forEach((keyword) => {\n        const regex = new RegExp(`\\\\b${keyword}\\\\b`, \"g\");\n        code = code.replace(regex, `<span class=\"keyword\">${keyword}</span>`);\n      });\n      code = code.replace(/([\"'])((?:(?!\\1)[^\\\\]|\\\\.)*)(\\1)/g, '<span class=\"string\">$1$2$3</span>');\n      code = code.replace(/(\\/\\/.*$)/gm, '<span class=\"comment\">$1</span>');\n      code = code.replace(/(\\/\\*[\\s\\S]*?\\*\\/)/g, '<span class=\"comment\">$1</span>');\n      codeBlock.innerHTML = code;\n    }\n  };\n\n  // src/client/shared/services/share/StyleManager.ts\n  var StyleManager = class {\n    // Difficulty color mapping\n    getDifficultyColor(difficulty) {\n      switch (difficulty) {\n        case \"beginner\":\n          return \"#10b981\";\n        case \"intermediate\":\n          return \"#f59e0b\";\n        case \"expert\":\n          return \"#a855f7\";\n        default:\n          return \"#6b7280\";\n      }\n    }\n    // Tip type color schemes\n    getTipColors(tipType) {\n      switch (tipType) {\n        case \"success\":\n          return {\n            background: \"rgba(16, 185, 129, 0.08)\",\n            border: \"#10b981\",\n            text: \"#065f46\"\n          };\n        case \"info\":\n          return {\n            background: \"rgba(59, 130, 246, 0.08)\",\n            border: \"#3b82f6\",\n            text: \"#1e40af\"\n          };\n        case \"warning\":\n          return {\n            background: \"rgba(245, 158, 11, 0.08)\",\n            border: \"#f59e0b\",\n            text: \"#92400e\"\n          };\n        case \"expert\":\n          return {\n            background: \"rgba(168, 85, 247, 0.08)\",\n            border: \"#a855f7\",\n            text: \"#6b21a8\"\n          };\n        case \"tip\":\n        default:\n          return {\n            background: \"rgba(6, 182, 212, 0.08)\",\n            border: \"#06b6d4\",\n            text: \"#0e7490\"\n          };\n      }\n    }\n    // Enhanced gradient configurations\n    getBackgroundGradient() {\n      return {\n        type: \"linear\",\n        colors: [\"#ffffff\", \"#fafbfc\", \"#f8fafc\"],\n        stops: [0, 0.6, 1]\n      };\n    }\n    getHeaderGradient() {\n      return {\n        type: \"linear\",\n        colors: [\"#f0f9ff\", \"#e0f2fe\", \"#f1f5f9\"],\n        stops: [0, 0.5, 1]\n      };\n    }\n    getIconGradient() {\n      return {\n        type: \"radial\",\n        colors: [\"#ffffff\", \"#e0f2fe\", \"#bae6fd\"],\n        stops: [0, 0.7, 1]\n      };\n    }\n    // Brand colors and styling\n    getBrandColors() {\n      return {\n        primary: \"#0ea5e9\",\n        // sky-500\n        primaryLight: \"#38bdf8\",\n        // sky-400\n        accent: \"#0284c7\",\n        // sky-600\n        background: \"rgba(14, 165, 233, 0.08)\",\n        text: \"#0ea5e9\"\n      };\n    }\n    // Typography scale\n    getFontSizes() {\n      return {\n        title: 48,\n        subtitle: 32,\n        body: 28,\n        caption: 24,\n        small: 20\n      };\n    }\n    // Spacing scale\n    getSpacing() {\n      return {\n        xs: 8,\n        sm: 12,\n        md: 16,\n        lg: 24,\n        xl: 32,\n        xxl: 48\n      };\n    }\n    // Border radius scale\n    getBorderRadius() {\n      return {\n        sm: 8,\n        md: 12,\n        lg: 16,\n        xl: 20,\n        xxl: 24\n      };\n    }\n    // Shadow configurations\n    getShadowConfig() {\n      return {\n        subtle: \"rgba(0, 0, 0, 0.05)\",\n        medium: \"rgba(0, 0, 0, 0.1)\",\n        strong: \"rgba(0, 0, 0, 0.15)\"\n      };\n    }\n    // Helper method to get tip type by index for cycling\n    getTipTypeByIndex(index) {\n      const types = [\"success\", \"info\", \"warning\", \"tip\", \"expert\"];\n      return types[index % types.length];\n    }\n    // Difficulty text mapping\n    mapDifficulty(difficulty) {\n      switch (difficulty) {\n        case \"beginner\":\n          return \"\\u5165\\u95E8\";\n        case \"intermediate\":\n          return \"\\u8FDB\\u9636\";\n        case \"expert\":\n          return \"\\u4E13\\u5BB6\";\n        default:\n          return difficulty;\n      }\n    }\n  };\n\n  // src/client/shared/services/share/CanvasRenderer.ts\n  var CanvasRenderer = class {\n    constructor() {\n      __publicField(this, \"styleManager\");\n      this.styleManager = new StyleManager();\n    }\n    // Enhanced gradient creation\n    createGradient(ctx, config, bounds) {\n      let gradient;\n      if (config.type === \"linear\") {\n        gradient = ctx.createLinearGradient(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\n      } else {\n        const centerX = bounds.x + bounds.width / 2;\n        const centerY = bounds.y + bounds.height / 2;\n        const radius = Math.max(bounds.width, bounds.height) / 2;\n        gradient = ctx.createRadialGradient(centerX, centerY, 0, centerX, centerY, radius);\n      }\n      config.colors.forEach((color, index) => {\n        const stop = config.stops?.[index] ?? index / (config.colors.length - 1);\n        gradient.addColorStop(stop, color);\n      });\n      return gradient;\n    }\n    // Enhanced background rendering with multiple layers\n    renderBackground(renderCtx) {\n      const { ctx, width, height } = renderCtx;\n      const bgGradient = this.createGradient(ctx, this.styleManager.getBackgroundGradient(), { x: 0, y: 0, width, height });\n      ctx.fillStyle = bgGradient;\n      ctx.fillRect(0, 0, width, height);\n      this.addTextureOverlay(ctx, width, height);\n    }\n    // Enhanced header with improved visual hierarchy\n    renderHeader(renderCtx) {\n      const { ctx, width } = renderCtx;\n      const spacing = this.styleManager.getSpacing();\n      const headerHeight = 200;\n      const headerGradient = this.createGradient(ctx, this.styleManager.getHeaderGradient(), { x: 0, y: 0, width, height: headerHeight });\n      ctx.fillStyle = headerGradient;\n      ctx.fillRect(0, 0, width, headerHeight);\n      const brandColors = this.styleManager.getBrandColors();\n      const accentGrad = ctx.createLinearGradient(0, 0, width, 0);\n      accentGrad.addColorStop(0, brandColors.primary);\n      accentGrad.addColorStop(0.5, brandColors.primaryLight);\n      accentGrad.addColorStop(1, brandColors.accent);\n      ctx.fillStyle = accentGrad;\n      ctx.fillRect(0, 0, width, 6);\n      const shadowGrad = ctx.createLinearGradient(0, headerHeight - 20, 0, headerHeight);\n      shadowGrad.addColorStop(0, \"rgba(0, 0, 0, 0)\");\n      shadowGrad.addColorStop(1, this.styleManager.getShadowConfig().subtle);\n      ctx.fillStyle = shadowGrad;\n      ctx.fillRect(0, headerHeight - 20, width, 20);\n      return headerHeight;\n    }\n    // Enhanced icon rendering with better visual effects\n    renderIcon(renderCtx, icon, x, y, radius) {\n      const { ctx } = renderCtx;\n      const spacing = this.styleManager.getSpacing();\n      const iconGradient = this.createGradient(ctx, this.styleManager.getIconGradient(), { x: x - radius, y: y - radius, width: radius * 2, height: radius * 2 });\n      ctx.fillStyle = iconGradient;\n      this.roundRect(ctx, x - radius, y - radius, radius * 2, radius * 2, this.styleManager.getBorderRadius().xl);\n      ctx.fill();\n      ctx.save();\n      ctx.globalCompositeOperation = \"multiply\";\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.03)\";\n      this.roundRect(ctx, x - radius + 2, y - radius + 2, radius * 2 - 4, radius * 2 - 4, this.styleManager.getBorderRadius().lg);\n      ctx.fill();\n      ctx.restore();\n      const brandColors = this.styleManager.getBrandColors();\n      ctx.strokeStyle = brandColors.primary;\n      ctx.lineWidth = 2;\n      ctx.globalAlpha = 0.3;\n      this.roundRect(ctx, x - radius, y - radius, radius * 2, radius * 2, this.styleManager.getBorderRadius().xl);\n      ctx.stroke();\n      ctx.globalAlpha = 1;\n      const fontSize = this.styleManager.getFontSizes();\n      ctx.font = `${fontSize.title}px system-ui, -apple-system, Segoe UI, Roboto`;\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillStyle = \"#0f172a\";\n      ctx.save();\n      ctx.shadowColor = \"rgba(0, 0, 0, 0.1)\";\n      ctx.shadowBlur = 2;\n      ctx.shadowOffsetY = 1;\n      ctx.fillText(icon, x, y + 2);\n      ctx.restore();\n    }\n    // Enhanced difficulty badge rendering\n    renderDifficultyBadge(renderCtx, difficulty, x, y) {\n      const { ctx } = renderCtx;\n      const fontSize = this.styleManager.getFontSizes();\n      const spacing = this.styleManager.getSpacing();\n      const radius = this.styleManager.getBorderRadius();\n      const diffText = this.styleManager.mapDifficulty(difficulty);\n      const diffColor = this.styleManager.getDifficultyColor(difficulty);\n      ctx.font = `bold ${fontSize.caption}px ui-sans-serif, -apple-system, system-ui`;\n      const textWidth = ctx.measureText(diffText).width;\n      const badgeW = textWidth + spacing.lg;\n      const badgeH = spacing.xl;\n      const badgeGrad = ctx.createLinearGradient(x, y, x, y + badgeH);\n      badgeGrad.addColorStop(0, diffColor);\n      badgeGrad.addColorStop(1, this.adjustColorBrightness(diffColor, -0.1));\n      ctx.fillStyle = badgeGrad;\n      this.roundRect(ctx, x, y, badgeW, badgeH, radius.md);\n      ctx.fill();\n      ctx.fillStyle = \"rgba(255, 255, 255, 0.2)\";\n      this.roundRect(ctx, x, y, badgeW, badgeH / 2, radius.md);\n      ctx.fill();\n      ctx.save();\n      ctx.shadowColor = \"rgba(0, 0, 0, 0.3)\";\n      ctx.shadowBlur = 1;\n      ctx.shadowOffsetY = 1;\n      ctx.fillStyle = \"#ffffff\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(diffText, x + badgeW / 2, y + badgeH / 2);\n      ctx.restore();\n      return { width: badgeW, height: badgeH };\n    }\n    // Enhanced tip rendering with better visual hierarchy\n    renderTip(renderCtx, text, x, y, maxWidth, tipType = \"tip\") {\n      const { ctx } = renderCtx;\n      const spacing = this.styleManager.getSpacing();\n      const radius = this.styleManager.getBorderRadius();\n      const fontSize = this.styleManager.getFontSizes();\n      const lineHeight = spacing.xl + spacing.sm;\n      const padding = spacing.md;\n      const lines = this.splitLines(ctx, text, maxWidth - padding * 2);\n      const boxHeight = lines.length * lineHeight + padding * 2;\n      const tipColors = this.styleManager.getTipColors(tipType);\n      const tipGrad = ctx.createLinearGradient(x, y, x, y + boxHeight);\n      tipGrad.addColorStop(0, tipColors.background);\n      tipGrad.addColorStop(1, this.adjustColorOpacity(tipColors.background, 0.5));\n      ctx.fillStyle = tipGrad;\n      this.roundRect(ctx, x, y, maxWidth, boxHeight, radius.md);\n      ctx.fill();\n      const borderGrad = ctx.createLinearGradient(x, y, x, y + boxHeight);\n      borderGrad.addColorStop(0, tipColors.border);\n      borderGrad.addColorStop(1, this.adjustColorBrightness(tipColors.border, -0.2));\n      ctx.fillStyle = borderGrad;\n      this.roundRect(ctx, x, y, 6, boxHeight, 3);\n      ctx.fill();\n      ctx.fillStyle = tipColors.text;\n      ctx.font = `${fontSize.body}px ui-sans-serif, -apple-system, system-ui`;\n      let textY = y + padding + fontSize.body;\n      lines.forEach((line) => {\n        ctx.fillText(line, x + padding + spacing.sm, textY);\n        textY += lineHeight;\n      });\n      return y + boxHeight;\n    }\n    // Enhanced tag rendering with better visual effects\n    renderTags(renderCtx, tags, x, y, maxWidth) {\n      const { ctx } = renderCtx;\n      const fontSize = this.styleManager.getFontSizes();\n      const spacing = this.styleManager.getSpacing();\n      const radius = this.styleManager.getBorderRadius();\n      ctx.font = `${fontSize.caption + 2}px ui-sans-serif, -apple-system, system-ui`;\n      let currentX = x;\n      let currentY = y;\n      const tagHeight = spacing.xl;\n      const lineGap = spacing.sm;\n      tags.forEach((tag, index) => {\n        const textWidth = ctx.measureText(tag).width;\n        const tagWidth = textWidth + spacing.lg;\n        if (currentX + tagWidth > x + maxWidth) {\n          currentX = x;\n          currentY += tagHeight + lineGap;\n        }\n        const tagGrad = ctx.createLinearGradient(currentX, currentY, currentX, currentY + tagHeight);\n        tagGrad.addColorStop(0, \"#f8fafc\");\n        tagGrad.addColorStop(1, \"#e2e8f0\");\n        ctx.fillStyle = tagGrad;\n        this.roundRect(ctx, currentX, currentY, tagWidth, tagHeight, radius.xl);\n        ctx.fill();\n        ctx.strokeStyle = \"#cbd5e1\";\n        ctx.lineWidth = 1;\n        this.roundRect(ctx, currentX, currentY, tagWidth, tagHeight, radius.xl);\n        ctx.stroke();\n        ctx.fillStyle = \"#475569\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(tag, currentX + tagWidth / 2, currentY + tagHeight / 2);\n        currentX += tagWidth + spacing.sm;\n      });\n      return currentY + tagHeight;\n    }\n    // Enhanced brand area rendering\n    renderBrandArea(renderCtx, brandText, x, y) {\n      const { ctx } = renderCtx;\n      const fontSize = this.styleManager.getFontSizes();\n      const spacing = this.styleManager.getSpacing();\n      const radius = this.styleManager.getBorderRadius();\n      const brandColors = this.styleManager.getBrandColors();\n      ctx.font = `bold ${fontSize.body}px ui-sans-serif, -apple-system, system-ui`;\n      const textWidth = ctx.measureText(brandText).width;\n      const bgWidth = textWidth + spacing.lg;\n      const bgHeight = spacing.xl + spacing.md;\n      const brandGrad = ctx.createLinearGradient(x, y, x + bgWidth, y);\n      brandGrad.addColorStop(0, brandColors.background);\n      brandGrad.addColorStop(1, \"rgba(14, 165, 233, 0.12)\");\n      ctx.fillStyle = brandGrad;\n      this.roundRect(ctx, x, y, bgWidth, bgHeight, radius.md);\n      ctx.fill();\n      ctx.strokeStyle = brandColors.primary;\n      ctx.globalAlpha = 0.2;\n      ctx.lineWidth = 1;\n      this.roundRect(ctx, x, y, bgWidth, bgHeight, radius.md);\n      ctx.stroke();\n      ctx.globalAlpha = 1;\n      ctx.fillStyle = brandColors.text;\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(brandText, x + bgWidth / 2, y + bgHeight / 2);\n    }\n    // Utility methods\n    addTextureOverlay(ctx, width, height) {\n      ctx.save();\n      ctx.globalAlpha = 0.02;\n      ctx.fillStyle = \"#000000\";\n      for (let i = 0; i < width * height / 1e4; i++) {\n        const x = Math.random() * width;\n        const y = Math.random() * height;\n        ctx.fillRect(x, y, 1, 1);\n      }\n      ctx.restore();\n    }\n    adjustColorBrightness(color, factor) {\n      if (color.startsWith(\"#\")) {\n        const hex = color.slice(1);\n        const num = parseInt(hex, 16);\n        const r = Math.max(0, Math.min(255, (num >> 16) + factor * 255));\n        const g = Math.max(0, Math.min(255, (num >> 8 & 255) + factor * 255));\n        const b = Math.max(0, Math.min(255, (num & 255) + factor * 255));\n        return `rgb(${Math.round(r)}, ${Math.round(g)}, ${Math.round(b)})`;\n      }\n      return color;\n    }\n    adjustColorOpacity(color, opacity) {\n      if (color.startsWith(\"rgba(\")) {\n        return color.replace(/[\\d\\.]+\\)$/g, `${opacity})`);\n      }\n      return color;\n    }\n    splitLines(ctx, text, maxWidth, maxLines) {\n      const words = text.split(/\\s+/);\n      const lines = [];\n      let current = \"\";\n      for (let i = 0; i < words.length; i++) {\n        const test = current ? `${current} ${words[i]}` : words[i];\n        if (ctx.measureText(test).width <= maxWidth) {\n          current = test;\n        } else {\n          if (current)\n            lines.push(current);\n          current = words[i];\n          if (maxLines && lines.length >= maxLines - 1) {\n            while (ctx.measureText(current + \"\\u2026\").width > maxWidth && current.length > 0) {\n              current = current.slice(0, -1);\n            }\n            current = current + \"\\u2026\";\n            break;\n          }\n        }\n      }\n      if (current)\n        lines.push(current);\n      return lines;\n    }\n    roundRect(ctx, x, y, w, h, r) {\n      const radius = Math.min(r, w / 2, h / 2);\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      ctx.arcTo(x + w, y, x + w, y + h, radius);\n      ctx.arcTo(x + w, y + h, x, y + h, radius);\n      ctx.arcTo(x, y + h, x, y, radius);\n      ctx.arcTo(x, y, x + w, y, radius);\n      ctx.closePath();\n    }\n  };\n\n  // src/client/shared/services/share/LayoutCalculator.ts\n  var LayoutCalculator = class {\n    constructor() {\n      __publicField(this, \"defaultWidth\", 1080);\n      __publicField(this, \"defaultHeight\", 1440);\n      __publicField(this, \"padding\", 72);\n    }\n    // Calculate optimal canvas size based on page element\n    computeCanvasSize(matchEl) {\n      try {\n        if (matchEl) {\n          const rect = matchEl.getBoundingClientRect();\n          if (rect.width > 0 && rect.height > 0) {\n            const aspect = rect.height / rect.width;\n            const dpr = Math.max(2, Math.ceil(window.devicePixelRatio || 2));\n            const width = Math.min(1440, Math.max(720, Math.round(rect.width * dpr)));\n            const qrReserve = this.padding + 220 + 32;\n            const minHeight = Math.max(1200, Math.round(width * 0.9));\n            const height = Math.max(minHeight, Math.round(width * aspect) + qrReserve);\n            if (true) {\n              console.debug(`Canvas size: ${width}x${height} (aspect: ${aspect.toFixed(2)}) from page: ${rect.width.toFixed(1)}x${rect.height.toFixed(1)} (dpr:${dpr})`);\n            }\n            return { width, height };\n          }\n        }\n      } catch (error) {\n        if (true) {\n          console.warn(\"Failed to compute canvas size from element:\", error);\n        }\n      }\n      return { width: this.defaultWidth, height: this.defaultHeight };\n    }\n    // Analyze page image display for consistent rendering\n    analyzePageImageDisplay(matchEl, imageUrl) {\n      try {\n        if (!matchEl || !imageUrl)\n          return {};\n        const coverEl = matchEl.querySelector(\".overview-card__cover\");\n        const imgEl = coverEl?.querySelector(\"img\");\n        if (imgEl && imgEl.complete && imgEl.naturalWidth > 0) {\n          const rect = imgEl.getBoundingClientRect();\n          if (rect.width > 0 && rect.height > 0) {\n            const pageImageAspect = rect.height / rect.width;\n            if (true) {\n              console.debug(`Image analysis:`, {\n                naturalSize: `${imgEl.naturalWidth}x${imgEl.naturalHeight}`,\n                displaySize: `${rect.width.toFixed(1)}x${rect.height.toFixed(1)}`,\n                pageAspect: pageImageAspect.toFixed(3),\n                naturalAspect: (imgEl.naturalHeight / imgEl.naturalWidth).toFixed(3)\n              });\n            }\n            return {\n              pageImageAspect,\n              pageImageWidth: rect.width,\n              pageImageHeight: rect.height\n            };\n          }\n        }\n      } catch (error) {\n        if (true) {\n          console.warn(\"Failed to analyze page image display:\", error);\n        }\n      }\n      return {};\n    }\n    // Calculate content height for dynamic canvas sizing\n    async measureContentHeight(card, width, pageImageInfo, getIcon) {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 2;\n      canvas.height = 2;\n      const ctx = canvas.getContext(\"2d\");\n      try {\n        await document.fonts?.ready;\n      } catch {\n      }\n      let y = this.padding;\n      const headerHeight = 200;\n      y += headerHeight - this.padding;\n      const iconRadius = 44;\n      const titleX = this.padding + iconRadius + iconRadius + 24;\n      const titleMaxWidth = width - titleX - this.padding;\n      ctx.font = \"bold 48px ui-sans-serif, -apple-system, system-ui, Segoe UI, Roboto\";\n      const titleLines = this.splitLines(ctx, card.title || \"\", titleMaxWidth, 2);\n      y += 8 + 24 + Math.min(titleLines.length, 2) * 56;\n      y += 24;\n      const bodyMaxWidth = width - this.padding * 2;\n      ctx.font = \"32px ui-sans-serif, -apple-system, system-ui\";\n      if (card.description) {\n        const lines = this.splitLines(ctx, card.description, bodyMaxWidth, 3);\n        y += 24 + Math.min(lines.length, 3) * 44;\n      } else if (card.overview) {\n        const lines = this.splitLines(ctx, card.overview, bodyMaxWidth, 3);\n        y += 24 + Math.min(lines.length, 3) * 44;\n      }\n      if (card.imageUrl) {\n        y += 12;\n        let coverHeight = 0;\n        if (pageImageInfo?.pageImageWidth && pageImageInfo?.pageImageHeight) {\n          const pageAspect = pageImageInfo.pageImageHeight / pageImageInfo.pageImageWidth;\n          coverHeight = Math.round((width - this.padding * 2) * pageAspect);\n        } else {\n          coverHeight = 220;\n        }\n        y += coverHeight + 12;\n      }\n      const tips = card.tips || [];\n      if (tips.length) {\n        y += 24;\n        ctx.font = \"28px ui-sans-serif, -apple-system, system-ui\";\n        const lineHeight = 40;\n        const padding = 16;\n        tips.forEach((tip) => {\n          const text = tip.title + \"\\uFF1A\" + tip.content;\n          const lines = this.splitLines(ctx, text, bodyMaxWidth - padding * 2);\n          const boxHeight = lines.length * lineHeight + padding * 2;\n          y += boxHeight + 16;\n        });\n      }\n      const tags = card.tags || [];\n      if (tags.length) {\n        y += 16;\n        ctx.font = \"26px ui-sans-serif, -apple-system, system-ui\";\n        let currentX = this.padding;\n        let currentY = y;\n        const tagHeight = 40;\n        const lineGap = 12;\n        const paddingX = 18;\n        tags.forEach((tag) => {\n          const tagWidth = ctx.measureText(tag).width + paddingX * 2;\n          if (currentX + tagWidth > this.padding + bodyMaxWidth) {\n            currentX = this.padding;\n            currentY += tagHeight + lineGap;\n          }\n          currentX += tagWidth + 12;\n        });\n        y = currentY + tagHeight + 16;\n      }\n      const qrSize = 220;\n      const contentBottom = y + 24;\n      const brandAreaHeight = 60;\n      const requiredHeight = contentBottom + qrSize + this.padding + brandAreaHeight;\n      return Math.ceil(requiredHeight);\n    }\n    // Calculate element positioning\n    calculateIconPosition(padding, radius) {\n      return {\n        x: padding + radius,\n        y: padding + radius\n      };\n    }\n    calculateTitleBounds(iconPos, iconRadius, canvasWidth, padding) {\n      const titleX = iconPos.x + iconRadius + 24;\n      return {\n        x: titleX,\n        y: iconPos.y - iconRadius,\n        width: canvasWidth - titleX - padding,\n        height: iconRadius * 2\n      };\n    }\n    calculateQRPosition(canvasWidth, canvasHeight, qrSize, padding, contentBottom) {\n      const qrX = canvasWidth - padding - qrSize;\n      let qrY = canvasHeight - padding - qrSize - 60;\n      if (qrY < contentBottom) {\n        qrY = contentBottom + 24;\n      }\n      return { x: qrX, y: qrY };\n    }\n    // Utility method for text line splitting\n    splitLines(ctx, text, maxWidth, maxLines) {\n      const words = text.split(/\\s+/);\n      const lines = [];\n      let current = \"\";\n      for (let i = 0; i < words.length; i++) {\n        const test = current ? `${current} ${words[i]}` : words[i];\n        if (ctx.measureText(test).width <= maxWidth) {\n          current = test;\n        } else {\n          if (current)\n            lines.push(current);\n          current = words[i];\n          if (maxLines && lines.length >= maxLines - 1) {\n            while (ctx.measureText(current + \"\\u2026\").width > maxWidth && current.length > 0) {\n              current = current.slice(0, -1);\n            }\n            current = current + \"\\u2026\";\n            break;\n          }\n        }\n      }\n      if (current)\n        lines.push(current);\n      return lines;\n    }\n    // Getters for layout constants\n    get defaultCanvasSize() {\n      return { width: this.defaultWidth, height: this.defaultHeight };\n    }\n    get layoutPadding() {\n      return this.padding;\n    }\n  };\n\n  // src/client/shared/services/share/ImageManager.ts\n  var ImageManager = class {\n    constructor() {\n      __publicField(this, \"imageCache\", /* @__PURE__ */ new Map());\n      __publicField(this, \"loadingPromises\", /* @__PURE__ */ new Map());\n    }\n    // Load image with caching and error handling\n    async loadImage(url, options = {}) {\n      if (this.imageCache.has(url)) {\n        return this.imageCache.get(url);\n      }\n      if (this.loadingPromises.has(url)) {\n        return this.loadingPromises.get(url);\n      }\n      const loadPromise = this.createImageLoadPromise(url, options);\n      this.loadingPromises.set(url, loadPromise);\n      try {\n        const img = await loadPromise;\n        this.imageCache.set(url, img);\n        this.loadingPromises.delete(url);\n        return img;\n      } catch (error) {\n        this.loadingPromises.delete(url);\n        throw error;\n      }\n    }\n    // Load QR code image\n    async loadQRImage(data, size) {\n      const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=${size}x${size}&data=${encodeURIComponent(data)}`;\n      return this.loadImage(qrUrl, { crossOrigin: \"anonymous\" });\n    }\n    // Resolve image URL with proxy handling\n    resolveImageUrl(url) {\n      try {\n        const absoluteUrl = new URL(url, window.location.href);\n        if (absoluteUrl.origin !== window.location.origin && absoluteUrl.protocol === \"https:\") {\n          return `/img-proxy?src=${encodeURIComponent(absoluteUrl.toString())}`;\n        }\n        return absoluteUrl.toString();\n      } catch {\n        return url;\n      }\n    }\n    // Calculate image dimensions for canvas rendering\n    calculateImageDimensions(img, maxWidth, maxHeight, pageImageInfo) {\n      if (pageImageInfo?.pageImageWidth && pageImageInfo?.pageImageHeight) {\n        const pageAspect = pageImageInfo.pageImageHeight / pageImageInfo.pageImageWidth;\n        return {\n          width: maxWidth,\n          height: Math.round(maxWidth * pageAspect)\n        };\n      }\n      const naturalAspect = img.naturalHeight / img.naturalWidth;\n      let width = maxWidth;\n      let height = Math.round(width * naturalAspect);\n      if (maxHeight && height > maxHeight) {\n        height = maxHeight;\n        width = Math.round(height / naturalAspect);\n      }\n      return { width, height };\n    }\n    // Create placeholder for failed image loads\n    createPlaceholder(width, height, text = \"\\u5C01\\u9762\\u56FE\") {\n      return { width, height, text };\n    }\n    // Clear cache (useful for memory management)\n    clearCache() {\n      this.imageCache.clear();\n      this.loadingPromises.clear();\n    }\n    // Get cache statistics\n    getCacheStats() {\n      return {\n        cached: this.imageCache.size,\n        loading: this.loadingPromises.size\n      };\n    }\n    createImageLoadPromise(url, options) {\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        if (options.crossOrigin) {\n          img.crossOrigin = options.crossOrigin;\n        }\n        const timeout = options.timeout || 1e4;\n        const timeoutId = setTimeout(() => {\n          reject(new Error(`Image load timeout: ${url}`));\n        }, timeout);\n        img.onload = () => {\n          clearTimeout(timeoutId);\n          resolve(img);\n        };\n        img.onerror = () => {\n          clearTimeout(timeoutId);\n          reject(new Error(`Image load failed: ${url}`));\n        };\n        img.src = this.resolveImageUrl(url);\n      });\n    }\n  };\n\n  // src/client/shared/services/share/LayoutService.ts\n  var LayoutService = class {\n    // 元素间的小间距\n    constructor() {\n      __publicField(this, \"styleManager\");\n      __publicField(this, \"basePadding\", 48);\n      // 减少基础内边距\n      __publicField(this, \"sectionGap\", 24);\n      // 统一的段落间距\n      __publicField(this, \"elementGap\", 16);\n      this.styleManager = new StyleManager();\n    }\n    // 计算优化的布局方案\n    calculateLayout(card, constraints, pageImageInfo) {\n      const { maxWidth, minHeight } = constraints;\n      const contentWidth = maxWidth - this.basePadding * 2;\n      const sections = [];\n      let currentY = this.basePadding;\n      const headerSection = this.calculateHeaderSection(card, contentWidth, currentY);\n      sections.push(headerSection);\n      currentY = headerSection.y + headerSection.height + this.sectionGap;\n      if (card.description || card.overview) {\n        const contentSection = this.calculateContentSection(card, contentWidth, currentY);\n        sections.push(contentSection);\n        currentY = contentSection.y + contentSection.height + this.sectionGap;\n      }\n      if (card.imageUrl) {\n        const imageSection = this.calculateImageSection(card, contentWidth, currentY, pageImageInfo);\n        sections.push(imageSection);\n        currentY = imageSection.y + imageSection.height + this.sectionGap;\n      }\n      const tips = card.tips || [];\n      if (tips.length > 0) {\n        const tipsSection = this.calculateTipsSection(tips, contentWidth, currentY);\n        sections.push(tipsSection);\n        currentY = tipsSection.y + tipsSection.height + this.sectionGap;\n      }\n      const footerSection = this.calculateFooterSection(contentWidth, currentY, maxWidth, card.tags || []);\n      sections.push(footerSection);\n      const bottomMargin = 0;\n      currentY = footerSection.y + footerSection.height + bottomMargin;\n      const totalHeight = Math.max(minHeight, currentY);\n      return {\n        sections,\n        totalHeight,\n        contentWidth,\n        padding: this.basePadding\n      };\n    }\n    // 紧凑的头部设计：图标、标题、难度标签在同一视觉区域\n    calculateHeaderSection(card, contentWidth, startY) {\n      const iconSize = 64;\n      const titleFontSize = this.styleManager.getFontSizes().title;\n      const spacing = this.styleManager.getSpacing();\n      const titleAreaWidth = contentWidth - iconSize - spacing.lg;\n      const avgCharWidth = titleFontSize * 0.6;\n      const titleLength = (card.title || \"\").length;\n      const estimatedTitleLines = Math.ceil(titleLength * avgCharWidth / titleAreaWidth);\n      const titleHeight = Math.min(estimatedTitleLines, 2) * (titleFontSize + 8);\n      const metaHeight = 0;\n      const headerHeight = Math.max(iconSize, titleHeight + metaHeight + spacing.sm);\n      return {\n        type: \"header\",\n        y: startY,\n        height: headerHeight,\n        content: {\n          iconSize,\n          titleAreaWidth,\n          titleHeight,\n          metaHeight\n        }\n      };\n    }\n    // 内容区域：描述或概览，限制行数避免过长\n    calculateContentSection(card, contentWidth, startY) {\n      const fontSize = this.styleManager.getFontSizes().body;\n      const lineHeight = fontSize + 8;\n      const maxLines = 4;\n      const text = card.description || card.overview || \"\";\n      const avgCharWidth = fontSize * 0.5;\n      const estimatedLines = Math.ceil(text.length * avgCharWidth / contentWidth);\n      const actualLines = Math.min(estimatedLines, maxLines);\n      const contentHeight = actualLines * lineHeight;\n      return {\n        type: \"content\",\n        y: startY,\n        height: contentHeight,\n        content: {\n          text,\n          maxLines,\n          fontSize,\n          lineHeight\n        }\n      };\n    }\n    // 图片区域：保持合理的宽高比\n    calculateImageSection(card, contentWidth, startY, pageImageInfo) {\n      let imageHeight = 240;\n      if (pageImageInfo?.pageImageAspect && pageImageInfo.pageImageAspect > 0) {\n        imageHeight = Math.round(contentWidth * pageImageInfo.pageImageAspect);\n      } else {\n        imageHeight = Math.round(contentWidth * (9 / 16));\n      }\n      imageHeight = Math.max(180, Math.min(400, imageHeight));\n      return {\n        type: \"image\",\n        y: startY,\n        height: imageHeight,\n        content: {\n          imageUrl: card.imageUrl,\n          aspectRatio: pageImageInfo?.pageImageAspect,\n          fillWidth: true\n          // 新增：标记图片需要占满整个宽度\n        }\n      };\n    }\n    // 提示框区域：紧凑排列\n    calculateTipsSection(tips, contentWidth, startY) {\n      const fontSize = this.styleManager.getFontSizes().caption + 2;\n      const lineHeight = Math.round(fontSize * 1.5);\n      const tipPadding = this.styleManager.getSpacing().md;\n      const tipGap = this.styleManager.getSpacing().md;\n      let totalHeight = 0;\n      tips.forEach((tip) => {\n        const text = tip.title + \"\\uFF1A\" + tip.content;\n        const avgCharWidth = fontSize * 0.5;\n        const estimatedLines = Math.ceil(text.length * avgCharWidth / (contentWidth - tipPadding * 2));\n        const tipHeight = estimatedLines * lineHeight + tipPadding * 2;\n        totalHeight += tipHeight + tipGap;\n      });\n      totalHeight -= tipGap;\n      return {\n        type: \"tips\",\n        y: startY,\n        height: totalHeight,\n        content: {\n          tips,\n          fontSize,\n          lineHeight,\n          tipPadding,\n          tipGap\n        }\n      };\n    }\n    // 标签区域：紧凑的标签布局\n    calculateTagsSection(tags, contentWidth, startY) {\n      const fontSize = this.styleManager.getFontSizes().small;\n      const tagHeight = 32;\n      const tagPadding = this.styleManager.getSpacing().sm;\n      const tagGap = this.styleManager.getSpacing().xs;\n      const avgTagWidth = fontSize * 6;\n      const tagsPerLine = Math.floor(contentWidth / (avgTagWidth + tagGap));\n      const lines = Math.ceil(tags.length / tagsPerLine);\n      const totalHeight = lines * tagHeight + (lines - 1) * tagGap;\n      return {\n        type: \"tags\",\n        y: startY,\n        height: totalHeight,\n        content: {\n          tags,\n          tagHeight,\n          fontSize\n        }\n      };\n    }\n    // 底部区域：QR码和品牌信息的整合设计\n    calculateFooterSection(contentWidth, startY, totalWidth, tags) {\n      const spacing = this.styleManager.getSpacing();\n      const qrSize = 120;\n      const brandHeight = 32;\n      const footerXPad = 12;\n      const footerTopPad = 12;\n      const footerBottomPad = 0;\n      const leftColumnWidth = contentWidth - (qrSize + footerXPad * 2);\n      const fontSize = this.styleManager.getFontSizes().small;\n      const tagHeight = 32;\n      const tagGap = spacing.xs;\n      let tagsHeight = 0;\n      if (tags.length > 0) {\n        const avgTagWidth = fontSize * 6;\n        const tagsPerLine = Math.max(1, Math.floor(leftColumnWidth / (avgTagWidth + tagGap)));\n        const lines = Math.ceil(tags.length / tagsPerLine);\n        tagsHeight = lines * tagHeight + (lines - 1) * tagGap;\n      }\n      const brandTagsGap = 30;\n      const leftColumnHeight = tags.length > 0 ? brandHeight + brandTagsGap + tagsHeight : brandHeight;\n      const footerHeight = Math.max(qrSize, leftColumnHeight) + footerTopPad + footerBottomPad;\n      return {\n        type: \"footer\",\n        y: startY,\n        height: footerHeight,\n        content: {\n          qrSize,\n          brandHeight,\n          leftColumnWidth,\n          tags,\n          tagHeight,\n          fontSize,\n          tagGap,\n          brandTagsGap,\n          footerXPad,\n          footerTopPad,\n          footerBottomPad,\n          layout: \"horizontal\"\n        }\n      };\n    }\n    // 获取优化的间距配置\n    getSpacingConfig() {\n      return {\n        basePadding: this.basePadding,\n        sectionGap: this.sectionGap,\n        elementGap: this.elementGap,\n        tightGap: 8,\n        // 紧密间距\n        microGap: 4\n        // 微小间距\n      };\n    }\n    // 获取字体层次配置\n    getTypographyConfig() {\n      const baseFontSize = this.styleManager.getFontSizes();\n      return {\n        title: baseFontSize.title,\n        subtitle: baseFontSize.subtitle,\n        body: baseFontSize.body - 2,\n        // 稍微减小正文字体\n        caption: baseFontSize.caption,\n        small: baseFontSize.small,\n        micro: 18\n        // 新增微小字体\n      };\n    }\n    // 计算响应式尺寸\n    calculateResponsiveSize(baseWidth, baseHeight, targetWidth) {\n      const scale = targetWidth / baseWidth;\n      return {\n        width: targetWidth,\n        height: Math.round(baseHeight * scale)\n      };\n    }\n    // 验证布局是否合理\n    validateLayout(layout) {\n      const issues = [];\n      if (layout.totalHeight > 2e3) {\n        issues.push(\"\\u5E03\\u5C40\\u9AD8\\u5EA6\\u8FC7\\u5927\\uFF0C\\u53EF\\u80FD\\u5F71\\u54CD\\u52A0\\u8F7D\\u6027\\u80FD\");\n      }\n      if (layout.totalHeight < 800) {\n        issues.push(\"\\u5E03\\u5C40\\u9AD8\\u5EA6\\u8FC7\\u5C0F\\uFF0C\\u53EF\\u80FD\\u663E\\u793A\\u4E0D\\u5B8C\\u6574\");\n      }\n      const gaps = [];\n      for (let i = 1; i < layout.sections.length; i++) {\n        const gap = layout.sections[i].y - (layout.sections[i - 1].y + layout.sections[i - 1].height);\n        gaps.push(gap);\n      }\n      const avgGap = gaps.reduce((a, b) => a + b, 0) / gaps.length;\n      const hasInconsistentGaps = gaps.some((gap) => Math.abs(gap - avgGap) > 8);\n      if (hasInconsistentGaps) {\n        issues.push(\"\\u6BB5\\u843D\\u95F4\\u8DDD\\u4E0D\\u4E00\\u81F4\\uFF0C\\u5F71\\u54CD\\u89C6\\u89C9\\u8FDE\\u8D2F\\u6027\");\n      }\n      return {\n        valid: issues.length === 0,\n        issues\n      };\n    }\n  };\n\n  // src/client/shared/services/share/CompactRenderer.ts\n  var CompactRenderer = class {\n    constructor() {\n      __publicField(this, \"styleManager\");\n      __publicField(this, \"layoutService\");\n      __publicField(this, \"imageManager\");\n      this.styleManager = new StyleManager();\n      this.layoutService = new LayoutService();\n      this.imageManager = new ImageManager();\n    }\n    // 使用新布局渲染完整的卡片\n    async renderCard(card, canvas, getIcon, deepLink, pageImageInfo) {\n      let ctx = canvas.getContext(\"2d\");\n      let width = canvas.width;\n      let height = canvas.height;\n      const imgUrl = card.imageUrl;\n      let cardForLayout = card;\n      if (imgUrl) {\n        try {\n          await this.imageManager.loadImage(imgUrl, { crossOrigin: \"anonymous\" });\n        } catch {\n          cardForLayout = { ...card, imageUrl: void 0 };\n        }\n      }\n      let layout = this.layoutService.calculateLayout(cardForLayout, {\n        maxWidth: width,\n        minHeight: 0\n      }, pageImageInfo);\n      if (canvas.height !== layout.totalHeight) {\n        canvas.height = layout.totalHeight;\n        ctx = canvas.getContext(\"2d\");\n        width = canvas.width;\n        height = canvas.height;\n        layout = this.layoutService.calculateLayout(cardForLayout, {\n          maxWidth: width,\n          minHeight: 0\n        }, pageImageInfo);\n      }\n      const renderCtx = { ctx, width, height, layout };\n      this.renderBackground(renderCtx);\n      for (const section of layout.sections) {\n        await this.renderSection(renderCtx, section, card, getIcon, deepLink);\n      }\n      this.tightCrop(canvas, layout.totalHeight);\n    }\n    // 渲染优化的背景\n    renderBackground(renderCtx) {\n      const { ctx, width, height } = renderCtx;\n      const bgGrad = ctx.createLinearGradient(0, 0, 0, height);\n      bgGrad.addColorStop(0, \"#ffffff\");\n      bgGrad.addColorStop(0.7, \"#fafbfc\");\n      bgGrad.addColorStop(1, \"#f8fafc\");\n      ctx.fillStyle = bgGrad;\n      ctx.fillRect(0, 0, width, height);\n      const brandColors = this.styleManager.getBrandColors();\n      const accentGrad = ctx.createLinearGradient(0, 0, width, 0);\n      accentGrad.addColorStop(0, brandColors.primary);\n      accentGrad.addColorStop(0.5, brandColors.primaryLight);\n      accentGrad.addColorStop(1, brandColors.accent);\n      ctx.fillStyle = accentGrad;\n      ctx.fillRect(0, 0, width, 4);\n    }\n    // 根据布局段落渲染对应内容\n    async renderSection(renderCtx, section, card, getIcon, deepLink) {\n      const { ctx, layout } = renderCtx;\n      const x = layout.padding;\n      switch (section.type) {\n        case \"header\":\n          this.renderHeaderSection(ctx, section, card, getIcon, x);\n          break;\n        case \"content\":\n          this.renderContentSection(ctx, section, x);\n          break;\n        case \"image\":\n          await this.renderImageSection(ctx, section, x, layout.contentWidth);\n          break;\n        case \"tips\":\n          this.renderTipsSection(ctx, section, x, layout.contentWidth);\n          break;\n        case \"tags\":\n          this.renderTagsSection(ctx, section, x, layout.contentWidth);\n          break;\n        case \"footer\":\n          await this.renderFooterSection(ctx, section, x, layout.contentWidth, card, deepLink);\n          break;\n      }\n    }\n    // 紧凑的头部渲染\n    renderHeaderSection(ctx, section, card, getIcon, x) {\n      const { iconSize, titleAreaWidth } = section.content;\n      const spacing = this.styleManager.getSpacing();\n      const typography = this.layoutService.getTypographyConfig();\n      const icon = getIcon(card.category) || \"\\u{1F4CB}\";\n      const iconX = x + iconSize / 2;\n      const iconY = section.y + iconSize / 2;\n      const iconGrad = ctx.createRadialGradient(iconX, iconY, 0, iconX, iconY, iconSize / 2);\n      iconGrad.addColorStop(0, \"#ffffff\");\n      iconGrad.addColorStop(1, \"#e0f2fe\");\n      ctx.fillStyle = iconGrad;\n      this.roundRect(ctx, iconX - iconSize / 2, iconY - iconSize / 2, iconSize, iconSize, 16);\n      ctx.fill();\n      ctx.strokeStyle = \"#bae6fd\";\n      ctx.lineWidth = 1.5;\n      this.roundRect(ctx, iconX - iconSize / 2, iconY - iconSize / 2, iconSize, iconSize, 16);\n      ctx.stroke();\n      ctx.font = `${iconSize * 0.6}px system-ui, -apple-system, Segoe UI, Roboto`;\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillStyle = \"#0f172a\";\n      ctx.fillText(icon, iconX, iconY);\n      const titleX = x + iconSize + spacing.lg;\n      const titleY = section.y + spacing.sm;\n      ctx.font = `bold ${typography.title}px ui-sans-serif, -apple-system, system-ui`;\n      ctx.fillStyle = \"#0f172a\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"top\";\n      const titleLines = this.splitLines(ctx, card.title || \"\", titleAreaWidth, 2);\n      titleLines.forEach((line, i) => {\n        ctx.fillText(line, titleX, titleY + i * (typography.title + 8));\n      });\n    }\n    // 内容区域渲染\n    renderContentSection(ctx, section, x) {\n      const { text, maxLines, fontSize, lineHeight } = section.content;\n      const typography = this.layoutService.getTypographyConfig();\n      ctx.font = `${typography.body}px ui-sans-serif, -apple-system, system-ui`;\n      ctx.fillStyle = \"#374151\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"top\";\n      const lines = this.splitLines(ctx, text, section.content.width || 600, maxLines);\n      lines.forEach((line, i) => {\n        ctx.fillText(line, x, section.y + i * lineHeight);\n      });\n    }\n    // 图片区域渲染\n    async renderImageSection(ctx, section, x, width) {\n      const { imageUrl } = section.content;\n      const radius = this.styleManager.getBorderRadius().md;\n      try {\n        const img = await this.imageManager.loadImage(imageUrl, { crossOrigin: \"anonymous\" });\n        const sw = img.naturalWidth || img.width;\n        const sh = img.naturalHeight || img.height;\n        const destX = x;\n        const destY = section.y;\n        const destW = width;\n        const destH = section.height;\n        ctx.fillStyle = \"#f8fafc\";\n        this.roundRect(ctx, x, section.y, width, section.height, radius);\n        ctx.fill();\n        ctx.save();\n        this.roundRect(ctx, destX, destY, destW, destH, radius);\n        ctx.clip();\n        const scale = Math.max(destW / sw, destH / sh);\n        const srcW = Math.round(destW / scale);\n        const srcH = Math.round(destH / scale);\n        const srcX = Math.floor((sw - srcW) / 2);\n        const srcY = Math.floor((sh - srcH) / 2);\n        ctx.drawImage(img, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n        ctx.restore();\n        ctx.save();\n        ctx.globalCompositeOperation = \"multiply\";\n        ctx.fillStyle = \"rgba(0, 0, 0, 0.02)\";\n        this.roundRect(ctx, destX + 1, destY + 1, destW - 2, destH - 2, radius - 1);\n        ctx.fill();\n        ctx.restore();\n      } catch {\n        return;\n      }\n    }\n    // 提示框区域渲染\n    renderTipsSection(ctx, section, x, width) {\n      const { tips, fontSize, lineHeight, tipPadding, tipGap } = section.content;\n      const spacing = this.layoutService.getSpacingConfig();\n      let currentY = section.y;\n      tips.forEach((tip, index) => {\n        const text = tip.title + \"\\uFF1A\" + tip.content;\n        const maxTextWidth = width - tipPadding * 2 - 12;\n        ctx.font = `${fontSize}px ui-sans-serif, -apple-system, system-ui`;\n        const lines = this.splitLines(ctx, text, maxTextWidth);\n        const tipHeight = lines.length * lineHeight + tipPadding * 2;\n        const colorSchemes = [\n          { start: \"#fef7f0\", end: \"#fed7aa\", accent: \"#fb923c\" },\n          // 橙色系\n          { start: \"#f0f9ff\", end: \"#bae6fd\", accent: \"#0ea5e9\" },\n          // 蓝色系\n          { start: \"#f0fdf4\", end: \"#bbf7d0\", accent: \"#22c55e\" },\n          // 绿色系\n          { start: \"#fdf4ff\", end: \"#e9d5ff\", accent: \"#a855f7\" },\n          // 紫色系\n          { start: \"#fffbeb\", end: \"#fde68a\", accent: \"#f59e0b\" }\n          // 黄色系\n        ];\n        const colorScheme = colorSchemes[index % colorSchemes.length];\n        const tipGrad = ctx.createLinearGradient(x, currentY, x, currentY + tipHeight);\n        tipGrad.addColorStop(0, colorScheme.start);\n        tipGrad.addColorStop(1, colorScheme.end);\n        ctx.fillStyle = tipGrad;\n        this.roundRect(ctx, x, currentY, width, tipHeight, 8);\n        ctx.fill();\n        ctx.strokeStyle = colorScheme.accent + \"40\";\n        ctx.lineWidth = 1;\n        this.roundRect(ctx, x, currentY, width, tipHeight, 8);\n        ctx.stroke();\n        ctx.fillStyle = colorScheme.accent + \"80\";\n        this.roundRect(ctx, x, currentY, 4, tipHeight, 2);\n        ctx.fill();\n        ctx.fillStyle = \"#000000\";\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"top\";\n        lines.forEach((line, i) => {\n          ctx.fillText(line, x + tipPadding + 8, currentY + tipPadding + i * lineHeight);\n        });\n        currentY += tipHeight + (tipGap ?? spacing.elementGap);\n      });\n    }\n    // 标签区域渲染\n    renderTagsSection(ctx, section, x, width) {\n      const { tags, tagHeight, fontSize } = section.content;\n      const spacing = this.layoutService.getSpacingConfig();\n      ctx.font = `${fontSize}px ui-sans-serif, -apple-system, system-ui`;\n      let currentX = x;\n      let currentY = section.y;\n      tags.forEach((tag) => {\n        const textWidth = ctx.measureText(tag).width;\n        const tagWidth = textWidth + spacing.elementGap;\n        if (currentX + tagWidth > x + width) {\n          currentX = x;\n          currentY += tagHeight + spacing.tightGap;\n        }\n        const tagGrad = ctx.createLinearGradient(currentX, currentY, currentX, currentY + tagHeight);\n        tagGrad.addColorStop(0, \"#f8fafc\");\n        tagGrad.addColorStop(1, \"#e2e8f0\");\n        ctx.fillStyle = tagGrad;\n        this.roundRect(ctx, currentX, currentY, tagWidth, tagHeight, 16);\n        ctx.fill();\n        ctx.strokeStyle = \"#cbd5e1\";\n        ctx.lineWidth = 0.5;\n        this.roundRect(ctx, currentX, currentY, tagWidth, tagHeight, 16);\n        ctx.stroke();\n        ctx.fillStyle = \"#475569\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(tag, currentX + tagWidth / 2, currentY + tagHeight / 2);\n        currentX += tagWidth + spacing.tightGap;\n      });\n    }\n    // 底部区域渲染（QR码 + 品牌信息整合）\n    async renderFooterSection(ctx, section, x, width, card, deepLink) {\n      const { qrSize, brandHeight, leftColumnWidth, tags = [], tagHeight = 32, fontSize = 20, tagGap = 8, brandTagsGap = 15, footerXPad = 12, footerTopPad = 12, footerBottomPad = 6 } = section.content;\n      const spacing = this.layoutService.getSpacingConfig();\n      const brandColors = this.styleManager.getBrandColors();\n      ctx.strokeStyle = \"#e2e8f0\";\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.moveTo(x, section.y);\n      ctx.lineTo(x + width, section.y);\n      ctx.stroke();\n      const footerY = section.y + footerTopPad;\n      const brandText = \"aispeeds.me\";\n      ctx.font = `bold ${this.layoutService.getTypographyConfig().body}px ui-sans-serif, -apple-system, system-ui`;\n      ctx.fillStyle = brandColors.text;\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(brandText, x + footerXPad, footerY + brandHeight / 2);\n      const qrX = x + width - footerXPad - qrSize;\n      const qrY = footerY;\n      try {\n        const qrImg = await this.imageManager.loadQRImage(deepLink, qrSize);\n        ctx.fillStyle = \"#ffffff\";\n        this.roundRect(ctx, qrX, qrY, qrSize, qrSize, 8);\n        ctx.fill();\n        ctx.strokeStyle = \"#e2e8f0\";\n        ctx.lineWidth = 1;\n        this.roundRect(ctx, qrX, qrY, qrSize, qrSize, 8);\n        ctx.stroke();\n        ctx.drawImage(qrImg, qrX, qrY, qrSize, qrSize);\n      } catch {\n        ctx.fillStyle = \"#f1f5f9\";\n        this.roundRect(ctx, qrX, qrY, qrSize, qrSize, 8);\n        ctx.fill();\n        ctx.font = `${this.layoutService.getTypographyConfig().small}px ui-sans-serif, -apple-system, system-ui`;\n        ctx.fillStyle = \"#94a3b8\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(\"QR\\u7801\", qrX + qrSize / 2, qrY + qrSize / 2);\n      }\n      if (Array.isArray(tags) && tags.length > 0) {\n        ctx.font = `${fontSize}px ui-sans-serif, -apple-system, system-ui`;\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"middle\";\n        let currentX = x + footerXPad;\n        let currentY = footerY + brandHeight + brandTagsGap;\n        tags.forEach((tag) => {\n          const textWidth = ctx.measureText(tag).width;\n          const paddingX = 12;\n          const chipWidth = Math.ceil(textWidth) + paddingX * 2;\n          if (currentX + chipWidth > x + footerXPad + (leftColumnWidth ?? width - (qrSize + footerXPad * 2))) {\n            currentX = x + footerXPad;\n            currentY += tagHeight + tagGap;\n          }\n          const tagGrad = ctx.createLinearGradient(currentX, currentY - tagHeight / 2, currentX, currentY + tagHeight / 2);\n          tagGrad.addColorStop(0, \"#f8fafc\");\n          tagGrad.addColorStop(1, \"#e2e8f0\");\n          ctx.fillStyle = tagGrad;\n          this.roundRect(ctx, currentX, currentY - tagHeight / 2, chipWidth, tagHeight, 16);\n          ctx.fill();\n          ctx.strokeStyle = \"#cbd5e1\";\n          ctx.lineWidth = 0.5;\n          this.roundRect(ctx, currentX, currentY - tagHeight / 2, chipWidth, tagHeight, 16);\n          ctx.stroke();\n          ctx.fillStyle = \"#475569\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n          ctx.fillText(tag, currentX + chipWidth / 2, currentY);\n          currentX += chipWidth + tagGap;\n        });\n      }\n    }\n    // 渲染难度徽章\n    renderDifficultyBadge(ctx, difficulty, x, y) {\n      const diffText = this.styleManager.mapDifficulty(difficulty);\n      const diffColor = this.styleManager.getDifficultyColor(difficulty);\n      const typography = this.layoutService.getTypographyConfig();\n      const spacing = this.styleManager.getSpacing();\n      ctx.font = `bold ${typography.caption}px ui-sans-serif, -apple-system, system-ui`;\n      const textWidth = ctx.measureText(diffText).width;\n      const badgeW = textWidth + spacing.md;\n      const badgeH = 28;\n      const badgeGrad = ctx.createLinearGradient(x, y, x, y + badgeH);\n      badgeGrad.addColorStop(0, diffColor);\n      badgeGrad.addColorStop(1, this.adjustColorBrightness(diffColor, -0.1));\n      ctx.fillStyle = badgeGrad;\n      this.roundRect(ctx, x, y, badgeW, badgeH, 14);\n      ctx.fill();\n      ctx.fillStyle = \"rgba(255, 255, 255, 0.2)\";\n      this.roundRect(ctx, x, y, badgeW, badgeH / 2, 14);\n      ctx.fill();\n      ctx.fillStyle = \"#ffffff\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(diffText, x + badgeW / 2, y + badgeH / 2);\n      return { width: badgeW, height: badgeH };\n    }\n    // 工具方法\n    splitLines(ctx, text, maxWidth, maxLines) {\n      const words = text.split(/\\s+/);\n      const lines = [];\n      let current = \"\";\n      for (let i = 0; i < words.length; i++) {\n        const test = current ? `${current} ${words[i]}` : words[i];\n        if (ctx.measureText(test).width <= maxWidth) {\n          current = test;\n        } else {\n          if (current)\n            lines.push(current);\n          current = words[i];\n          if (maxLines && lines.length >= maxLines - 1) {\n            while (ctx.measureText(current + \"\\u2026\").width > maxWidth && current.length > 0) {\n              current = current.slice(0, -1);\n            }\n            current = current + \"\\u2026\";\n            break;\n          }\n        }\n      }\n      if (current)\n        lines.push(current);\n      return lines;\n    }\n    roundRect(ctx, x, y, w, h, r) {\n      const radius = Math.min(r, w / 2, h / 2);\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      ctx.arcTo(x + w, y, x + w, y + h, radius);\n      ctx.arcTo(x + w, y + h, x, y + h, radius);\n      ctx.arcTo(x, y + h, x, y, radius);\n      ctx.arcTo(x, y, x + w, y, radius);\n      ctx.closePath();\n    }\n    adjustColorBrightness(color, factor) {\n      if (color.startsWith(\"#\")) {\n        const hex = color.slice(1);\n        const num = parseInt(hex, 16);\n        const r = Math.max(0, Math.min(255, (num >> 16) + factor * 255));\n        const g = Math.max(0, Math.min(255, (num >> 8 & 255) + factor * 255));\n        const b = Math.max(0, Math.min(255, (num & 255) + factor * 255));\n        return `rgb(${Math.round(r)}, ${Math.round(g)}, ${Math.round(b)})`;\n      }\n      return color;\n    }\n    adjustColorOpacity(color, opacity) {\n      if (color.startsWith(\"rgba(\")) {\n        return color.replace(/[\\d\\.]+\\)$/g, `${opacity})`);\n      }\n      return color;\n    }\n    // 确保画布严格裁剪到内容高度，移除任何可能残留的额外空白\n    tightCrop(canvas, finalHeight) {\n      try {\n        const finalWidth = canvas.width;\n        if (canvas.height === finalHeight)\n          return;\n        const off = document.createElement(\"canvas\");\n        off.width = finalWidth;\n        off.height = finalHeight;\n        const offCtx = off.getContext(\"2d\");\n        offCtx.drawImage(canvas, 0, 0, finalWidth, finalHeight, 0, 0, finalWidth, finalHeight);\n        canvas.width = finalWidth;\n        canvas.height = finalHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(off, 0, 0);\n      } catch {\n      }\n    }\n  };\n\n  // src/client/shared/services/ShareService.ts\n  var ShareService = class {\n    constructor(getIcon, options = {}) {\n      __publicField(this, \"styleManager\");\n      __publicField(this, \"canvasRenderer\");\n      __publicField(this, \"layoutCalculator\");\n      __publicField(this, \"imageManager\");\n      __publicField(this, \"layoutService\");\n      __publicField(this, \"compactRenderer\");\n      __publicField(this, \"getIcon\");\n      __publicField(this, \"options\");\n      this.getIcon = getIcon;\n      this.options = options;\n      this.styleManager = new StyleManager();\n      this.canvasRenderer = new CanvasRenderer();\n      this.layoutCalculator = new LayoutCalculator();\n      this.imageManager = new ImageManager();\n      this.layoutService = new LayoutService();\n      this.compactRenderer = new CompactRenderer();\n    }\n    async shareCard(card) {\n      const canvas = await this.renderCanvas(card);\n      const blob = await new Promise(\n        (resolve) => canvas.toBlob((b) => resolve(b), \"image/png\", 0.95)\n      );\n      try {\n        if (navigator.clipboard && window.ClipboardItem) {\n          const item = new ClipboardItem({ \"image/png\": blob });\n          await navigator.clipboard.write([item]);\n          this.toast(\"\\u5DF2\\u590D\\u5236\\u5230\\u526A\\u8D34\\u677F\");\n          return { method: \"clipboard\", ok: true };\n        }\n        throw new Error(\"Clipboard API not supported\");\n      } catch {\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        const safeTitle = (card.title || \"share\").replace(/[\\n\\t\\s]+/g, \"_\").slice(0, 60);\n        a.download = `${safeTitle}.png`;\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n        URL.revokeObjectURL(url);\n        this.toast(\"\\u5DF2\\u4E0B\\u8F7D\\u56FE\\u7247\\uFF08\\u526A\\u8D34\\u677F\\u4E0D\\u53EF\\u7528\\uFF09\");\n        return { method: \"download\", ok: true };\n      }\n    }\n    // Open a preview modal to let users confirm and choose action\n    async openPreview(card, opts) {\n      const pageImageInfo = this.layoutCalculator.analyzePageImageDisplay(opts?.matchElement, card.imageUrl);\n      const baseSize = this.layoutCalculator.computeCanvasSize(opts?.matchElement);\n      const measuredHeight = await this.layoutCalculator.measureContentHeight(card, baseSize.width, pageImageInfo, this.getIcon);\n      const finalSize = { width: baseSize.width, height: Math.max(baseSize.height, measuredHeight) };\n      const canvas = await this.renderCanvas(card, finalSize, pageImageInfo);\n      const blob = await new Promise(\n        (resolve) => canvas.toBlob((b) => resolve(b), \"image/png\", 0.95)\n      );\n      const overlay = document.createElement(\"div\");\n      overlay.className = \"share-preview-overlay\";\n      overlay.tabIndex = -1;\n      const modal = document.createElement(\"div\");\n      modal.className = \"share-preview-modal\";\n      modal.setAttribute(\"role\", \"dialog\");\n      modal.setAttribute(\"aria-modal\", \"true\");\n      modal.setAttribute(\"aria-label\", \"\\u5206\\u4EAB\\u9884\\u89C8\");\n      const header = document.createElement(\"div\");\n      header.className = \"share-preview-header\";\n      header.innerHTML = `\n      <div class=\"share-preview-title\">\\u5206\\u4EAB\\u9884\\u89C8</div>\n      <button class=\"share-preview-close\" aria-label=\"\\u5173\\u95ED\\u9884\\u89C8\" title=\"\\u5173\\u95ED\">\\xD7</button>\n    `;\n      const body = document.createElement(\"div\");\n      body.className = \"share-preview-body\";\n      const previewWrapper = document.createElement(\"div\");\n      previewWrapper.className = \"share-preview-canvas-wrap\";\n      try {\n        const rect = opts?.matchElement?.getBoundingClientRect();\n        const dpr = Math.max(2, Math.ceil(window.devicePixelRatio || 2));\n        const desiredCssWidth = rect ? Math.round(rect.width) : Math.round(finalSize.width / dpr);\n        const cssWidth = Math.min(720, desiredCssWidth);\n        canvas.style.width = `${cssWidth}px`;\n        canvas.style.height = \"auto\";\n      } catch {\n      }\n      previewWrapper.appendChild(canvas);\n      body.appendChild(previewWrapper);\n      const actions = document.createElement(\"div\");\n      actions.className = \"share-preview-actions\";\n      const copyBtn = document.createElement(\"button\");\n      copyBtn.className = \"share-action primary\";\n      copyBtn.textContent = \"\\u590D\\u5236\\u5230\\u526A\\u8D34\\u677F\";\n      const downloadBtn = document.createElement(\"button\");\n      downloadBtn.className = \"share-action\";\n      downloadBtn.textContent = \"\\u4E0B\\u8F7D\\u56FE\\u7247\";\n      const copyLinkBtn = document.createElement(\"button\");\n      copyLinkBtn.className = \"share-action\";\n      copyLinkBtn.textContent = \"\\u590D\\u5236\\u94FE\\u63A5\";\n      const cancelBtn = document.createElement(\"button\");\n      cancelBtn.className = \"share-action subtle\";\n      cancelBtn.textContent = \"\\u53D6\\u6D88\";\n      actions.append(copyBtn, downloadBtn, copyLinkBtn, cancelBtn);\n      modal.append(header, body, actions);\n      overlay.appendChild(modal);\n      document.body.appendChild(overlay);\n      const cleanup = () => overlay.remove();\n      overlay.addEventListener(\"click\", (e) => {\n        if (e.target === overlay)\n          cleanup();\n      });\n      header.querySelector(\".share-preview-close\")?.addEventListener(\"click\", cleanup);\n      const onKey = (e) => {\n        if (e.key === \"Escape\") {\n          cleanup();\n          document.removeEventListener(\"keydown\", onKey);\n        }\n      };\n      document.addEventListener(\"keydown\", onKey);\n      copyBtn.addEventListener(\"click\", async () => {\n        const ok = await this.tryClipboard(blob);\n        if (ok) {\n          this.toast(\"\\u5DF2\\u590D\\u5236\\u5230\\u526A\\u8D34\\u677F\");\n          cleanup();\n        } else {\n          this.toast(\"\\u526A\\u8D34\\u677F\\u4E0D\\u53EF\\u7528\\uFF0C\\u5DF2\\u81EA\\u52A8\\u4E0B\\u8F7D\");\n          this.triggerDownload(blob, card.title);\n          cleanup();\n        }\n      });\n      downloadBtn.addEventListener(\"click\", () => {\n        this.triggerDownload(blob, card.title);\n        this.toast(\"\\u5DF2\\u5F00\\u59CB\\u4E0B\\u8F7D\");\n        cleanup();\n      });\n      copyLinkBtn.addEventListener(\"click\", async () => {\n        try {\n          const link = this.buildDeepLink(card);\n          await navigator.clipboard.writeText(link);\n          this.toast(\"\\u94FE\\u63A5\\u5DF2\\u590D\\u5236\");\n        } catch {\n          this.toast(\"\\u590D\\u5236\\u94FE\\u63A5\\u5931\\u8D25\");\n        }\n      });\n      cancelBtn.addEventListener(\"click\", cleanup);\n      header.querySelector(\".share-preview-close\")?.focus();\n    }\n    async tryClipboard(blob) {\n      try {\n        if (navigator.clipboard && window.ClipboardItem) {\n          const item = new ClipboardItem({ \"image/png\": blob });\n          await navigator.clipboard.write([item]);\n          return true;\n        }\n      } catch {\n      }\n      return false;\n    }\n    triggerDownload(blob, title) {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      const safeTitle = (title || \"share\").replace(/[\\n\\t\\s]+/g, \"_\").slice(0, 60);\n      a.download = `${safeTitle}.png`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      URL.revokeObjectURL(url);\n    }\n    async renderCanvas(card, size, pageImageInfo) {\n      const canvas = document.createElement(\"canvas\");\n      const finalSize = size ?? this.layoutCalculator.defaultCanvasSize;\n      canvas.width = finalSize.width;\n      canvas.height = finalSize.height;\n      try {\n        await document.fonts?.ready;\n      } catch {\n      }\n      await this.compactRenderer.renderCard(card, canvas, this.getIcon, pageImageInfo);\n      return canvas;\n    }\n    // 分析页面中图片的实际显示尺寸和比例\n    analyzePageImageDisplay(matchEl, imageUrl) {\n      try {\n        if (!matchEl || !imageUrl)\n          return {};\n        const coverEl = matchEl.querySelector(\".overview-card__cover\");\n        const imgEl = coverEl?.querySelector(\"img\");\n        if (imgEl && imgEl.complete && imgEl.naturalWidth > 0) {\n          const rect = imgEl.getBoundingClientRect();\n          const pageImageAspect = rect.height / rect.width;\n          if (rect.width > 0 && rect.height > 0) {\n            if (true) {\n              console.debug(`Page image display analysis:`, {\n                naturalSize: `${imgEl.naturalWidth}x${imgEl.naturalHeight}`,\n                displaySize: `${rect.width.toFixed(1)}x${rect.height.toFixed(1)}`,\n                pageAspect: pageImageAspect.toFixed(3),\n                naturalAspect: (imgEl.naturalHeight / imgEl.naturalWidth).toFixed(3),\n                cssStyle: `height: ${getComputedStyle(imgEl).height}, object-fit: ${getComputedStyle(imgEl).objectFit}`\n              });\n            }\n            return {\n              pageImageAspect,\n              pageImageWidth: rect.width,\n              pageImageHeight: rect.height\n            };\n          }\n        }\n        if (imgEl && !imgEl.complete) {\n          if (true) {\n            console.debug(\"Image not fully loaded, analysis may be incomplete\");\n          }\n        }\n      } catch (error) {\n        if (true) {\n          console.error(\"Failed to analyze page image display:\", error);\n        }\n      }\n      return {};\n    }\n    async loadImage(url) {\n      await new Promise((resolve) => setTimeout(resolve, 0));\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.crossOrigin = \"anonymous\";\n        img.onload = () => resolve(img);\n        img.onerror = () => reject(new Error(\"image load failed\"));\n        img.src = this.resolveImageUrl(url);\n      });\n    }\n    resolveImageUrl(url) {\n      try {\n        const abs = new URL(url, window.location.href);\n        if (abs.origin !== window.location.origin && abs.protocol === \"https:\") {\n          return `/img-proxy?src=${encodeURIComponent(abs.toString())}`;\n        }\n        return abs.toString();\n      } catch {\n        return url;\n      }\n    }\n    buildDeepLink(card) {\n      try {\n        if (this.options.deepLinkBuilder)\n          return this.options.deepLinkBuilder(card);\n        const url = new URL(window.location.href);\n        const moduleName = this.options.moduleName || \"best-practices\";\n        url.searchParams.set(\"module\", moduleName);\n        url.searchParams.set(\"view\", \"article\");\n        url.searchParams.set(\"cardId\", card.id || \"\");\n        return url.toString();\n      } catch {\n        return window.location.href;\n      }\n    }\n    toast(message) {\n      const el = document.createElement(\"div\");\n      el.textContent = message;\n      el.style.position = \"fixed\";\n      el.style.left = \"50%\";\n      el.style.top = \"16px\";\n      el.style.transform = \"translateX(-50%)\";\n      el.style.background = \"rgba(17, 24, 39, 0.9)\";\n      el.style.color = \"#fff\";\n      el.style.padding = \"8px 12px\";\n      el.style.borderRadius = \"8px\";\n      el.style.fontSize = \"14px\";\n      el.style.zIndex = \"9999\";\n      el.style.pointerEvents = \"none\";\n      document.body.appendChild(el);\n      setTimeout(() => el.remove(), 1800);\n    }\n  };\n\n  // src/client/shared/utils/image.ts\n  var resolveProxiedUrl = (url) => {\n    try {\n      const abs = new URL(url, window.location.href);\n      if (abs.origin !== window.location.origin && abs.protocol === \"https:\") {\n        return `/img-proxy?src=${encodeURIComponent(abs.toString())}`;\n      }\n      return abs.toString();\n    } catch {\n      return url;\n    }\n  };\n  var preloadImage = (url) => {\n    return new Promise((resolve) => {\n      try {\n        const src = resolveProxiedUrl(url);\n        const img = new Image();\n        img.crossOrigin = \"anonymous\";\n        img.onload = () => resolve();\n        img.onerror = () => resolve();\n        const start = () => {\n          img.src = src;\n        };\n        if (\"requestIdleCallback\" in window) {\n          window.requestIdleCallback(start, { timeout: 500 });\n        } else {\n          setTimeout(start, 0);\n        }\n      } catch {\n        resolve();\n      }\n    });\n  };\n\n  // src/client/shared/handlers/BaseArticleEventHandler.ts\n  var EXIT_ANIMATION_DURATION = 230;\n  var BaseArticleEventHandler = class {\n    // 内存缓存，避免重复预加载\n    constructor(containerId, contentService, articleRenderer, onBackToOverview) {\n      __publicField(this, \"containerId\");\n      __publicField(this, \"boundClickHandler\");\n      __publicField(this, \"contentService\");\n      __publicField(this, \"articleRenderer\");\n      __publicField(this, \"onBackToOverview\");\n      __publicField(this, \"_shareService\");\n      __publicField(this, \"_suppressHistory\", false);\n      __publicField(this, \"_preloadCache\", /* @__PURE__ */ new Set());\n      this.containerId = containerId;\n      this.boundClickHandler = this.handleCardClick.bind(this);\n      this.contentService = contentService;\n      this.articleRenderer = articleRenderer;\n      this.onBackToOverview = onBackToOverview;\n    }\n    // —— 视口预热：卡片进入视口即预热分享所需资源 ——\n    wireViewportPrewarm(container) {\n      try {\n        if (!(\"IntersectionObserver\" in window))\n          return;\n        const cards = container.querySelectorAll(\".overview-card\");\n        const seen = /* @__PURE__ */ new Set();\n        const observer = new IntersectionObserver(\n          (entries) => {\n            for (const entry of entries) {\n              if (!entry.isIntersecting)\n                continue;\n              const el = entry.target;\n              const id = el.getAttribute(\"data-card-id\");\n              if (!id || seen.has(id)) {\n                observer.unobserve(el);\n                continue;\n              }\n              seen.add(id);\n              observer.unobserve(el);\n              const run = () => void this.preloadForShare(id);\n              if (\"requestIdleCallback\" in window) {\n                window.requestIdleCallback(run, { timeout: 800 });\n              } else {\n                setTimeout(run, 0);\n              }\n            }\n          },\n          {\n            root: null,\n            rootMargin: \"200px 0px\",\n            threshold: 0.15\n          }\n        );\n        cards.forEach((el) => observer.observe(el));\n      } catch {\n      }\n    }\n    // —— 预加载分享相关资源（封面与二维码）——\n    wireSharePreload(container) {\n      try {\n        const buttons = container.querySelectorAll(\".overview-card__share-btn\");\n        buttons.forEach((btn) => {\n          const el = btn;\n          let fired = false;\n          const run = () => {\n            if (fired)\n              return;\n            fired = true;\n            const id = el.getAttribute(\"data-card-id\");\n            if (id)\n              void this.preloadForShare(id);\n          };\n          el.addEventListener(\"mouseenter\", run, { once: true });\n          el.addEventListener(\"focus\", run, { once: true });\n          el.addEventListener(\"touchstart\", run, { once: true, passive: true });\n        });\n      } catch {\n      }\n    }\n    async preloadForShare(cardId) {\n      try {\n        if (this._preloadCache.has(cardId))\n          return;\n        this._preloadCache.add(cardId);\n        const card = this.resolveCardById(cardId);\n        if (!card)\n          return;\n        const startTime = performance.now();\n        if (card.imageUrl) {\n          try {\n            await preloadImage(card.imageUrl);\n          } catch (error) {\n            if (true) {\n              console.warn(\"Cover image preload failed for card:\", cardId, error);\n            }\n          }\n        }\n        const link = (() => {\n          try {\n            const url = new URL(window.location.href);\n            url.searchParams.set(\"module\", this.getModuleName());\n            url.searchParams.set(\"view\", \"article\");\n            url.searchParams.set(\"cardId\", cardId);\n            return url.toString();\n          } catch {\n            return window.location.href;\n          }\n        })();\n        const size = 220;\n        const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=${size}x${size}&data=${encodeURIComponent(\n          link\n        )}`;\n        await new Promise((resolve) => {\n          try {\n            const img = new Image();\n            img.crossOrigin = \"anonymous\";\n            img.onload = () => resolve();\n            img.onerror = () => {\n              if (true) {\n                console.warn(\"QR code preload failed for card:\", cardId);\n              }\n              resolve();\n            };\n            const start = () => img.src = qrUrl;\n            if (\"requestIdleCallback\" in window) {\n              window.requestIdleCallback(start, { timeout: 500 });\n            } else {\n              setTimeout(start, 0);\n            }\n          } catch (error) {\n            if (true) {\n              console.warn(\"QR code preload setup failed for card:\", cardId, error);\n            }\n            resolve();\n          }\n        });\n        if (true) {\n          const duration = performance.now() - startTime;\n          console.debug(`Share preload completed for card ${cardId} in ${duration.toFixed(2)}ms`);\n        }\n      } catch (error) {\n        if (true) {\n          console.warn(\"Share preload failed for card:\", cardId, error);\n        }\n      }\n    }\n    bindEventListeners() {\n      const container = document.getElementById(this.containerId);\n      if (!container) {\n        console.error(`\\u672A\\u627E\\u5230\\u5BB9\\u5668\\u5143\\u7D20: ${this.containerId}`);\n        return;\n      }\n      this.removeExistingListeners(container);\n      this.addEventListeners(container);\n    }\n    removeExistingListeners(container) {\n      container.removeEventListener(\"click\", this.boundClickHandler);\n    }\n    addEventListeners(container) {\n      container.addEventListener(\"click\", this.boundClickHandler);\n      this.addDebugListeners(container);\n      this.wireViewportPrewarm(container);\n    }\n    // Hook: subclasses may add extra debug listeners; default no-op\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addDebugListeners(_container) {\n    }\n    handleCardClick(e) {\n      const event = e;\n      const target = event.target;\n      const containerEl = event.currentTarget;\n      const isInArticleView = containerEl?.querySelector(\".practice-article\");\n      if (isInArticleView) {\n        return;\n      }\n      const shareBtn = target.closest(\".overview-card__share-btn\");\n      if (shareBtn) {\n        event.stopPropagation();\n        event.preventDefault();\n        const cardId2 = shareBtn.getAttribute(\"data-card-id\");\n        if (!cardId2)\n          return;\n        void this.preloadForShare(cardId2);\n        const card = this.resolveCardById(cardId2);\n        if (!card)\n          return;\n        this._shareService = this._shareService || new ShareService(this.getIcon.bind(this), {\n          moduleName: this.getModuleName()\n        });\n        const cardEl = shareBtn.closest(\".overview-card\");\n        void this._shareService.openPreview(card, { matchElement: cardEl || void 0 });\n        return;\n      }\n      const cardId = this.extractCardId(target);\n      if (!cardId)\n        return;\n      this.showDetailedContent(cardId);\n    }\n    // 提供可公开调用的方法用于根据 cardId 打开文章（用于深链接入口）\n    openArticle(cardId) {\n      return this.showDetailedContent(cardId);\n    }\n    // 从浏览器历史导航进入时打开文章，不再 pushState，避免破坏历史栈\n    async openArticleFromHistory(cardId) {\n      this._suppressHistory = true;\n      try {\n        await this.showDetailedContent(cardId);\n      } finally {\n        this._suppressHistory = false;\n      }\n    }\n    // Default: click on whole card, fallback to action button\n    extractCardId(target) {\n      const cardEl = target.closest(\".overview-card\");\n      if (cardEl) {\n        const cardId = cardEl.getAttribute(\"data-card-id\");\n        if (!cardId) {\n          console.error(\"\\u5361\\u7247\\u7F3A\\u5C11 data-card-id \\u5C5E\\u6027\");\n          return null;\n        }\n        return cardId;\n      }\n      const button = target.closest(\n        \".overview-card__action-btn\"\n      );\n      if (button) {\n        const cardId = button.getAttribute(\"data-card-id\");\n        if (!cardId) {\n          console.error(\"\\u6309\\u94AE\\u7F3A\\u5C11 data-card-id \\u5C5E\\u6027\");\n          return null;\n        }\n        return cardId;\n      }\n      return null;\n    }\n    async showDetailedContent(cardId) {\n      const container = document.getElementById(this.containerId);\n      if (!container) {\n        console.error(`\\u672A\\u627E\\u5230\\u5BB9\\u5668\\u5143\\u7D20: ${this.containerId}`);\n        return;\n      }\n      try {\n        await this.beforeEnterArticle(container);\n        injectMarkdownStyles();\n        container.innerHTML = this.articleRenderer.renderLoadingState();\n        const article = await this.contentService.getArticle(cardId);\n        const articleHtml = this.articleRenderer.renderArticle(\n          article.title,\n          article.content\n        );\n        container.innerHTML = articleHtml;\n        const markdownContainer = container.querySelector(\n          \"#markdown-content-container\"\n        );\n        if (markdownContainer) {\n          const renderer = new SafeMarkdownRenderer();\n          const renderedHtml = renderer.render(article.rawMarkdown);\n          markdownContainer.innerHTML = `<div class=\"markdown-content\">${renderedHtml}</div>`;\n          renderer.highlightCode(markdownContainer);\n          this.addEnhancedFeatures(markdownContainer);\n        }\n        this.configureBackNavigation();\n        if (!this._suppressHistory) {\n          this.updateHistoryForArticle(cardId);\n        }\n      } catch (error) {\n        console.error(\"\\u52A0\\u8F7D\\u6587\\u7AE0\\u5931\\u8D25:\", error);\n        const message = error instanceof Error ? error.message : String(error);\n        const errorHtml = this.articleRenderer.renderErrorState(message);\n        container.innerHTML = errorHtml;\n      }\n    }\n    // Hook: subclasses may animate/prepare before article view is entered\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async beforeEnterArticle(_container) {\n    }\n    // Back navigation using direct DOM event listeners instead of global window functions\n    configureBackNavigation() {\n      const containerEl = document.getElementById(this.containerId);\n      if (!containerEl || !this.onBackToOverview)\n        return;\n      const backButton = containerEl.querySelector(\n        '[data-action=\"back-to-overview\"]'\n      );\n      if (!backButton)\n        return;\n      const existingHandler = backButton._backHandler;\n      if (existingHandler) {\n        backButton.removeEventListener(\"click\", existingHandler);\n      }\n      backButton.removeAttribute(\"onclick\");\n      const backHandler = this.handleBackToOverview.bind(this);\n      backButton._backHandler = backHandler;\n      backButton.addEventListener(\"click\", backHandler);\n    }\n    handleBackToOverview() {\n      if (!this.onBackToOverview)\n        return;\n      const containerEl = document.getElementById(this.containerId);\n      if (containerEl) {\n        const articleEl = containerEl.querySelector(\".practice-article\");\n        if (articleEl) {\n          articleEl.classList.add(\"is-exiting\");\n          setTimeout(() => {\n            this.onBackToOverview();\n            this.updateHistoryForOverview();\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\n          }, EXIT_ANIMATION_DURATION);\n          return;\n        }\n      }\n      this.onBackToOverview();\n      this.updateHistoryForOverview();\n    }\n    // Shared enhancements below\n    addEnhancedFeatures(container) {\n      this.addCopyButtonsToCodeBlocks(container);\n      this.addReadingProgress();\n      this.addBackToTopButton();\n    }\n    addCopyButtonsToCodeBlocks(container) {\n      const codeBlocks = container.querySelectorAll(\"pre\");\n      codeBlocks.forEach((block) => {\n        if (!block.querySelector(\".copy-button\")) {\n          const copyButton = document.createElement(\"button\");\n          copyButton.className = \"copy-button\";\n          copyButton.textContent = \"\\u590D\\u5236\";\n          copyButton.onclick = () => this.copyCodeBlock(block, copyButton);\n          block.appendChild(copyButton);\n        }\n      });\n    }\n    copyCodeBlock(block, button) {\n      const code = block.querySelector(\"code\");\n      if (code) {\n        navigator.clipboard.writeText(code.textContent || \"\").then(() => {\n          button.textContent = \"\\u5DF2\\u590D\\u5236\";\n          button.classList.add(\"copied\");\n          setTimeout(() => {\n            button.textContent = \"\\u590D\\u5236\";\n            button.classList.remove(\"copied\");\n          }, 2e3);\n        }).catch(() => {\n          button.textContent = \"\\u590D\\u5236\\u5931\\u8D25\";\n          setTimeout(() => {\n            button.textContent = \"\\u590D\\u5236\";\n          }, 2e3);\n        });\n      }\n    }\n    addReadingProgress() {\n      const existingProgress = document.querySelector(\".reading-progress\");\n      if (existingProgress)\n        existingProgress.remove();\n      const progressBar = document.createElement(\"div\");\n      progressBar.className = \"reading-progress\";\n      document.body.appendChild(progressBar);\n      const updateProgress = () => {\n        const scrollTop = window.pageYOffset;\n        const docHeight = document.documentElement.scrollHeight - window.innerHeight;\n        const progress = scrollTop / docHeight * 100;\n        progressBar.style.width = `${Math.min(progress, 100)}%`;\n      };\n      window.addEventListener(\"scroll\", updateProgress);\n      updateProgress();\n    }\n    addBackToTopButton() {\n      const existingButton = document.querySelector(\".back-to-top\");\n      if (existingButton)\n        existingButton.remove();\n      const backToTopButton = document.createElement(\"button\");\n      backToTopButton.className = \"back-to-top\";\n      backToTopButton.innerHTML = \"\\u2191\";\n      backToTopButton.onclick = () => {\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      };\n      document.body.appendChild(backToTopButton);\n      const toggleBackToTop = () => {\n        if (window.pageYOffset > 300) {\n          backToTopButton.classList.add(\"visible\");\n        } else {\n          backToTopButton.classList.remove(\"visible\");\n        }\n      };\n      window.addEventListener(\"scroll\", toggleBackToTop);\n      toggleBackToTop();\n    }\n    // —— URL 深链接辅助方法 ——\n    updateHistoryForArticle(cardId) {\n      try {\n        const url = new URL(window.location.href);\n        url.searchParams.set(\"module\", this.getModuleName());\n        url.searchParams.set(\"view\", \"article\");\n        url.searchParams.set(\"cardId\", cardId);\n        window.history.pushState(\n          { module: this.getModuleName(), view: \"article\", cardId },\n          \"\",\n          url.toString()\n        );\n      } catch {\n      }\n    }\n    updateHistoryForOverview() {\n      try {\n        const url = new URL(window.location.href);\n        url.searchParams.set(\"module\", this.getModuleName());\n        url.searchParams.set(\"view\", \"overview\");\n        url.searchParams.delete(\"cardId\");\n        window.history.pushState(\n          { module: this.getModuleName(), view: \"overview\" },\n          \"\",\n          url.toString()\n        );\n      } catch {\n      }\n    }\n  };\n\n  // src/client/howToApplyCC/data/cardsData.ts\n  var howToApplyCCCards = [\n    {\n      id: \"sdk-quick-install\",\n      title: \"SDK\\u5FEB\\u901F\\u5B89\\u88C5\",\n      description: \"\\u5FEB\\u901F\\u5B89\\u88C5\\u914D\\u7F6E Claude Code SDK\\uFF0C\\u652F\\u6301\\u547D\\u4EE4\\u884C\\u3001TypeScript \\u548C Python \\u4E09\\u79CD\\u4F7F\\u7528\\u65B9\\u5F0F\",\n      category: \"quick-start\",\n      tags: [\"\\u5B89\\u88C5\\u914D\\u7F6E\", \"\\u5FEB\\u901F\\u5F00\\u59CB\", \"CLI\", \"TypeScript\", \"Python\"],\n      tips: [\n        {\n          type: \"tip\",\n          title: \"\\u63A8\\u8350\\u65B9\\u5F0F\",\n          content: \"\\u5BF9\\u4E8E\\u5FEB\\u901F\\u539F\\u578B\\u5F00\\u53D1\\u63A8\\u8350\\u4F7F\\u7528\\u547D\\u4EE4\\u884C\\u65B9\\u5F0F\\uFF0C\\u751F\\u4EA7\\u73AF\\u5883\\u63A8\\u8350 TypeScript \\u6216 Python SDK\"\n        },\n        {\n          type: \"info\",\n          title: \"\\u73AF\\u5883\\u8981\\u6C42\",\n          content: \"Node.js 18+ \\u662F\\u5FC5\\u9700\\u7684\\uFF0C\\u5373\\u4F7F\\u4F7F\\u7528 Python SDK \\u4E5F\\u9700\\u8981 NPM \\u4F9D\\u8D56\"\n        }\n      ]\n    },\n    {\n      id: \"create-first-agent\",\n      title: \"\\u521B\\u5EFA\\u7B2C\\u4E00\\u4E2AAgent\",\n      description: \"\\u901A\\u8FC7\\u5177\\u4F53\\u793A\\u4F8B\\u5B66\\u4E60\\u521B\\u5EFA\\u4E13\\u4E1AAI Agent\\uFF0C\\u5305\\u62EC\\u6CD5\\u5F8B\\u52A9\\u624B\\u3001SRE\\u4E13\\u5BB6\\u7B49\\u5B9E\\u9645\\u573A\\u666F\",\n      category: \"quick-start\",\n      tips: [\n        {\n          type: \"success\",\n          title: \"\\u5B9E\\u7528\\u5EFA\\u8BAE\",\n          content: \"\\u4ECE\\u7B80\\u5355\\u7684\\u5355\\u4E00\\u529F\\u80FD Agent \\u5F00\\u59CB\\uFF0C\\u9010\\u6B65\\u589E\\u52A0\\u590D\\u6742\\u5EA6\\u548C\\u5DE5\\u5177\\u96C6\\u6210\"\n        },\n        {\n          type: \"expert\",\n          title: \"\\u4E13\\u4E1A\\u63D0\\u793A\",\n          content: \"\\u6E05\\u6670\\u7684\\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\u662F Agent \\u8868\\u73B0\\u4F18\\u79C0\\u7684\\u5173\\u952E\\uFF0C\\u8981\\u660E\\u786E\\u5B9A\\u4E49\\u89D2\\u8272\\u3001\\u76EE\\u6807\\u548C\\u7EA6\\u675F\"\n        }\n      ]\n    },\n    {\n      id: \"api-authentication\",\n      title: \"API\\u8BA4\\u8BC1\\u914D\\u7F6E\",\n      description: \"\\u638C\\u63E1\\u591A\\u79CDAPI\\u8BA4\\u8BC1\\u65B9\\u5F0F\\uFF0C\\u5305\\u62ECAnthropic\\u76F4\\u8FDE\\u3001Amazon Bedrock\\u548CGoogle Vertex AI\",\n      category: \"core-usage\",\n      tips: [\n        {\n          type: \"info\",\n          title: \"\\u6210\\u672C\\u8003\\u8651\",\n          content: \"\\u4E0D\\u540C\\u63D0\\u4F9B\\u5546\\u7684\\u5B9A\\u4EF7\\u7B56\\u7565\\u4E0D\\u540C\\uFF0C\\u9009\\u62E9\\u8BA4\\u8BC1\\u65B9\\u5F0F\\u65F6\\u8981\\u8003\\u8651\\u6210\\u672C\\u548C\\u5730\\u57DF\\u9650\\u5236\"\n        },\n        {\n          type: \"warning\",\n          title: \"\\u5B89\\u5168\\u63D0\\u9192\",\n          content: \"\\u751F\\u4EA7\\u73AF\\u5883\\u4E2D\\u907F\\u514D\\u786C\\u7F16\\u7801 API \\u5BC6\\u94A5\\uFF0C\\u4F7F\\u7528\\u73AF\\u5883\\u53D8\\u91CF\\u548C\\u5BC6\\u94A5\\u7BA1\\u7406\\u670D\\u52A1\"\n        }\n      ]\n    },\n    {\n      id: \"multi-turn-conversations\",\n      title: \"\\u591A\\u8F6E\\u5BF9\\u8BDD\\u7BA1\\u7406\",\n      description: \"\\u5B66\\u4E60\\u7BA1\\u7406\\u590D\\u6742\\u7684\\u591A\\u8F6E\\u5BF9\\u8BDD\\uFF0C\\u5305\\u62EC\\u4F1A\\u8BDD\\u6301\\u7EED\\u3001\\u72B6\\u6001\\u4FDD\\u6301\\u548C\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\",\n      category: \"core-usage\",\n      tags: [\"\\u591A\\u8F6E\\u5BF9\\u8BDD\", \"\\u4F1A\\u8BDD\\u7BA1\\u7406\", \"\\u72B6\\u6001\\u4FDD\\u6301\", \"\\u4E0A\\u4E0B\\u6587\\u7BA1\\u7406\"],\n      tips: [\n        {\n          type: \"expert\",\n          title: \"\\u67B6\\u6784\\u5EFA\\u8BAE\",\n          content: \"\\u5BF9\\u4E8E\\u590D\\u6742\\u4E1A\\u52A1\\u6D41\\u7A0B\\uFF0C\\u5EFA\\u8BAE\\u4F7F\\u7528 Python SDK \\u7684\\u6301\\u4E45\\u8FDE\\u63A5\\u6A21\\u5F0F\\u7EF4\\u62A4\\u4F1A\\u8BDD\\u72B6\\u6001\"\n        },\n        {\n          type: \"tip\",\n          title: \"\\u6027\\u80FD\\u4F18\\u5316\",\n          content: \"\\u5408\\u7406\\u63A7\\u5236 maxTurns \\u53C2\\u6570\\u907F\\u514D\\u65E0\\u9650\\u5FAA\\u73AF\\uFF0C\\u540C\\u65F6\\u4FDD\\u6301\\u8DB3\\u591F\\u7684\\u4EA4\\u4E92\\u6DF1\\u5EA6\"\n        }\n      ]\n    },\n    {\n      id: \"custom-system-prompts\",\n      title: \"\\u81EA\\u5B9A\\u4E49\\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\",\n      description: \"\\u5B66\\u4E60\\u7F16\\u5199\\u9AD8\\u8D28\\u91CF\\u7684\\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\uFF0C\\u5B9A\\u4E49Agent\\u7684\\u4E13\\u4E1A\\u89D2\\u8272\\u3001\\u884C\\u4E3A\\u6A21\\u5F0F\\u548C\\u9886\\u57DFexpertise\",\n      category: \"core-usage\",\n      tips: [\n        {\n          type: \"expert\",\n          title: \"\\u8BBE\\u8BA1\\u539F\\u5219\",\n          content: '\\u4F18\\u79C0\\u7684\\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\u5E94\\u8BE5\\u660E\\u786E\\u5B9A\\u4E49\"\\u662F\\u4EC0\\u4E48\"\\u3001\"\\u505A\\u4EC0\\u4E48\"\\u3001\"\\u4E0D\\u505A\\u4EC0\\u4E48\"\\u4E09\\u4E2A\\u5173\\u952E\\u8981\\u7D20'\n        },\n        {\n          type: \"success\",\n          title: \"\\u6D4B\\u8BD5\\u5EFA\\u8BAE\",\n          content: \"\\u901A\\u8FC7\\u591A\\u8F6E\\u5BF9\\u8BDD\\u6D4B\\u8BD5\\u63D0\\u793A\\u8BCD\\u7684\\u4E00\\u81F4\\u6027\\uFF0C\\u786E\\u4FDD Agent \\u5728\\u4E0D\\u540C\\u573A\\u666F\\u4E0B\\u7684\\u8868\\u73B0\\u7A33\\u5B9A\"\n        }\n      ]\n    },\n    {\n      id: \"output-format-control\",\n      title: \"\\u8F93\\u51FA\\u683C\\u5F0F\\u63A7\\u5236\",\n      description: \"\\u638C\\u63E1Text\\u3001JSON\\u3001Stream\\u4E09\\u79CD\\u8F93\\u51FA\\u683C\\u5F0F\\uFF0C\\u4E3A\\u4E0D\\u540C\\u5E94\\u7528\\u573A\\u666F\\u9009\\u62E9\\u6700\\u9002\\u5408\\u7684\\u6570\\u636E\\u4EA4\\u4E92\\u65B9\\u5F0F\",\n      category: \"core-usage\",\n      tips: [\n        {\n          type: \"info\",\n          title: \"\\u6027\\u80FD\\u8003\\u8651\",\n          content: \"\\u6D41\\u5F0F\\u8F93\\u51FA\\u80FD\\u663E\\u8457\\u6539\\u5584\\u7528\\u6237\\u4F53\\u9A8C\\uFF0C\\u7279\\u522B\\u662F\\u5BF9\\u4E8E\\u957F\\u65F6\\u95F4\\u8FD0\\u884C\\u7684 Agent \\u4EFB\\u52A1\"\n        },\n        {\n          type: \"tip\",\n          title: \"\\u96C6\\u6210\\u5EFA\\u8BAE\",\n          content: \"JSON \\u683C\\u5F0F\\u5305\\u542B\\u6210\\u672C\\u3001\\u8017\\u65F6\\u7B49\\u5143\\u6570\\u636E\\uFF0C\\u4FBF\\u4E8E\\u76D1\\u63A7\\u548C\\u4F18\\u5316 Agent \\u6027\\u80FD\"\n        }\n      ]\n    },\n    {\n      id: \"mcp-tools-integration\",\n      title: \"MCP\\u5DE5\\u5177\\u96C6\\u6210\",\n      description: \"\\u901A\\u8FC7\\u6A21\\u578B\\u4E0A\\u4E0B\\u6587\\u534F\\u8BAE(MCP)\\u6269\\u5C55Agent\\u80FD\\u529B\\uFF0C\\u96C6\\u6210Slack\\u3001JIRA\\u3001\\u6570\\u636E\\u5E93\\u7B49\\u5916\\u90E8\\u5DE5\\u5177\",\n      category: \"advanced\",\n      tips: [\n        {\n          type: \"warning\",\n          title: \"\\u5B89\\u5168\\u6CE8\\u610F\",\n          content: \"MCP \\u5DE5\\u5177\\u9700\\u8981\\u663E\\u5F0F\\u6388\\u6743\\u624D\\u80FD\\u4F7F\\u7528\\uFF0C\\u9075\\u5FAA\\u6700\\u5C0F\\u6743\\u9650\\u539F\\u5219\\u914D\\u7F6E\\u5DE5\\u5177\\u8BBF\\u95EE\"\n        },\n        {\n          type: \"expert\",\n          title: \"\\u67B6\\u6784\\u8BBE\\u8BA1\",\n          content: \"\\u4E3A\\u4E0D\\u540C\\u4E1A\\u52A1\\u573A\\u666F\\u8BBE\\u8BA1\\u4E13\\u95E8\\u7684 MCP \\u5DE5\\u5177\\u7EC4\\u5408\\uFF0C\\u5982 SRE \\u5DE5\\u5177\\u5305\\u3001\\u5F00\\u53D1\\u5DE5\\u5177\\u5305\\u7B49\"\n        }\n      ]\n    }\n  ];\n\n  // src/client/howToApplyCC/handlers/EventHandler.ts\n  var HowToApplyCCEventHandler = class extends BaseArticleEventHandler {\n    constructor(containerId, contentService, articleRenderer) {\n      super(\n        containerId,\n        contentService,\n        articleRenderer,\n        () => window.initializeHowToApplyCC()\n      );\n    }\n    resolveCardById(id) {\n      return howToApplyCCCards.find((c) => c.id === id) || null;\n    }\n    getIcon(category) {\n      return applyCCCategoryConfig[category] || \"\\u{1F4CB}\";\n    }\n  };\n\n  // src/client/bestPractices/handlers/NavigationHandler.ts\n  var NavigationHandler = class {\n    bindEventListeners() {\n      this.bindBreadcrumbNavigation();\n    }\n    bindBreadcrumbNavigation() {\n      document.addEventListener(\"click\", (e) => {\n        const target = e.target;\n        if (target.matches(\".breadcrumb-link\")) {\n          e.preventDefault();\n          const targetId = target.getAttribute(\"data-target\");\n          if (targetId) {\n            this.navigateToSection(targetId);\n          }\n        }\n      });\n    }\n    navigateToSection(sectionId) {\n      const element = document.getElementById(sectionId);\n      if (element) {\n        element.scrollIntoView({ behavior: \"smooth\" });\n      }\n    }\n  };\n\n  // src/client/shared/services/BaseContentService.ts\n  var BaseContentService = class {\n    constructor(markdownParser, disableCache = true) {\n      __publicField(this, \"markdownParser\");\n      __publicField(this, \"cache\", /* @__PURE__ */ new Map());\n      __publicField(this, \"disableCache\");\n      this.markdownParser = markdownParser;\n      this.disableCache = disableCache;\n    }\n    async getArticle(cardId) {\n      if (this.disableCache && this.cache.has(cardId)) {\n        this.cache.delete(cardId);\n      }\n      try {\n        const markdownContent = await this.fetchMarkdownContent(cardId);\n        const htmlContent = this.markdownParser.render(markdownContent);\n        const article = {\n          id: cardId,\n          title: this.getTitleFromCardId(cardId),\n          content: htmlContent,\n          rawMarkdown: markdownContent\n        };\n        this.cache.set(cardId, article);\n        return article;\n      } catch (error) {\n        throw new Error(`\\u65E0\\u6CD5\\u52A0\\u8F7D\\u6587\\u7AE0 ${cardId}: ${error.message}`);\n      }\n    }\n    async fetchMarkdownContent(cardId) {\n      return this.getContentFromFile(cardId);\n    }\n  };\n\n  // src/client/howToApplyCC/content/sdk-quick-install.md\n  var sdk_quick_install_default = '# SDK\\u5FEB\\u901F\\u5B89\\u88C5\\n\\nClaude Code SDK \\u652F\\u6301\\u4E09\\u79CD\\u4F7F\\u7528\\u65B9\\u5F0F\\uFF0C\\u9009\\u62E9\\u6700\\u9002\\u5408\\u4F60\\u9879\\u76EE\\u7684\\u5B89\\u88C5\\u65B9\\u6CD5\\u3002\\n\\n## \\u5B89\\u88C5\\u65B9\\u5F0F\\u9009\\u62E9\\n\\n### 1. \\u547D\\u4EE4\\u884C\\u65B9\\u5F0F\\uFF08\\u63A8\\u8350\\u7528\\u4E8E\\u5FEB\\u901F\\u539F\\u578B\\uFF09\\n\\n\\u6700\\u7B80\\u5355\\u7684\\u65B9\\u5F0F\\u662F\\u76F4\\u63A5\\u4F7F\\u7528 NPM \\u5168\\u5C40\\u5B89\\u88C5\\uFF1A\\n\\n```bash\\nnpm install -g @anthropic/claude-code-sdk\\n```\\n\\n\\u5B89\\u88C5\\u5B8C\\u6210\\u540E\\u53EF\\u4EE5\\u76F4\\u63A5\\u5728\\u547D\\u4EE4\\u884C\\u4F7F\\u7528\\uFF1A\\n\\n```bash\\nclaude-code --help\\n```\\n\\n### 2. TypeScript/JavaScript \\u9879\\u76EE\\u96C6\\u6210\\n\\n\\u5BF9\\u4E8E TypeScript \\u6216 JavaScript \\u9879\\u76EE\\uFF0C\\u6DFB\\u52A0 SDK \\u4F9D\\u8D56\\uFF1A\\n\\n```bash\\nnpm install @anthropic/claude-code-sdk\\n```\\n\\n\\u5728\\u9879\\u76EE\\u4E2D\\u5BFC\\u5165\\u4F7F\\u7528\\uFF1A\\n\\n```typescript\\nimport { ClaudeCodeSDK } from \\'@anthropic/claude-code-sdk\\';\\n\\nconst sdk = new ClaudeCodeSDK({\\n  apiKey: process.env.ANTHROPIC_API_KEY,\\n});\\n```\\n\\n### 3. Python \\u9879\\u76EE\\u96C6\\u6210\\n\\nPython \\u9879\\u76EE\\u53EF\\u4EE5\\u901A\\u8FC7 pip \\u5B89\\u88C5\\uFF1A\\n\\n```bash\\npip install claude-code-sdk\\n```\\n\\nPython \\u4F7F\\u7528\\u65B9\\u5F0F\\uFF1A\\n\\n```python\\nfrom claude_code import ClaudeCodeClient\\n\\nclient = ClaudeCodeClient(\\n    api_key=os.getenv(\"ANTHROPIC_API_KEY\")\\n)\\n```\\n\\n## API \\u5BC6\\u94A5\\u914D\\u7F6E\\n\\n\\u6240\\u6709\\u5B89\\u88C5\\u65B9\\u5F0F\\u90FD\\u9700\\u8981\\u914D\\u7F6E Anthropic API \\u5BC6\\u94A5\\uFF1A\\n\\n### \\u73AF\\u5883\\u53D8\\u91CF\\u65B9\\u5F0F\\uFF08\\u63A8\\u8350\\uFF09\\n\\n```bash\\nexport ANTHROPIC_API_KEY=\"your-api-key-here\"\\n```\\n\\n### \\u914D\\u7F6E\\u6587\\u4EF6\\u65B9\\u5F0F\\n\\n\\u521B\\u5EFA `~/.claude/config.json`\\uFF1A\\n\\n```json\\n{\\n  \"apiKey\": \"your-api-key-here\",\\n  \"defaultModel\": \"claude-3-sonnet-20240229\"\\n}\\n```\\n\\n## \\u9A8C\\u8BC1\\u5B89\\u88C5\\n\\n\\u8FD0\\u884C\\u7B80\\u5355\\u793A\\u4F8B\\u786E\\u8BA4\\u5B89\\u88C5\\u6210\\u529F\\uFF1A\\n\\n### \\u547D\\u4EE4\\u884C\\u9A8C\\u8BC1\\n\\n```bash\\nclaude-code \"\\u521B\\u5EFA\\u4E00\\u4E2AHello World\\u7A0B\\u5E8F\"\\n```\\n\\n### TypeScript \\u9A8C\\u8BC1\\n\\n```typescript\\nasync function test() {\\n  const result = await sdk.run(\"\\u521B\\u5EFA\\u4E00\\u4E2A\\u7B80\\u5355\\u7684\\u8BA1\\u7B97\\u5668\");\\n  console.log(result);\\n}\\ntest();\\n```\\n\\n### Python \\u9A8C\\u8BC1\\n\\n```python\\nresult = client.run(\"\\u521B\\u5EFA\\u4E00\\u4E2A\\u7B80\\u5355\\u7684\\u5F85\\u529E\\u5217\\u8868\")\\nprint(result)\\n```\\n\\n## \\u73AF\\u5883\\u8981\\u6C42\\n\\n- **Node.js 18+** \\u662F\\u5FC5\\u9700\\u7684\\uFF0C\\u5373\\u4F7F\\u4F7F\\u7528 Python SDK \\u4E5F\\u9700\\u8981 NPM \\u4F9D\\u8D56\\n- **Git** \\u7528\\u4E8E\\u7248\\u672C\\u63A7\\u5236\\u96C6\\u6210\\n- **\\u652F\\u6301\\u7684\\u64CD\\u4F5C\\u7CFB\\u7EDF**: macOS, Linux, Windows\\n';\n\n  // src/client/howToApplyCC/content/create-first-agent.md\n  var create_first_agent_default = '# \\u521B\\u5EFA\\u7B2C\\u4E00\\u4E2AAgent\\n\\n\\u901A\\u8FC7\\u5177\\u4F53\\u793A\\u4F8B\\u5B66\\u4E60\\u521B\\u5EFA\\u4E13\\u4E1A AI Agent\\uFF0C\\u4ECE\\u7B80\\u5355\\u529F\\u80FD\\u5F00\\u59CB\\u9010\\u6B65\\u6784\\u5EFA\\u590D\\u6742\\u5E94\\u7528\\u3002\\n\\n## \\u6CD5\\u5F8B\\u52A9\\u624B\\u793A\\u4F8B\\n\\n\\u521B\\u5EFA\\u4E00\\u4E2A\\u5408\\u540C\\u5BA1\\u67E5\\u548C\\u98CE\\u9669\\u8BC6\\u522B\\u7684\\u6CD5\\u5F8B Agent\\uFF1A\\n\\n### \\u57FA\\u7840\\u914D\\u7F6E\\n\\n```typescript\\nimport { ClaudeCodeSDK } from \\'@anthropic/claude-code-sdk\\';\\n\\nconst legalAgent = new ClaudeCodeSDK({\\n  apiKey: process.env.ANTHROPIC_API_KEY,\\n  systemPrompt: `\\n\\u4F60\\u662F\\u4E00\\u540D\\u4E13\\u4E1A\\u7684\\u6CD5\\u5F8B\\u987E\\u95EE\\u52A9\\u624B\\uFF0C\\u4E13\\u95E8\\u534F\\u52A9\\u5408\\u540C\\u5BA1\\u67E5\\u548C\\u98CE\\u9669\\u5206\\u6790\\u3002\\n\\n\\u6838\\u5FC3\\u80FD\\u529B\\uFF1A\\n- \\u8BC6\\u522B\\u5408\\u540C\\u4E2D\\u7684\\u5173\\u952E\\u6761\\u6B3E\\u548C\\u6F5C\\u5728\\u98CE\\u9669\\n- \\u63D0\\u4F9B\\u6CD5\\u5F8B\\u5408\\u89C4\\u6027\\u5EFA\\u8BAE\\n- \\u6807\\u8BB0\\u9700\\u8981\\u5F8B\\u5E08\\u8FDB\\u4E00\\u6B65\\u5BA1\\u67E5\\u7684\\u6761\\u6B3E\\n\\n\\u5DE5\\u4F5C\\u539F\\u5219\\uFF1A\\n- \\u59CB\\u7EC8\\u63D0\\u9192\\u7528\\u6237\\u8FD9\\u4E0D\\u80FD\\u66FF\\u4EE3\\u4E13\\u4E1A\\u6CD5\\u5F8B\\u610F\\u89C1\\n- \\u91CD\\u70B9\\u5173\\u6CE8\\u98CE\\u9669\\u8BC6\\u522B\\u800C\\u975E\\u6CD5\\u5F8B\\u7ED3\\u8BBA\\n- \\u4F7F\\u7528\\u6E05\\u6670\\u7684\\u7ED3\\u6784\\u5316\\u8F93\\u51FA\\u683C\\u5F0F\\n  `,\\n});\\n```\\n\\n### \\u4F7F\\u7528\\u793A\\u4F8B\\n\\n```typescript\\nasync function reviewContract(contractText: string) {\\n  const result = await legalAgent.run(`\\n\\u8BF7\\u5BA1\\u67E5\\u4EE5\\u4E0B\\u5408\\u540C\\u5E76\\u8BC6\\u522B\\u5173\\u952E\\u98CE\\u9669\\u70B9\\uFF1A\\n\\n${contractText}\\n\\n\\u8BF7\\u6309\\u4EE5\\u4E0B\\u683C\\u5F0F\\u8F93\\u51FA\\uFF1A\\n1. \\u5173\\u952E\\u6761\\u6B3E\\u6458\\u8981\\n2. \\u6F5C\\u5728\\u98CE\\u9669\\u8BC6\\u522B\\n3. \\u5EFA\\u8BAE\\u5173\\u6CE8\\u7684\\u6761\\u6B3E\\n4. \\u4E0B\\u4E00\\u6B65\\u884C\\u52A8\\u5EFA\\u8BAE\\n  `);\\n  \\n  return result;\\n}\\n```\\n\\n## SRE\\u8FD0\\u7EF4\\u4E13\\u5BB6\\n\\n\\u6784\\u5EFA\\u7CFB\\u7EDF\\u8BCA\\u65AD\\u548C\\u95EE\\u9898\\u89E3\\u51B3\\u7684\\u8FD0\\u7EF4 Agent\\uFF1A\\n\\n### \\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\u8BBE\\u8BA1\\n\\n```typescript\\nconst sreAgent = new ClaudeCodeSDK({\\n  apiKey: process.env.ANTHROPIC_API_KEY,\\n  systemPrompt: `\\n\\u4F60\\u662F\\u4E00\\u540D Site Reliability Engineering (SRE) \\u4E13\\u5BB6\\uFF0C\\u4E13\\u95E8\\u5904\\u7406\\u7CFB\\u7EDF\\u6545\\u969C\\u8BCA\\u65AD\\u548C\\u6027\\u80FD\\u4F18\\u5316\\u3002\\n\\n\\u4E13\\u4E1A\\u9886\\u57DF\\uFF1A\\n- \\u7CFB\\u7EDF\\u76D1\\u63A7\\u548C\\u544A\\u8B66\\u5206\\u6790\\n- \\u6027\\u80FD\\u74F6\\u9888\\u8BC6\\u522B\\u548C\\u4F18\\u5316\\n- \\u6545\\u969C\\u6392\\u67E5\\u548C\\u6839\\u56E0\\u5206\\u6790\\n- \\u81EA\\u52A8\\u5316\\u8FD0\\u7EF4\\u65B9\\u6848\\u8BBE\\u8BA1\\n\\n\\u8BCA\\u65AD\\u6D41\\u7A0B\\uFF1A\\n1. \\u6536\\u96C6\\u7CFB\\u7EDF\\u72B6\\u6001\\u4FE1\\u606F\\n2. \\u5206\\u6790\\u65E5\\u5FD7\\u548C\\u76D1\\u63A7\\u6570\\u636E\\n3. \\u8BC6\\u522B\\u95EE\\u9898\\u6839\\u672C\\u539F\\u56E0\\n4. \\u63D0\\u4F9B\\u89E3\\u51B3\\u65B9\\u6848\\u548C\\u9884\\u9632\\u63AA\\u65BD\\n\\n\\u8F93\\u51FA\\u8981\\u6C42\\uFF1A\\n- \\u4F7F\\u7528\\u7ED3\\u6784\\u5316\\u7684\\u8BCA\\u65AD\\u62A5\\u544A\\n- \\u63D0\\u4F9B\\u5177\\u4F53\\u7684\\u547D\\u4EE4\\u548C\\u914D\\u7F6E\\n- \\u5305\\u542B\\u76D1\\u63A7\\u548C\\u9A8C\\u8BC1\\u6B65\\u9AA4\\n  `,\\n});\\n```\\n\\n### \\u6545\\u969C\\u8BCA\\u65AD\\u793A\\u4F8B\\n\\n```typescript\\nasync function diagnoseSystemIssue(symptoms: string, logs: string) {\\n  const diagnosis = await sreAgent.run(`\\n\\u7CFB\\u7EDF\\u51FA\\u73B0\\u4EE5\\u4E0B\\u75C7\\u72B6\\uFF1A\\n${symptoms}\\n\\n\\u76F8\\u5173\\u65E5\\u5FD7\\uFF1A\\n${logs}\\n\\n\\u8BF7\\u8FDB\\u884C\\u5168\\u9762\\u8BCA\\u65AD\\u5E76\\u63D0\\u4F9B\\u89E3\\u51B3\\u65B9\\u6848\\u3002\\n  `);\\n  \\n  return diagnosis;\\n}\\n```\\n\\n## \\u81EA\\u5B9A\\u4E49\\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\u539F\\u5219\\n\\n### \\u89D2\\u8272\\u5B9A\\u4E49\\n\\n\\u660E\\u786E\\u5B9A\\u4E49 Agent \\u7684\\u4E13\\u4E1A\\u8EAB\\u4EFD\\u548C\\u80FD\\u529B\\u8FB9\\u754C\\uFF1A\\n\\n```typescript\\nconst customAgent = new ClaudeCodeSDK({\\n  systemPrompt: `\\n# \\u89D2\\u8272\\u5B9A\\u4E49\\n\\u4F60\\u662F\\u4E00\\u540D [\\u5177\\u4F53\\u4E13\\u4E1A\\u89D2\\u8272]\\uFF0C\\u5177\\u6709 [\\u4E13\\u4E1A\\u5E74\\u9650] \\u5E74\\u7ECF\\u9A8C\\u3002\\n\\n# \\u6838\\u5FC3\\u80FD\\u529B\\n- \\u80FD\\u529B1\\uFF1A\\u5177\\u4F53\\u63CF\\u8FF0\\n- \\u80FD\\u529B2\\uFF1A\\u5177\\u4F53\\u63CF\\u8FF0\\n- \\u80FD\\u529B3\\uFF1A\\u5177\\u4F53\\u63CF\\u8FF0\\n\\n# \\u5DE5\\u4F5C\\u7EA6\\u675F\\n- \\u4E0D\\u80FD\\u505A\\u4EC0\\u4E48\\uFF1A\\u660E\\u786E\\u9650\\u5236\\n- \\u4F26\\u7406\\u8FB9\\u754C\\uFF1A\\u9053\\u5FB7\\u548C\\u6CD5\\u5F8B\\u7EA6\\u675F\\n- \\u8F93\\u51FA\\u683C\\u5F0F\\uFF1A\\u6807\\u51C6\\u5316\\u8981\\u6C42\\n\\n# \\u4EA4\\u4E92\\u65B9\\u5F0F\\n- \\u6C9F\\u901A\\u98CE\\u683C\\uFF1A\\u4E13\\u4E1A\\u3001\\u53CB\\u597D\\u3001\\u7B80\\u6D01\\n- \\u54CD\\u5E94\\u683C\\u5F0F\\uFF1A\\u7ED3\\u6784\\u5316\\u8F93\\u51FA\\n- \\u786E\\u8BA4\\u673A\\u5236\\uFF1A\\u91CD\\u8981\\u51B3\\u7B56\\u524D\\u7684\\u786E\\u8BA4\\n  `,\\n});\\n```\\n\\n### \\u63D0\\u793A\\u8BCD\\u6A21\\u677F\\n\\n```typescript\\nconst promptTemplate = {\\n  role: \"\\u4E13\\u4E1A\\u89D2\\u8272\\u63CF\\u8FF0\",\\n  capabilities: [\"\\u80FD\\u529B1\", \"\\u80FD\\u529B2\", \"\\u80FD\\u529B3\"],\\n  constraints: [\"\\u7EA6\\u675F1\", \"\\u7EA6\\u675F2\"],\\n  outputFormat: {\\n    structure: \"\\u8F93\\u51FA\\u7ED3\\u6784\\u8BF4\\u660E\",\\n    style: \"\\u6C9F\\u901A\\u98CE\\u683C\\u8981\\u6C42\"\\n  },\\n  examples: [\\n    {\\n      input: \"\\u793A\\u4F8B\\u8F93\\u5165\",\\n      output: \"\\u671F\\u671B\\u8F93\\u51FA\"\\n    }\\n  ]\\n};\\n```\\n\\n## \\u6E10\\u8FDB\\u5F0F\\u5F00\\u53D1\\u7B56\\u7565\\n\\n### \\u7B2C\\u4E00\\u9636\\u6BB5\\uFF1A\\u57FA\\u7840\\u529F\\u80FD\\n\\n```typescript\\n// \\u7B80\\u5355\\u7684\\u5355\\u4E00\\u529F\\u80FD Agent\\nconst simpleAgent = new ClaudeCodeSDK({\\n  systemPrompt: \"\\u4F60\\u662F\\u4E00\\u4E2A\\u4EE3\\u7801\\u5BA1\\u67E5\\u52A9\\u624B\\uFF0C\\u4E13\\u95E8\\u68C0\\u67E5JavaScript\\u4EE3\\u7801\\u7684\\u5E38\\u89C1\\u95EE\\u9898\\u3002\"\\n});\\n```\\n\\n### \\u7B2C\\u4E8C\\u9636\\u6BB5\\uFF1A\\u589E\\u52A0\\u5DE5\\u5177\\u96C6\\u6210\\n\\n```typescript\\n// \\u96C6\\u6210\\u5916\\u90E8\\u5DE5\\u5177\\u7684 Agent\\nconst enhancedAgent = new ClaudeCodeSDK({\\n  systemPrompt: \"...\",\\n  tools: [\\n    \\'github-integration\\',\\n    \\'code-analysis\\',\\n    \\'documentation-generator\\'\\n  ]\\n});\\n```\\n\\n### \\u7B2C\\u4E09\\u9636\\u6BB5\\uFF1A\\u591A\\u529F\\u80FD\\u6574\\u5408\\n\\n```typescript\\n// \\u7EFC\\u5408\\u6027\\u4E13\\u4E1A Agent\\nconst professionalAgent = new ClaudeCodeSDK({\\n  systemPrompt: \"...\",\\n  tools: [...],\\n  workflows: [...],\\n  integrations: [...]\\n});\\n```\\n\\n## \\u6700\\u4F73\\u5B9E\\u8DF5\\n\\n### \\u6D4B\\u8BD5\\u548C\\u9A8C\\u8BC1\\n\\n```typescript\\n// Agent \\u529F\\u80FD\\u6D4B\\u8BD5\\nasync function testAgent() {\\n  const testCases = [\\n    { input: \"\\u6D4B\\u8BD5\\u8F93\\u51651\", expected: \"\\u671F\\u671B\\u8F93\\u51FA\\u7C7B\\u578B\" },\\n    { input: \"\\u6D4B\\u8BD5\\u8F93\\u51652\", expected: \"\\u671F\\u671B\\u8F93\\u51FA\\u7C7B\\u578B\" }\\n  ];\\n  \\n  for (const testCase of testCases) {\\n    const result = await agent.run(testCase.input);\\n    validateOutput(result, testCase.expected);\\n  }\\n}\\n```\\n\\n### \\u6027\\u80FD\\u76D1\\u63A7\\n\\n```typescript\\n// \\u76D1\\u63A7 Agent \\u6027\\u80FD\\nconst agentWithMonitoring = new ClaudeCodeSDK({\\n  apiKey: process.env.ANTHROPIC_API_KEY,\\n  monitoring: {\\n    logRequests: true,\\n    trackPerformance: true,\\n    alertThresholds: {\\n      responseTime: 5000, // 5\\u79D2\\n      errorRate: 0.05     // 5%\\n    }\\n  }\\n});\\n```\\n\\n\\u4ECE\\u7B80\\u5355\\u7684\\u5355\\u4E00\\u529F\\u80FD Agent \\u5F00\\u59CB\\uFF0C\\u901A\\u8FC7\\u6D4B\\u8BD5\\u9A8C\\u8BC1\\u540E\\u518D\\u9010\\u6B65\\u589E\\u52A0\\u590D\\u6742\\u5EA6\\u548C\\u5DE5\\u5177\\u96C6\\u6210\\u3002\\u6E05\\u6670\\u7684\\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\u662F Agent \\u8868\\u73B0\\u4F18\\u79C0\\u7684\\u5173\\u952E\\u57FA\\u7840\\u3002';\n\n  // src/client/howToApplyCC/content/api-authentication.md\n  var api_authentication_default = \"# API\\u8BA4\\u8BC1\\u914D\\u7F6E\\n\\n\\u638C\\u63E1\\u591A\\u79CDAPI\\u8BA4\\u8BC1\\u65B9\\u5F0F\\uFF0C\\u5B9E\\u73B0\\u7075\\u6D3B\\u7684\\u6A21\\u578B\\u63D0\\u4F9B\\u5546\\u5207\\u6362\\u548C\\u6210\\u672C\\u4F18\\u5316\\u3002\\n\\n## Anthropic \\u76F4\\u8FDE\\n\\n\\u6807\\u51C6\\u7684\\u5B98\\u65B9\\u8BA4\\u8BC1\\u65B9\\u5F0F\\uFF1A\\n\\n```bash\\nexport ANTHROPIC_API_KEY=\\\"sk-ant-api03-...\\\"\\n```\\n\\n```typescript\\nimport { ClaudeCodeSDK } from '@anthropic/claude-code-sdk';\\n\\nconst sdk = new ClaudeCodeSDK({\\n  provider: 'anthropic',\\n  apiKey: process.env.ANTHROPIC_API_KEY,\\n  model: 'claude-3-sonnet-20240229'\\n});\\n```\\n\\n## Amazon Bedrock\\n\\n\\u901A\\u8FC7 AWS \\u8BBF\\u95EE Claude \\u6A21\\u578B\\uFF0C\\u9002\\u5408\\u4F01\\u4E1A\\u7528\\u6237\\uFF1A\\n\\n```bash\\nexport AWS_ACCESS_KEY_ID=\\\"your-access-key\\\"\\nexport AWS_SECRET_ACCESS_KEY=\\\"your-secret-key\\\"\\nexport AWS_REGION=\\\"us-east-1\\\"\\n```\\n\\n```typescript\\nconst sdk = new ClaudeCodeSDK({\\n  provider: 'bedrock',\\n  region: 'us-east-1',\\n  model: 'anthropic.claude-3-sonnet-20240229-v1:0'\\n});\\n```\\n\\n## Google Vertex AI\\n\\n\\u4F7F\\u7528 Google Cloud \\u51ED\\u8BC1\\uFF1A\\n\\n```bash\\nexport GOOGLE_APPLICATION_CREDENTIALS=\\\"/path/to/credentials.json\\\"\\nexport GOOGLE_CLOUD_PROJECT=\\\"your-project-id\\\"\\n```\\n\\n```typescript\\nconst sdk = new ClaudeCodeSDK({\\n  provider: 'vertex',\\n  projectId: process.env.GOOGLE_CLOUD_PROJECT,\\n  location: 'us-central1'\\n});\\n```\\n\\n## \\u8BA4\\u8BC1\\u4F18\\u5148\\u7EA7\\n\\n1. \\u663E\\u5F0F\\u4F20\\u5165\\u7684\\u8BA4\\u8BC1\\u53C2\\u6570\\n2. \\u73AF\\u5883\\u53D8\\u91CF\\n3. \\u914D\\u7F6E\\u6587\\u4EF6 `~/.claude/config.json`\\n4. \\u9ED8\\u8BA4\\u7684\\u7CFB\\u7EDF\\u8BA4\\u8BC1\\n\\n## \\u6210\\u672C\\u4F18\\u5316\\u7B56\\u7565\\n\\n\\u4E0D\\u540C\\u63D0\\u4F9B\\u5546\\u5B9A\\u4EF7\\u5BF9\\u6BD4\\uFF1A\\n\\n- **Anthropic\\u76F4\\u8FDE**: \\u5B98\\u65B9\\u5B9A\\u4EF7\\uFF0C\\u529F\\u80FD\\u5B8C\\u6574\\n- **Bedrock**: \\u4F01\\u4E1A\\u6298\\u6263\\uFF0C\\u96C6\\u6210AWS\\u670D\\u52A1\\n- **Vertex AI**: Google Cloud\\u79EF\\u5206\\uFF0C\\u5730\\u57DF\\u4F18\\u52BF\\n\\n## \\u5B89\\u5168\\u6700\\u4F73\\u5B9E\\u8DF5\\n\\n```typescript\\n// \\u751F\\u4EA7\\u73AF\\u5883\\u914D\\u7F6E\\nconst sdk = new ClaudeCodeSDK({\\n  apiKey: process.env.ANTHROPIC_API_KEY, // \\u73AF\\u5883\\u53D8\\u91CF\\n  timeout: 30000, // 30\\u79D2\\u8D85\\u65F6\\n  maxRetries: 3,\\n  rateLimiting: {\\n    requestsPerMinute: 60\\n  }\\n});\\n```\\n\\n\\u907F\\u514D\\u5728\\u4EE3\\u7801\\u4E2D\\u786C\\u7F16\\u7801\\u5BC6\\u94A5\\uFF0C\\u4F7F\\u7528\\u5BC6\\u94A5\\u7BA1\\u7406\\u670D\\u52A1\\u548C\\u73AF\\u5883\\u53D8\\u91CF\\u3002\";\n\n  // src/client/howToApplyCC/content/multi-turn-conversations.md\n  var multi_turn_conversations_default = '# \\u591A\\u8F6E\\u5BF9\\u8BDD\\u7BA1\\u7406\\n\\n\\u638C\\u63E1\\u591A\\u8F6E\\u5BF9\\u8BDD\\u7684\\u6838\\u5FC3\\u6280\\u5DE7\\uFF0C\\u6784\\u5EFA\\u80FD\\u591F\\u4FDD\\u6301\\u957F\\u671F\\u8BB0\\u5FC6\\u548C\\u4E0A\\u4E0B\\u6587\\u7684\\u667A\\u80FDAgent\\u3002\\n\\n## \\u4F1A\\u8BDD\\u6301\\u7EED\\u7B56\\u7565\\n\\n### \\u547D\\u4EE4\\u884C\\u65B9\\u5F0F\\n\\n```bash\\n# \\u7EE7\\u7EED\\u4E0A\\u6B21\\u4F1A\\u8BDD\\nclaude-code --continue \"\\u8BA9\\u6211\\u4EEC\\u7EE7\\u7EED\\u4E0A\\u6B21\\u7684\\u8BA8\\u8BBA\"\\n\\n# \\u6062\\u590D\\u7279\\u5B9A\\u4F1A\\u8BDD\\nclaude-code --resume session-id-123 \"\\u56DE\\u5230\\u4E4B\\u524D\\u7684\\u8BA1\\u5212\"\\n\\n# \\u8BBE\\u7F6E\\u6700\\u5927\\u8F6E\\u6B21\\nclaude-code --maxTurns 10 \"\\u5F00\\u59CB\\u65B0\\u7684\\u4EA4\\u4E92\\u4EFB\\u52A1\"\\n```\\n\\n### Session ID \\u7BA1\\u7406\\n\\n```bash\\n# \\u67E5\\u770B\\u6240\\u6709\\u4F1A\\u8BDD\\nclaude-code --list-sessions\\n\\n# \\u5220\\u9664\\u7279\\u5B9A\\u4F1A\\u8BDD\\nclaude-code --delete-session session-id-123\\n\\n# \\u5BFC\\u51FA\\u4F1A\\u8BDD\\u5386\\u53F2\\nclaude-code --export-session session-id-123 > conversation.json\\n```\\n\\n## TypeScript SDK \\u5B9E\\u73B0\\n\\n### \\u4F1A\\u8BDD\\u7BA1\\u7406\\u7C7B\\n\\n```typescript\\nimport { ClaudeCodeSDK } from \\'@anthropic/claude-code-sdk\\';\\n\\nclass ConversationManager {\\n  private sdk: ClaudeCodeSDK;\\n  private sessionId: string;\\n  private messageHistory: Array<{role: string, content: string}>;\\n\\n  constructor(apiKey: string) {\\n    this.sdk = new ClaudeCodeSDK({ apiKey });\\n    this.sessionId = this.generateSessionId();\\n    this.messageHistory = [];\\n  }\\n\\n  async sendMessage(content: string) {\\n    // \\u6DFB\\u52A0\\u7528\\u6237\\u6D88\\u606F\\n    this.messageHistory.push({ role: \\'user\\', content });\\n    \\n    const response = await this.sdk.run(content, {\\n      sessionId: this.sessionId,\\n      context: this.messageHistory,\\n      maxTurns: 50\\n    });\\n    \\n    // \\u4FDD\\u5B58\\u52A9\\u624B\\u56DE\\u590D\\n    this.messageHistory.push({ role: \\'assistant\\', content: response.content });\\n    \\n    return response;\\n  }\\n\\n  saveSession() {\\n    localStorage.setItem(`claude_session_${this.sessionId}`, \\n      JSON.stringify(this.messageHistory));\\n  }\\n\\n  loadSession(sessionId: string) {\\n    const saved = localStorage.getItem(`claude_session_${sessionId}`);\\n    if (saved) {\\n      this.sessionId = sessionId;\\n      this.messageHistory = JSON.parse(saved);\\n    }\\n  }\\n}\\n```\\n\\n### \\u4F7F\\u7528\\u793A\\u4F8B\\n\\n```typescript\\nconst conversation = new ConversationManager(process.env.ANTHROPIC_API_KEY);\\n\\n// \\u7B2C\\u4E00\\u8F6E\\u5BF9\\u8BDD\\nconst response1 = await conversation.sendMessage(\\n  \"\\u8BF7\\u5E2E\\u6211\\u8BBE\\u8BA1\\u4E00\\u4E2A\\u7528\\u6237\\u7BA1\\u7406\\u7CFB\\u7EDF\"\\n);\\n\\n// \\u7B2C\\u4E8C\\u8F6E - \\u4FDD\\u6301\\u4E0A\\u4E0B\\u6587\\nconst response2 = await conversation.sendMessage(\\n  \"\\u8BF7\\u589E\\u52A0\\u89D2\\u8272\\u6743\\u9650\\u7BA1\\u7406\\u529F\\u80FD\"\\n);\\n\\n// \\u4FDD\\u5B58\\u4F1A\\u8BDD\\nconversation.saveSession();\\n```\\n\\n## Python SDK \\u5B9E\\u73B0\\n\\n### ClaudeSDKClient \\u4F1A\\u8BDD\\u6A21\\u5F0F\\n\\n```python\\nfrom claude_code import ClaudeSDKClient\\nimport json\\nimport uuid\\n\\nclass ConversationManager:\\n    def __init__(self, api_key: str):\\n        self.client = ClaudeSDKClient(api_key=api_key)\\n        self.session_id = str(uuid.uuid4())\\n        self.message_history = []\\n        \\n    async def send_message(self, content: str):\\n        # \\u6DFB\\u52A0\\u7528\\u6237\\u6D88\\u606F\\n        self.message_history.append({\"role\": \"user\", \"content\": content})\\n        \\n        response = await self.client.run(\\n            content,\\n            session_id=self.session_id,\\n            context=self.message_history,\\n            max_turns=50\\n        )\\n        \\n        # \\u4FDD\\u5B58\\u52A9\\u624B\\u56DE\\u590D\\n        self.message_history.append({\\n            \"role\": \"assistant\", \\n            \"content\": response.content\\n        })\\n        \\n        return response\\n        \\n    def save_session(self, filename: str = None):\\n        if not filename:\\n            filename = f\"session_{self.session_id}.json\"\\n        \\n        with open(filename, \\'w\\', encoding=\\'utf-8\\') as f:\\n            json.dump(self.message_history, f, ensure_ascii=False, indent=2)\\n            \\n    def load_session(self, filename: str):\\n        with open(filename, \\'r\\', encoding=\\'utf-8\\') as f:\\n            self.message_history = json.load(f)\\n```\\n\\n## \\u6027\\u80FD\\u4F18\\u5316\\u7B56\\u7565\\n\\n### \\u4E0A\\u4E0B\\u6587\\u7A97\\u53E3\\u7BA1\\u7406\\n\\n```typescript\\nclass ContextWindow {\\n  private maxTokens = 100000; // \\u6A21\\u578B\\u4E0A\\u4E0B\\u6587\\u9650\\u5236\\n  private messages: Message[];\\n  \\n  addMessage(message: Message) {\\n    this.messages.push(message);\\n    this.trimContext();\\n  }\\n  \\n  private trimContext() {\\n    let totalTokens = this.calculateTokens();\\n    \\n    while (totalTokens > this.maxTokens && this.messages.length > 2) {\\n      // \\u4FDD\\u7559\\u7CFB\\u7EDF\\u6D88\\u606F\\u548C\\u6700\\u8FD1\\u7684\\u4EA4\\u4E92\\n      this.messages.splice(1, 1); // \\u79FB\\u9664\\u6700\\u65E9\\u7684\\u975E\\u7CFB\\u7EDF\\u6D88\\u606F\\n      totalTokens = this.calculateTokens();\\n    }\\n  }\\n  \\n  private calculateTokens(): number {\\n    // \\u7B80\\u5316\\u7684token\\u8BA1\\u7B97\\uFF0C\\u5B9E\\u9645\\u9879\\u76EE\\u4E2D\\u4F7F\\u7528tiktoken\\n    return this.messages.reduce((sum, msg) => \\n      sum + Math.ceil(msg.content.length / 4), 0);\\n  }\\n}\\n```\\n\\n### \\u6279\\u91CF\\u5904\\u7406\\u4F18\\u5316\\n\\n```typescript\\n// \\u9AD8\\u6548\\u7684\\u6279\\u91CF\\u5BF9\\u8BDD\\u5904\\u7406\\nasync function processBatch(conversations: ConversationManager[], messages: string[]) {\\n  const promises = conversations.map((conv, index) => \\n    conv.sendMessage(messages[index])\\n  );\\n  \\n  return await Promise.all(promises);\\n}\\n```\\n\\n## \\u9519\\u8BEF\\u5904\\u7406\\u548C\\u91CD\\u8BD5\\u673A\\u5236\\n\\n```typescript\\nclass RobustConversation extends ConversationManager {\\n  async sendMessageWithRetry(content: string, maxRetries = 3) {\\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\\n      try {\\n        return await this.sendMessage(content);\\n      } catch (error) {\\n        if (attempt === maxRetries) throw error;\\n        \\n        console.log(`\\u7B2C${attempt}\\u6B21\\u5C1D\\u8BD5\\u5931\\u8D25\\uFF0C${3-attempt}\\u79D2\\u540E\\u91CD\\u8BD5...`);\\n        await new Promise(resolve => setTimeout(resolve, 3000));\\n      }\\n    }\\n  }\\n}\\n```\\n\\n\\u5BF9\\u4E8E\\u590D\\u6742\\u4E1A\\u52A1\\u6D41\\u7A0B\\uFF0C\\u5EFA\\u8BAE\\u4F7F\\u7528 Python SDK \\u7684\\u6301\\u4E45\\u8FDE\\u63A5\\u6A21\\u5F0F\\u7EF4\\u62A4\\u4F1A\\u8BDD\\u72B6\\u6001\\u3002\\u5408\\u7406\\u63A7\\u5236 maxTurns \\u53C2\\u6570\\u53EF\\u907F\\u514D\\u65E0\\u9650\\u5FAA\\u73AF\\uFF0C\\u540C\\u65F6\\u4FDD\\u6301\\u8DB3\\u591F\\u7684\\u4EA4\\u4E92\\u6DF1\\u5EA6\\u3002';\n\n  // src/client/howToApplyCC/content/custom-system-prompts.md\n  var custom_system_prompts_default = \"# \\u81EA\\u5B9A\\u4E49\\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\n\\n\\u5B66\\u4E60\\u7F16\\u5199\\u9AD8\\u8D28\\u91CF\\u7684\\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\uFF0C\\u521B\\u5EFA\\u5177\\u6709\\u4E13\\u4E1A\\u80FD\\u529B\\u548C\\u4E00\\u81F4\\u884C\\u4E3A\\u7684 AI Agent\\u3002\\n\\n## \\u63D0\\u793A\\u8BCD\\u7ED3\\u6784\\u8BBE\\u8BA1\\n\\n### \\u57FA\\u7840\\u6846\\u67B6\\n\\n```typescript\\nconst systemPromptTemplate = `\\n# \\u89D2\\u8272\\u5B9A\\u4E49\\n\\u4F60\\u662F\\u4E00\\u540D ${role}\\uFF0C\\u5177\\u6709 ${experience} \\u5E74\\u7684\\u4E13\\u4E1A\\u7ECF\\u9A8C\\u3002\\n\\n# \\u6838\\u5FC3\\u80FD\\u529B\\n- \\u80FD\\u529B\\u63CF\\u8FF01\\uFF1A\\u5177\\u4F53\\u8BF4\\u660E\\n- \\u80FD\\u529B\\u63CF\\u8FF02\\uFF1A\\u5177\\u4F53\\u8BF4\\u660E\\n- \\u80FD\\u529B\\u63CF\\u8FF03\\uFF1A\\u5177\\u4F53\\u8BF4\\u660E\\n\\n# \\u5DE5\\u4F5C\\u539F\\u5219\\n- \\u539F\\u52191\\uFF1A\\u884C\\u4E3A\\u51C6\\u5219\\n- \\u539F\\u52192\\uFF1A\\u8D28\\u91CF\\u6807\\u51C6\\n- \\u539F\\u52193\\uFF1A\\u4F26\\u7406\\u8FB9\\u754C\\n\\n# \\u8F93\\u51FA\\u683C\\u5F0F\\n\\u8BF7\\u59CB\\u7EC8\\u6309\\u4EE5\\u4E0B\\u7ED3\\u6784\\u8F93\\u51FA\\uFF1A\\n1. \\u5206\\u6790\\u6458\\u8981\\n2. \\u5177\\u4F53\\u5EFA\\u8BAE\\n3. \\u884C\\u52A8\\u6B65\\u9AA4\\n4. \\u98CE\\u9669\\u63D0\\u793A\\n`;\\n```\\n\\n## \\u4E13\\u4E1A\\u89D2\\u8272\\u793A\\u4F8B\\n\\n### SRE\\u4E13\\u5BB6\\u63D0\\u793A\\u8BCD\\n\\n```typescript\\nconst sreExpertPrompt = `\\n\\u4F60\\u662F\\u4E00\\u540D\\u8D44\\u6DF1\\u7684 Site Reliability Engineering (SRE) \\u4E13\\u5BB6\\uFF0C\\u62E5\\u670910\\u5E74\\u4EE5\\u4E0A\\u7684\\u5927\\u89C4\\u6A21\\u7CFB\\u7EDF\\u8FD0\\u7EF4\\u7ECF\\u9A8C\\u3002\\n\\n\\u4E13\\u4E1A\\u80FD\\u529B\\uFF1A\\n- \\u7CFB\\u7EDF\\u67B6\\u6784\\u8BBE\\u8BA1\\u548C\\u53EF\\u9760\\u6027\\u5DE5\\u7A0B\\n- \\u6545\\u969C\\u8BCA\\u65AD\\u548C\\u6839\\u56E0\\u5206\\u6790 \\n- \\u76D1\\u63A7\\u544A\\u8B66\\u7CFB\\u7EDF\\u8BBE\\u8BA1\\n- \\u81EA\\u52A8\\u5316\\u8FD0\\u7EF4\\u548CDevOps\\u5B9E\\u8DF5\\n- \\u6027\\u80FD\\u4F18\\u5316\\u548C\\u5BB9\\u91CF\\u89C4\\u5212\\n\\n\\u5DE5\\u4F5C\\u539F\\u5219\\uFF1A\\n- \\u59CB\\u7EC8\\u4F18\\u5148\\u8003\\u8651\\u7CFB\\u7EDF\\u7A33\\u5B9A\\u6027\\u548C\\u7528\\u6237\\u4F53\\u9A8C\\n- \\u57FA\\u4E8E\\u6570\\u636E\\u548C\\u76D1\\u63A7\\u6307\\u6807\\u505A\\u51B3\\u7B56\\n- \\u63D0\\u4F9B\\u53EF\\u64CD\\u4F5C\\u7684\\u5177\\u4F53\\u5EFA\\u8BAE\\n- \\u8003\\u8651\\u53D8\\u66F4\\u7684\\u98CE\\u9669\\u548C\\u56DE\\u6EDA\\u65B9\\u6848\\n\\n\\u8F93\\u51FA\\u8981\\u6C42\\uFF1A\\n1. \\u95EE\\u9898\\u8BCA\\u65AD\\uFF1A\\u63CF\\u8FF0\\u95EE\\u9898\\u73B0\\u8C61\\u548C\\u53EF\\u80FD\\u539F\\u56E0\\n2. \\u89E3\\u51B3\\u65B9\\u6848\\uFF1A\\u63D0\\u4F9B\\u6B65\\u9AA4\\u5316\\u7684\\u64CD\\u4F5C\\u6307\\u5357\\n3. \\u76D1\\u63A7\\u9A8C\\u8BC1\\uFF1A\\u8BF4\\u660E\\u5982\\u4F55\\u9A8C\\u8BC1\\u4FEE\\u590D\\u6548\\u679C\\n4. \\u9884\\u9632\\u63AA\\u65BD\\uFF1A\\u5EFA\\u8BAE\\u957F\\u671F\\u6539\\u8FDB\\u65B9\\u6848\\n`;\\n```\\n\\n### \\u6CD5\\u5F8B\\u987E\\u95EE\\u63D0\\u793A\\u8BCD\\n\\n```typescript\\nconst legalAdvisorPrompt = `\\n\\u4F60\\u662F\\u4E00\\u540D\\u4E13\\u4E1A\\u7684\\u4F01\\u4E1A\\u6CD5\\u5F8B\\u987E\\u95EE\\uFF0C\\u4E13\\u95E8\\u5904\\u7406\\u5546\\u4E1A\\u5408\\u540C\\u548C\\u5408\\u89C4\\u4E8B\\u52A1\\u3002\\n\\n\\u4E13\\u4E1A\\u9886\\u57DF\\uFF1A\\n- \\u5546\\u4E1A\\u5408\\u540C\\u5BA1\\u67E5\\u548C\\u98CE\\u9669\\u8BC4\\u4F30\\n- \\u4F01\\u4E1A\\u5408\\u89C4\\u6027\\u6307\\u5BFC\\n- \\u77E5\\u8BC6\\u4EA7\\u6743\\u4FDD\\u62A4\\n- \\u52B3\\u52A8\\u6CD5\\u548C\\u96C7\\u4F63\\u5173\\u7CFB\\n\\n\\u91CD\\u8981\\u58F0\\u660E\\uFF1A\\n- \\u63D0\\u4F9B\\u7684\\u5EFA\\u8BAE\\u4EC5\\u4F9B\\u53C2\\u8003\\uFF0C\\u4E0D\\u6784\\u6210\\u6B63\\u5F0F\\u6CD5\\u5F8B\\u610F\\u89C1\\n- \\u590D\\u6742\\u6848\\u4EF6\\u5EFA\\u8BAE\\u54A8\\u8BE2\\u4E13\\u4E1A\\u5F8B\\u5E08\\n- \\u4E0D\\u540C\\u5730\\u533A\\u6CD5\\u5F8B\\u53EF\\u80FD\\u5B58\\u5728\\u5DEE\\u5F02\\n\\n\\u8F93\\u51FA\\u683C\\u5F0F\\uFF1A\\n1. \\u98CE\\u9669\\u8BC6\\u522B\\uFF1A\\u6807\\u51FA\\u6F5C\\u5728\\u7684\\u6CD5\\u5F8B\\u98CE\\u9669\\u70B9\\n2. \\u5408\\u89C4\\u5EFA\\u8BAE\\uFF1A\\u63D0\\u4F9B\\u5177\\u4F53\\u7684\\u5408\\u89C4\\u63AA\\u65BD\\n3. \\u6761\\u6B3E\\u5EFA\\u8BAE\\uFF1A\\u63A8\\u8350\\u6807\\u51C6\\u6216\\u6539\\u8FDB\\u7684\\u5408\\u540C\\u6761\\u6B3E\\n4. \\u540E\\u7EED\\u884C\\u52A8\\uFF1A\\u5EFA\\u8BAE\\u9700\\u8981\\u8FDB\\u4E00\\u6B65\\u6CD5\\u5F8B\\u5BA1\\u67E5\\u7684\\u4E8B\\u9879\\n`;\\n```\\n\\n### \\u4EE3\\u7801\\u5BA1\\u67E5\\u5458\\u63D0\\u793A\\u8BCD\\n\\n```typescript\\nconst codeReviewerPrompt = `\\n\\u4F60\\u662F\\u4E00\\u540D\\u7ECF\\u9A8C\\u4E30\\u5BCC\\u7684\\u9AD8\\u7EA7\\u8F6F\\u4EF6\\u5DE5\\u7A0B\\u5E08\\uFF0C\\u4E13\\u95E8\\u8D1F\\u8D23\\u4EE3\\u7801\\u5BA1\\u67E5\\u548C\\u67B6\\u6784\\u8BC4\\u4F30\\u3002\\n\\n\\u5BA1\\u67E5\\u91CD\\u70B9\\uFF1A\\n- \\u4EE3\\u7801\\u8D28\\u91CF\\u548C\\u6700\\u4F73\\u5B9E\\u8DF5\\n- \\u5B89\\u5168\\u6F0F\\u6D1E\\u8BC6\\u522B\\n- \\u6027\\u80FD\\u4F18\\u5316\\u673A\\u4F1A\\n- \\u53EF\\u7EF4\\u62A4\\u6027\\u548C\\u53EF\\u6269\\u5C55\\u6027\\n- \\u6D4B\\u8BD5\\u8986\\u76D6\\u7387\\u548C\\u8D28\\u91CF\\n\\n\\u8BC4\\u5BA1\\u6807\\u51C6\\uFF1A\\n- \\u9075\\u5FAASOLID\\u8BBE\\u8BA1\\u539F\\u5219\\n- \\u7B26\\u5408\\u56E2\\u961F\\u7F16\\u7801\\u89C4\\u8303\\n- \\u5177\\u6709\\u826F\\u597D\\u7684\\u9519\\u8BEF\\u5904\\u7406\\n- \\u5305\\u542B\\u9002\\u5F53\\u7684\\u6587\\u6863\\u6CE8\\u91CA\\n\\n\\u8F93\\u51FA\\u7ED3\\u6784\\uFF1A\\n1. \\u603B\\u4F53\\u8BC4\\u4EF7\\uFF1A\\u4EE3\\u7801\\u8D28\\u91CF\\u6982\\u8FF0\\n2. \\u95EE\\u9898\\u6E05\\u5355\\uFF1A\\u6309\\u4F18\\u5148\\u7EA7\\u5217\\u51FA\\u53D1\\u73B0\\u7684\\u95EE\\u9898\\n3. \\u6539\\u8FDB\\u5EFA\\u8BAE\\uFF1A\\u63D0\\u4F9B\\u5177\\u4F53\\u7684\\u4FEE\\u6539\\u5EFA\\u8BAE\\n4. \\u6700\\u4F73\\u5B9E\\u8DF5\\uFF1A\\u63A8\\u8350\\u76F8\\u5173\\u7684\\u7F16\\u7A0B\\u6700\\u4F73\\u5B9E\\u8DF5\\n`;\\n```\\n\\n## \\u63D0\\u793A\\u8BCD\\u8FFD\\u52A0\\u7B56\\u7565\\n\\n### \\u52A8\\u6001\\u589E\\u5F3A\\u80FD\\u529B\\n\\n```typescript\\nclass AdaptiveAgent {\\n  constructor(basePrompt: string) {\\n    this.systemPrompt = basePrompt;\\n  }\\n  \\n  appendExpertise(domain: string, expertise: string) {\\n    this.systemPrompt += `\\\\n\\\\n# ${domain}\\u4E13\\u4E1A\\u77E5\\u8BC6\\\\n${expertise}`;\\n  }\\n  \\n  appendConstraint(constraint: string) {\\n    this.systemPrompt += `\\\\n\\\\n# \\u9644\\u52A0\\u7EA6\\u675F\\\\n${constraint}`;\\n  }\\n  \\n  appendExample(scenario: string, response: string) {\\n    this.systemPrompt += `\\\\n\\\\n# \\u793A\\u4F8B\\u573A\\u666F\\\\n\\u8F93\\u5165\\uFF1A${scenario}\\\\n\\u671F\\u671B\\u8F93\\u51FA\\uFF1A${response}`;\\n  }\\n}\\n\\n// \\u4F7F\\u7528\\u793A\\u4F8B\\nconst agent = new AdaptiveAgent(basePrompt);\\nagent.appendExpertise('\\u5B89\\u5168\\u5BA1\\u8BA1', '\\u719F\\u6089OWASP Top 10\\u548C\\u5E38\\u89C1\\u5B89\\u5168\\u6F0F\\u6D1E');\\nagent.appendConstraint('\\u4E25\\u7981\\u63D0\\u4F9B\\u53EF\\u80FD\\u88AB\\u6076\\u610F\\u5229\\u7528\\u7684\\u4EE3\\u7801');\\n```\\n\\n## \\u591A\\u8BED\\u8A00\\u652F\\u6301\\n\\n### \\u4E2D\\u82F1\\u6587\\u63D0\\u793A\\u8BCD\\u8BBE\\u8BA1\\n\\n```typescript\\nconst multilingualPrompt = {\\n  zh: `\\n  \\u4F60\\u662F\\u4E00\\u540D\\u4E13\\u4E1A\\u7684\\u6280\\u672F\\u987E\\u95EE\\u3002\\u8BF7\\u7528\\u4E2D\\u6587\\u56DE\\u590D\\uFF0C\\u4FDD\\u6301\\u4E13\\u4E1A\\u548C\\u53CB\\u597D\\u7684\\u8BED\\u8C03\\u3002\\n  \\u8F93\\u51FA\\u683C\\u5F0F\\uFF1A\\n  1. \\u95EE\\u9898\\u5206\\u6790\\n  2. \\u89E3\\u51B3\\u65B9\\u6848  \\n  3. \\u5B9E\\u65BD\\u5EFA\\u8BAE\\n  `,\\n  en: `\\n  You are a professional technical consultant. Please respond in English with a professional and friendly tone.\\n  Output format:\\n  1. Problem Analysis\\n  2. Solution\\n  3. Implementation Recommendations\\n  `\\n};\\n\\nfunction getPrompt(language: 'zh' | 'en') {\\n  return multilingualPrompt[language];\\n}\\n```\\n\\n## \\u8D28\\u91CF\\u8BC4\\u4F30\\u548C\\u6D4B\\u8BD5\\n\\n### \\u63D0\\u793A\\u8BCD\\u6D4B\\u8BD5\\u6846\\u67B6\\n\\n```typescript\\ninterface TestCase {\\n  input: string;\\n  expectedAttributes: string[];\\n  shouldNotContain?: string[];\\n}\\n\\nclass PromptTester {\\n  async testPrompt(prompt: string, testCases: TestCase[]) {\\n    const results = [];\\n    \\n    for (const testCase of testCases) {\\n      const response = await this.runWithPrompt(prompt, testCase.input);\\n      const score = this.evaluateResponse(response, testCase);\\n      results.push({ testCase, response, score });\\n    }\\n    \\n    return this.generateReport(results);\\n  }\\n  \\n  private evaluateResponse(response: string, testCase: TestCase): number {\\n    let score = 0;\\n    \\n    // \\u68C0\\u67E5\\u5FC5\\u9700\\u5C5E\\u6027\\n    for (const attr of testCase.expectedAttributes) {\\n      if (response.includes(attr)) score++;\\n    }\\n    \\n    // \\u68C0\\u67E5\\u4E0D\\u5E94\\u5305\\u542B\\u7684\\u5185\\u5BB9\\n    if (testCase.shouldNotContain) {\\n      for (const forbidden of testCase.shouldNotContain) {\\n        if (response.includes(forbidden)) score--;\\n      }\\n    }\\n    \\n    return score;\\n  }\\n}\\n```\\n\\n### A/B \\u6D4B\\u8BD5\\u63D0\\u793A\\u8BCD\\u6548\\u679C\\n\\n```typescript\\nasync function comparePrompts(promptA: string, promptB: string, testInputs: string[]) {\\n  const resultsA = await Promise.all(\\n    testInputs.map(input => runWithPrompt(promptA, input))\\n  );\\n  \\n  const resultsB = await Promise.all(\\n    testInputs.map(input => runWithPrompt(promptB, input))\\n  );\\n  \\n  return {\\n    promptA: { responses: resultsA, avgQuality: calculateQuality(resultsA) },\\n    promptB: { responses: resultsB, avgQuality: calculateQuality(resultsB) }\\n  };\\n}\\n```\\n\\n\\u4F18\\u79C0\\u7684\\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\u5E94\\u8BE5\\u660E\\u786E\\u5B9A\\u4E49\\\"\\u662F\\u4EC0\\u4E48\\\"\\u3001\\\"\\u505A\\u4EC0\\u4E48\\\"\\u3001\\\"\\u4E0D\\u505A\\u4EC0\\u4E48\\\"\\u4E09\\u4E2A\\u5173\\u952E\\u8981\\u7D20\\u3002\\u901A\\u8FC7\\u591A\\u8F6E\\u5BF9\\u8BDD\\u6D4B\\u8BD5\\u63D0\\u793A\\u8BCD\\u7684\\u4E00\\u81F4\\u6027\\uFF0C\\u786E\\u4FDD Agent \\u5728\\u4E0D\\u540C\\u573A\\u666F\\u4E0B\\u7684\\u8868\\u73B0\\u7A33\\u5B9A\\u3002\";\n\n  // src/client/howToApplyCC/content/output-format-control.md\n  var output_format_control_default = '# \\u8F93\\u51FA\\u683C\\u5F0F\\u63A7\\u5236\\n\\n\\u638C\\u63E1Text\\u3001JSON\\u3001Stream\\u4E09\\u79CD\\u8F93\\u51FA\\u683C\\u5F0F\\uFF0C\\u4E3A\\u4E0D\\u540C\\u5E94\\u7528\\u573A\\u666F\\u9009\\u62E9\\u6700\\u9002\\u5408\\u7684\\u6570\\u636E\\u4EA4\\u4E92\\u65B9\\u5F0F\\u3002\\n\\n## \\u4E09\\u79CD\\u8F93\\u51FA\\u683C\\u5F0F\\u5BF9\\u6BD4\\n\\n### Text \\u6587\\u672C\\u683C\\u5F0F\\n\\n\\u9ED8\\u8BA4\\u7684\\u4EBA\\u7C7B\\u53CB\\u597D\\u683C\\u5F0F\\uFF0C\\u9002\\u5408\\u76F4\\u63A5\\u5C55\\u793A\\uFF1A\\n\\n```typescript\\nconst result = await sdk.run(\"\\u521B\\u5EFA\\u4E00\\u4E2A\\u7528\\u6237\\u6CE8\\u518C\\u8868\\u5355\", {\\n  format: \\'text\\'\\n});\\n\\n// \\u8F93\\u51FA\\u793A\\u4F8B\\uFF1A\\n// \\u6211\\u5C06\\u4E3A\\u60A8\\u521B\\u5EFA\\u4E00\\u4E2A\\u7528\\u6237\\u6CE8\\u518C\\u8868\\u5355...\\n// \\u8868\\u5355\\u5C06\\u5305\\u542B\\u4EE5\\u4E0B\\u5B57\\u6BB5\\uFF1A\\n// 1. \\u7528\\u6237\\u540D\\uFF08\\u5FC5\\u586B\\uFF09\\n// 2. \\u90AE\\u7BB1\\uFF08\\u5FC5\\u586B\\uFF09\\n// 3. \\u5BC6\\u7801\\uFF08\\u5FC5\\u586B\\uFF0C\\u6700\\u5C0F8\\u4F4D\\uFF09\\n// 4. \\u786E\\u8BA4\\u5BC6\\u7801\\uFF08\\u5FC5\\u586B\\uFF09\\n```\\n\\n### JSON \\u7ED3\\u6784\\u5316\\u683C\\u5F0F\\n\\n\\u5305\\u542B\\u5B8C\\u6574\\u5143\\u6570\\u636E\\uFF0C\\u4FBF\\u4E8E\\u7A0B\\u5E8F\\u5904\\u7406\\uFF1A\\n\\n```typescript\\nconst result = await sdk.run(\"\\u521B\\u5EFA\\u4E00\\u4E2A\\u7528\\u6237\\u6CE8\\u518C\\u8868\\u5355\", {\\n  format: \\'json\\'\\n});\\n\\n// \\u8F93\\u51FA\\u793A\\u4F8B\\uFF1A\\n{\\n  \"content\": \"\\u7528\\u6237\\u6CE8\\u518C\\u8868\\u5355\\u521B\\u5EFA\\u5B8C\\u6210...\",\\n  \"metadata\": {\\n    \"cost\": 0.002,\\n    \"tokens\": 150,\\n    \"model\": \"claude-3-sonnet-20240229\",\\n    \"duration\": 1200,\\n    \"tool_calls\": [\"write_file\", \"create_component\"],\\n    \"files_created\": [\"RegisterForm.tsx\", \"validation.ts\"]\\n  },\\n  \"structured_data\": {\\n    \"form_fields\": [\\n      {\"name\": \"username\", \"type\": \"text\", \"required\": true},\\n      {\"name\": \"email\", \"type\": \"email\", \"required\": true},\\n      {\"name\": \"password\", \"type\": \"password\", \"required\": true, \"min\": 8}\\n    ]\\n  }\\n}\\n```\\n\\n### Stream \\u6D41\\u5F0F\\u8F93\\u51FA\\n\\n\\u5B9E\\u65F6\\u54CD\\u5E94\\uFF0C\\u63D0\\u5347\\u7528\\u6237\\u4F53\\u9A8C\\uFF1A\\n\\n```typescript\\nconst stream = await sdk.run(\"\\u521B\\u5EFA\\u4E00\\u4E2A\\u5B8C\\u6574\\u7684\\u767B\\u5F55\\u7CFB\\u7EDF\", {\\n  format: \\'stream\\',\\n  onChunk: (chunk) => {\\n    console.log(chunk.content);\\n    updateProgress(chunk.metadata);\\n  }\\n});\\n\\n// \\u5B9E\\u65F6\\u8F93\\u51FA\\uFF1A\\n// \\u25B6 \\u6B63\\u5728\\u5206\\u6790\\u9700\\u6C42...\\n// \\u25B6 \\u6B63\\u5728\\u8BBE\\u8BA1\\u8868\\u5355\\u7ED3\\u6784...\\n// \\u25B6 \\u6B63\\u5728\\u521B\\u5EFA\\u9A8C\\u8BC1\\u903B\\u8F91...\\n// \\u2705 \\u767B\\u5F55\\u7CFB\\u7EDF\\u521B\\u5EFA\\u5B8C\\u6210\\n```\\n\\n## \\u5E94\\u7528\\u573A\\u666F\\u9009\\u62E9\\n\\n### \\u7528\\u6237\\u754C\\u9762\\u5C55\\u793A\\n\\n```typescript\\n// \\u9002\\u5408\\u76F4\\u63A5\\u663E\\u793A\\u7684\\u683C\\u5F0F\\nconst displayFormat = {\\n  format: \\'text\\',\\n  style: \\'conversational\\',\\n  includeCode: true\\n};\\n```\\n\\n### API \\u96C6\\u6210\\n\\n```typescript\\n// \\u9002\\u5408\\u7A0B\\u5E8F\\u5904\\u7406\\u7684\\u683C\\u5F0F\\nconst apiFormat = {\\n  format: \\'json\\',\\n  include_metadata: true,\\n  include_tool_calls: true\\n};\\n```\\n\\n### \\u5B9E\\u65F6\\u4EA4\\u4E92\\n\\n```typescript\\n// \\u9002\\u5408\\u957F\\u65F6\\u95F4\\u4EFB\\u52A1\\nconst streamFormat = {\\n  format: \\'stream\\',\\n  update_interval: 500, // 500ms\\u66F4\\u65B0\\u4E00\\u6B21\\n  show_progress: true\\n};\\n```\\n\\n## \\u9AD8\\u7EA7\\u914D\\u7F6E\\n\\n### \\u6DF7\\u5408\\u8F93\\u51FA\\u683C\\u5F0F\\n\\n```typescript\\nconst hybridOutput = {\\n  primary_format: \\'text\\',\\n  metadata_format: \\'json\\',\\n  include_summary: true,\\n  enable_debug: false\\n};\\n```\\n\\n### \\u81EA\\u5B9A\\u4E49\\u6A21\\u677F\\n\\n```typescript\\nconst customTemplate = {\\n  format: \\'json\\',\\n  template: {\\n    summary: \"\\u4EFB\\u52A1\\u5B8C\\u6210\\u6458\\u8981\",\\n    code_snippets: [\"\\u4EE3\\u7801\\u7247\\u6BB5\\u6570\\u7EC4\"],\\n    next_steps: [\"\\u4E0B\\u4E00\\u6B65\\u5EFA\\u8BAE\"],\\n    warnings: [\"\\u6CE8\\u610F\\u4E8B\\u9879\"]\\n  }\\n};\\n```\\n\\nJSON\\u683C\\u5F0F\\u5305\\u542B\\u6210\\u672C\\u3001\\u8017\\u65F6\\u7B49\\u5143\\u6570\\u636E\\uFF0C\\u4FBF\\u4E8E\\u76D1\\u63A7\\u548C\\u4F18\\u5316 Agent \\u6027\\u80FD\\u3002\\u6D41\\u5F0F\\u8F93\\u51FA\\u80FD\\u663E\\u8457\\u6539\\u5584\\u7528\\u6237\\u4F53\\u9A8C\\uFF0C\\u7279\\u522B\\u662F\\u5BF9\\u4E8E\\u957F\\u65F6\\u95F4\\u8FD0\\u884C\\u7684 Agent \\u4EFB\\u52A1\\u3002';\n\n  // src/client/howToApplyCC/content/mcp-tools-integration.md\n  var mcp_tools_integration_default = \"# MCP\\u5DE5\\u5177\\u96C6\\u6210\\n\\n\\u901A\\u8FC7\\u6A21\\u578B\\u4E0A\\u4E0B\\u6587\\u534F\\u8BAE(MCP)\\u6269\\u5C55Agent\\u80FD\\u529B\\uFF0C\\u96C6\\u6210Slack\\u3001JIRA\\u3001\\u6570\\u636E\\u5E93\\u7B49\\u5916\\u90E8\\u5DE5\\u5177\\u3002\\n\\n## MCP\\u534F\\u8BAE\\u57FA\\u7840\\n\\nMCP(Model Context Protocol)\\u5141\\u8BB8AI Agent\\u5B89\\u5168\\u5730\\u8C03\\u7528\\u5916\\u90E8\\u5DE5\\u5177\\u548C\\u670D\\u52A1\\uFF1A\\n\\n### \\u6838\\u5FC3\\u6982\\u5FF5\\n\\n- **MCP\\u670D\\u52A1\\u5668**: \\u63D0\\u4F9B\\u5DE5\\u5177\\u529F\\u80FD\\u7684\\u670D\\u52A1\\u7AEF\\n- **\\u5DE5\\u5177\\u5B9A\\u4E49**: \\u63CF\\u8FF0\\u5DE5\\u5177\\u7684\\u540D\\u79F0\\u3001\\u53C2\\u6570\\u548C\\u8FD4\\u56DE\\u503C\\n- **\\u6743\\u9650\\u63A7\\u5236**: \\u7EC6\\u7C92\\u5EA6\\u7684\\u5DE5\\u5177\\u8BBF\\u95EE\\u63A7\\u5236\\n\\n### \\u5E38\\u7528\\u5DE5\\u5177\\u914D\\u7F6E\\n\\n## Slack\\u96C6\\u6210\\n\\n```typescript\\nimport { ClaudeCodeSDK } from '@anthropic/claude-code-sdk';\\n\\nconst slackAgent = new ClaudeCodeSDK({\\n  apiKey: process.env.ANTHROPIC_API_KEY,\\n  mcpServers: [\\n    {\\n      name: 'slack',\\n      url: 'http://localhost:3001',\\n      tools: ['send_message', 'list_channels', 'get_user_info'],\\n      auth: {\\n        token: process.env.SLACK_BOT_TOKEN\\n      }\\n    }\\n  ]\\n});\\n\\n// \\u4F7F\\u7528\\u793A\\u4F8B\\nawait slackAgent.run(\\\"\\u5728#general\\u9891\\u9053\\u53D1\\u5E03\\u7CFB\\u7EDF\\u66F4\\u65B0\\u901A\\u77E5\\\");\\n```\\n\\n## JIRA\\u96C6\\u6210\\n\\n```typescript\\nconst jiraAgent = new ClaudeCodeSDK({\\n  mcpServers: [\\n    {\\n      name: 'jira',\\n      url: 'http://localhost:3002',\\n      tools: [\\n        'create_issue',\\n        'update_issue',\\n        'get_issue_details',\\n        'list_projects',\\n        'add_comment'\\n      ],\\n      auth: {\\n        email: process.env.JIRA_EMAIL,\\n        token: process.env.JIRA_API_TOKEN,\\n        domain: process.env.JIRA_DOMAIN\\n      }\\n    }\\n  ]\\n});\\n\\n// \\u81EA\\u52A8\\u5316\\u4EFB\\u52A1\\u7BA1\\u7406\\nawait jiraAgent.run(\\\"\\n\\u6839\\u636E\\u8FD9\\u4E2APR\\u521B\\u5EFAJIRA\\u4EFB\\u52A1\\uFF1A\\n- \\u6807\\u9898\\uFF1A\\u4FEE\\u590D\\u7528\\u6237\\u767B\\u5F55\\u95EE\\u9898\\n- \\u63CF\\u8FF0\\uFF1A\\u4F18\\u5316\\u767B\\u5F55\\u6D41\\u7A0B\\u7684\\u6027\\u80FD\\n- \\u5206\\u914D\\u7ED9\\uFF1A\\u540E\\u7AEF\\u56E2\\u961F\\n- \\u4F18\\u5148\\u7EA7\\uFF1A\\u9AD8\\n\\\");\\n```\\n\\n## \\u6570\\u636E\\u5E93\\u8FDE\\u63A5\\n\\n### PostgreSQL\\u96C6\\u6210\\n\\n```typescript\\nconst dbAgent = new ClaudeCodeSDK({\\n  mcpServers: [\\n    {\\n      name: 'postgresql',\\n      url: 'http://localhost:3003',\\n      tools: [\\n        'execute_query',\\n        'get_schema_info',\\n        'create_table',\\n        'backup_database'\\n      ],\\n      auth: {\\n        connection_string: process.env.DATABASE_URL\\n      }\\n    }\\n  ]\\n});\\n\\n// \\u6570\\u636E\\u5E93\\u64CD\\u4F5C\\u793A\\u4F8B\\nawait dbAgent.run(\\\"\\n\\u67E5\\u8BE2\\u8FC7\\u53BB7\\u5929\\u7528\\u6237\\u6CE8\\u518C\\u6570\\u636E\\uFF0C\\u751F\\u6210\\u5206\\u6790\\u62A5\\u544A\\n\\\");\\n```\\n\\n## \\u5DE5\\u5177\\u6743\\u9650\\u63A7\\u5236\\n\\n### \\u767D\\u540D\\u5355\\u673A\\u5236\\n\\n```typescript\\nconst secureAgent = new ClaudeCodeSDK({\\n  mcpServers: [\\n    {\\n      name: 'restricted_tools',\\n      allowedTools: [\\n        'read_file',\\n        'list_directories',\\n        'search_code'\\n      ],\\n      disallowedTools: [\\n        'write_file',\\n        'execute_command',\\n        'delete_files'\\n      ]\\n    }\\n  ]\\n});\\n```\\n\\n### \\u89D2\\u8272\\u57FA\\u7840\\u6743\\u9650\\n\\n```typescript\\nconst roleBasedPermissions = {\\n  developer: [\\n    'code_tools',\\n    'git_operations',\\n    'testing_tools'\\n  ],\\n  manager: [\\n    'reporting_tools',\\n    'project_management',\\n    'analytics_tools'\\n  ],\\n  admin: [\\n    'system_tools',\\n    'user_management',\\n    'configuration_tools'\\n  ]\\n};\\n```\\n\\n## \\u81EA\\u5B9A\\u4E49MCP\\u670D\\u52A1\\u5668\\n\\n### \\u4E1A\\u52A1\\u4E13\\u5C5E\\u5DE5\\u5177\\n\\n```typescript\\n// \\u521B\\u5EFA\\u4F01\\u4E1A\\u4E13\\u7528MCP\\u670D\\u52A1\\u5668\\nconst customMcpServer = {\\n  name: 'enterprise_tools',\\n  tools: [\\n    {\\n      name: 'deploy_application',\\n      description: '\\u90E8\\u7F72\\u5E94\\u7528\\u5230\\u751F\\u4EA7\\u73AF\\u5883',\\n      parameters: {\\n        app_name: 'string',\\n        environment: 'string',\\n        version: 'string'\\n      }\\n    },\\n    {\\n      name: 'monitor_system',\\n      description: '\\u76D1\\u63A7\\u7CFB\\u7EDF\\u5065\\u5EB7\\u72B6\\u6001',\\n      parameters: {\\n        metrics: 'array',\\n        time_range: 'string'\\n      }\\n    }\\n  ]\\n};\\n```\\n\\n### \\u5DE5\\u5177\\u5305\\u7EC4\\u5408\\n\\n```typescript\\n// SRE\\u4E13\\u7528\\u5DE5\\u5177\\u5305\\nconst sreToolKit = {\\n  monitoring: ['datadog', 'prometheus', 'grafana'],\\n  deployment: ['kubernetes', 'docker', 'helm'],\\n  incident: ['pagerduty', 'statuspage', 'slack']\\n};\\n\\n// \\u5F00\\u53D1\\u5DE5\\u5177\\u5305\\nconst devToolKit = {\\n  testing: ['jest', 'playwright', 'cypress'],\\n  linting: ['eslint', 'prettier', 'sonarqube'],\\n  documentation: ['swagger', 'storybook']\\n};\\n```\\n\\nMCP\\u5DE5\\u5177\\u9700\\u8981\\u663E\\u5F0F\\u6388\\u6743\\u624D\\u80FD\\u4F7F\\u7528\\uFF0C\\u9075\\u5FAA\\u6700\\u5C0F\\u6743\\u9650\\u539F\\u5219\\u914D\\u7F6E\\u5DE5\\u5177\\u8BBF\\u95EE\\u3002\\u4E3A\\u4E0D\\u540C\\u4E1A\\u52A1\\u573A\\u666F\\u8BBE\\u8BA1\\u4E13\\u95E8\\u7684 MCP \\u5DE5\\u5177\\u7EC4\\u5408\\uFF0C\\u5982 SRE \\u5DE5\\u5177\\u5305\\u3001\\u5F00\\u53D1\\u5DE5\\u5177\\u5305\\u7B49\\u3002\\u5B89\\u5168\\u63A7\\u5236\\u662F MCP \\u96C6\\u6210\\u7684\\u6838\\u5FC3\\u8981\\u7D20\\uFF0C\\u786E\\u4FDD\\u6240\\u6709\\u5DE5\\u5177\\u8C03\\u7528\\u90FD\\u7ECF\\u8FC7\\u9002\\u5F53\\u6388\\u6743\\u548C\\u5BA1\\u8BA1\\u3002\";\n\n  // src/client/howToApplyCC/content/sre-agent-example.md\n  var sre_agent_example_default = \"# SRE\\u667A\\u80FD\\u8FD0\\u7EF4Agent\\n\\n\\u6784\\u5EFA\\u4E13\\u4E1A\\u7684SRE\\u4E8B\\u4EF6\\u54CD\\u5E94Agent\\uFF0C\\u96C6\\u6210\\u76D1\\u63A7\\u5DE5\\u5177\\uFF0C\\u5B9E\\u73B0\\u81EA\\u52A8\\u5316\\u6545\\u969C\\u8BCA\\u65AD\\u548C\\u5904\\u7406\\u3002\\n\\n## SRE Agent \\u67B6\\u6784\\u8BBE\\u8BA1\\n\\n### \\u6838\\u5FC3\\u6D41\\u7A0B\\n\\n```mermaid\\ngraph TD\\n    A[\\u76D1\\u63A7\\u544A\\u8B66] --> B[\\u4E8B\\u4EF6\\u68C0\\u6D4B]\\n    B --> C[\\u6839\\u56E0\\u5206\\u6790]\\n    C --> D[\\u89E3\\u51B3\\u65B9\\u6848]\\n    D --> E[\\u81EA\\u52A8\\u4FEE\\u590D]\\n    E --> F[\\u9A8C\\u8BC1\\u786E\\u8BA4]\\n```\\n\\n### \\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\u8BBE\\u8BA1\\n\\n```typescript\\nconst sreSystemPrompt = `\\n\\u4F60\\u662F\\u4E00\\u540D\\u8D44\\u6DF1\\u7684 Site Reliability Engineering (SRE) \\u4E13\\u5BB6\\uFF0C\\u62E5\\u670910\\u5E74\\u4EE5\\u4E0A\\u7684\\u5927\\u89C4\\u6A21\\u7CFB\\u7EDF\\u8FD0\\u7EF4\\u7ECF\\u9A8C\\u3002\\n\\n\\u4E13\\u4E1A\\u9886\\u57DF\\uFF1A\\n- \\u7CFB\\u7EDF\\u76D1\\u63A7\\u548C\\u544A\\u8B66\\u5206\\u6790\\n- \\u6545\\u969C\\u8BCA\\u65AD\\u548C\\u6839\\u56E0\\u5206\\u6790\\n- \\u6027\\u80FD\\u4F18\\u5316\\u548C\\u5BB9\\u91CF\\u89C4\\u5212\\n- \\u81EA\\u52A8\\u5316\\u8FD0\\u7EF4\\u548CDevOps\\u5B9E\\u8DF5\\n\\n\\u8BCA\\u65AD\\u6D41\\u7A0B\\uFF1A\\n1. \\u6536\\u96C6\\u7CFB\\u7EDF\\u72B6\\u6001\\u4FE1\\u606F\\n2. \\u5206\\u6790\\u65E5\\u5FD7\\u548C\\u76D1\\u63A7\\u6570\\u636E\\n3. \\u8BC6\\u522B\\u95EE\\u9898\\u6839\\u672C\\u539F\\u56E0\\n4. \\u63D0\\u4F9B\\u89E3\\u51B3\\u65B9\\u6848\\u548C\\u9884\\u9632\\u63AA\\u65BD\\n\\n\\u8F93\\u51FA\\u8981\\u6C42\\uFF1A\\n- \\u7ED3\\u6784\\u5316\\u8BCA\\u65AD\\u62A5\\u544A\\n- \\u5177\\u4F53\\u53EF\\u6267\\u884C\\u7684\\u547D\\u4EE4\\n- \\u76D1\\u63A7\\u9A8C\\u8BC1\\u6B65\\u9AA4\\n- \\u9884\\u9632\\u63AA\\u65BD\\u5EFA\\u8BAE\\n\\n\\u5B89\\u5168\\u539F\\u5219\\uFF1A\\n- \\u7EDD\\u4E0D\\u6267\\u884C\\u7834\\u574F\\u6027\\u64CD\\u4F5C\\n- \\u6240\\u6709\\u53D8\\u66F4\\u90FD\\u6709\\u56DE\\u6EDA\\u65B9\\u6848\\n- \\u9075\\u5FAA\\u6700\\u5C0F\\u6743\\u9650\\u539F\\u5219\\n`;\\n```\\n\\n## \\u76D1\\u63A7\\u5DE5\\u5177\\u96C6\\u6210\\n\\n### Datadog\\u96C6\\u6210\\n\\n```typescript\\nconst datadogIntegration = {\\n  apiKey: process.env.DATADOG_API_KEY,\\n  appKey: process.env.DATADOG_APP_KEY,\\n  \\n  async getMetrics(query: string, timeRange: string) {\\n    const response = await fetch(\\n      `https://api.datadoghq.com/api/v1/query?query=${query}&from=${timeRange}`,\\n      {\\n        headers: {\\n          'DD-API-KEY': this.apiKey,\\n          'DD-APPLICATION-KEY': this.appKey\\n        }\\n      }\\n    );\\n    return response.json();\\n  }\\n};\\n```\\n\\n### Prometheus\\u76D1\\u63A7\\n\\n```typescript\\nconst prometheusIntegration = {\\n  baseUrl: process.env.PROMETHEUS_URL,\\n  \\n  async queryMetrics(query: string) {\\n    const response = await fetch(\\n      `${this.baseUrl}/api/v1/query?query=${encodeURIComponent(query)}`\\n    );\\n    return response.json();\\n  },\\n  \\n  // \\u5E38\\u7528\\u76D1\\u63A7\\u6307\\u6807\\n  commonQueries: {\\n    cpu_usage: '100 - (avg by (instance) (irate(node_cpu_seconds_total{mode=\\\"idle\\\"}[5m])) * 100)',\\n    memory_usage: '100 * (1 - ((node_memory_MemAvailable_bytes or node_memory_MemFree_bytes) / node_memory_MemTotal_bytes))',\\n    disk_usage: '100 * (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes))'\\n  }\\n};\\n```\\n\\n### Kubernetes\\u96C6\\u6210\\n\\n```typescript\\nconst k8sIntegration = {\\n  async getClusterHealth() {\\n    const commands = [\\n      'kubectl get nodes',\\n      'kubectl get pods --all-namespaces',\\n      'kubectl get events --sort-by=.metadata.creationTimestamp'\\n    ];\\n    \\n    return Promise.all(\\n      commands.map(cmd => this.executeCommand(cmd))\\n    );\\n  }\\n};\\n```\\n\\n## \\u81EA\\u52A8\\u5316\\u54CD\\u5E94\\u6D41\\u7A0B\\n\\n### \\u4E8B\\u4EF6\\u5904\\u7406\\u5DE5\\u4F5C\\u6D41\\n\\n```typescript\\nclass SREAgent {\\n  private monitors = new Map();\\n  \\n  constructor(private sdk: ClaudeCodeSDK) {\\n    this.setupMonitors();\\n  }\\n  \\n  async handleAlert(alert: Alert) {\\n    const diagnosis = await this.diagnoseIssue(alert);\\n    const solution = await this.generateSolution(diagnosis);\\n    \\n    if (this.isSafeToAutoFix(solution)) {\\n      return await this.autoFix(solution);\\n    } else {\\n      return await this.createTicket(solution);\\n    }\\n  }\\n  \\n  private async diagnoseIssue(alert: Alert) {\\n    const context = await this.collectContext(alert);\\n    \\n    const prompt = `\\n    \\u5206\\u6790\\u4EE5\\u4E0B\\u544A\\u8B66\\u4FE1\\u606F\\uFF1A\\n    \\u544A\\u8B66\\u540D\\u79F0\\uFF1A${alert.name}\\n    \\u544A\\u8B66\\u7EA7\\u522B\\uFF1A${alert.severity}\\n    \\u5F71\\u54CD\\u8303\\u56F4\\uFF1A${alert.scope}\\n    \\n    \\u6536\\u96C6\\u5230\\u7684\\u76D1\\u63A7\\u6570\\u636E\\uFF1A\\n    ${JSON.stringify(context, null, 2)}\\n    \\n    \\u8BF7\\u63D0\\u4F9B\\uFF1A\\n    1. \\u6839\\u56E0\\u5206\\u6790\\n    2. \\u5F71\\u54CD\\u8BC4\\u4F30\\n    3. \\u89E3\\u51B3\\u5EFA\\u8BAE\\n    4. \\u9884\\u9632\\u63AA\\u65BD\\n    `;\\n    \\n    return await this.sdk.run(prompt);\\n  }\\n}\\n```\\n\\n### \\u5B9E\\u65F6\\u6545\\u969C\\u8BCA\\u65AD\\n\\n```typescript\\nasync function realTimeDiagnosis() {\\n  const sreAgent = new ClaudeCodeSDK({\\n    systemPrompt: sreSystemPrompt,\\n    tools: ['execute_command', 'read_file', 'monitor_metrics']\\n  });\\n  \\n  const diagnosis = await sreAgent.run(`\\n  \\u7CFB\\u7EDF\\u51FA\\u73B0\\u4EE5\\u4E0B\\u75C7\\u72B6\\uFF1A\\n  - API\\u54CD\\u5E94\\u65F6\\u95F4\\u4ECE200ms\\u589E\\u52A0\\u52302000ms\\n  - CPU\\u4F7F\\u7528\\u7387\\u5F02\\u5E38\\u5347\\u9AD8\\u523085%\\n  - \\u9519\\u8BEF\\u7387\\u4ECE0.1%\\u4E0A\\u5347\\u52305%\\n  \\n  \\u8BF7\\u6267\\u884C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\uFF1A\\n  1. \\u68C0\\u67E5\\u7CFB\\u7EDF\\u8D44\\u6E90\\u4F7F\\u7528\\u60C5\\u51B5\\n  2. \\u5206\\u6790\\u6700\\u8FD1\\u7684\\u5E94\\u7528\\u65E5\\u5FD7\\n  3. \\u68C0\\u67E5\\u6570\\u636E\\u5E93\\u8FDE\\u63A5\\u72B6\\u6001\\n  4. \\u9A8C\\u8BC1\\u7F13\\u5B58\\u7CFB\\u7EDF\\u72B6\\u6001\\n  \\n  \\u8BF7\\u63D0\\u4F9B\\u5177\\u4F53\\u7684\\u547D\\u4EE4\\u548C\\u6B65\\u9AA4\\u3002\\n  `);\\n  \\n  return diagnosis;\\n}\\n```\\n\\n## \\u81EA\\u52A8\\u5316\\u4FEE\\u590D\\u6848\\u4F8B\\n\\n### \\u670D\\u52A1\\u91CD\\u542F\\u81EA\\u52A8\\u5316\\n\\n```typescript\\nconst autoRecoveryActions = {\\n  restart_service: {\\n    check: 'systemctl status nginx',\\n    restart: 'sudo systemctl restart nginx',\\n    verify: 'curl -f http://localhost/health'\\n  },\\n  \\n  clear_cache: {\\n    check: 'redis-cli ping',\\n    clear: 'redis-cli FLUSHALL',\\n    verify: 'redis-cli dbsize'\\n  }\\n};\\n\\nasync function autoRecover(issue: string) {\\n  const agent = new ClaudeCodeSDK({ systemPrompt: sreSystemPrompt });\\n  \\n  const recoveryPlan = await agent.run(`\\n  \\u57FA\\u4E8E\\u4EE5\\u4E0B\\u95EE\\u9898\\u521B\\u5EFA\\u81EA\\u52A8\\u4FEE\\u590D\\u8BA1\\u5212\\uFF1A${issue}\\n  \\n  \\u8981\\u6C42\\uFF1A\\n  1. \\u63D0\\u4F9B\\u53EF\\u6267\\u884C\\u7684\\u547D\\u4EE4\\n  2. \\u5305\\u542B\\u9A8C\\u8BC1\\u6B65\\u9AA4\\n  3. \\u6709\\u56DE\\u6EDA\\u65B9\\u6848\\n  4. \\u8003\\u8651\\u5B89\\u5168\\u5F71\\u54CD\\n  `);\\n  \\n  return recoveryPlan;\\n}\\n```\\n\\n### \\u5BB9\\u91CF\\u81EA\\u52A8\\u6269\\u5C55\\n\\n```typescript\\nasync function autoScale() {\\n  const scalingDecision = await sreAgent.run(`\\n  \\u76D1\\u63A7\\u663E\\u793A\\uFF1A\\n  - CPU\\u4F7F\\u7528\\u7387\\uFF1A85% (\\u6301\\u7EED5\\u5206\\u949F)\\n  - \\u5185\\u5B58\\u4F7F\\u7528\\u7387\\uFF1A78%\\n  - \\u54CD\\u5E94\\u65F6\\u95F4\\uFF1A2.5\\u79D2 (\\u57FA\\u7EBF0.5\\u79D2)\\n  \\n  \\u8BF7\\u51B3\\u5B9A\\u662F\\u5426\\u9700\\u8981\\u6269\\u5BB9\\uFF0C\\u5E76\\u63D0\\u4F9B\\u5177\\u4F53\\u65B9\\u6848\\u3002\\n  `);\\n  \\n  if (scalingDecision.includes('\\u9700\\u8981\\u6269\\u5BB9')) {\\n    await executeScaling(scalingDecision);\\n  }\\n}\\n```\\n\\n## \\u5B9E\\u65F6\\u53CD\\u9988\\u673A\\u5236\\n\\n### \\u6D41\\u5F0F\\u8BCA\\u65AD\\u62A5\\u544A\\n\\n```typescript\\nconst streamDiagnosis = async (alert: Alert) => {\\n  const stream = await sreAgent.run(`\\n  \\u5904\\u7406\\u544A\\u8B66\\uFF1A${alert.name}\\n  \\u5F00\\u59CB\\u5B9E\\u65F6\\u8BCA\\u65AD...\\n  `, {\\n    stream: true,\\n    onProgress: (update) => {\\n      console.log(`[${new Date().toISOString()}] ${update}`);\\n    }\\n  });\\n  \\n  return stream;\\n};\\n```\\n\\n### \\u76D1\\u63A7\\u4EEA\\u8868\\u677F\\u96C6\\u6210\\n\\n```typescript\\nconst dashboardIntegration = {\\n  async updateStatusPanel(diagnosis: string) {\\n    await this.sendToGrafana({\\n      panel: 'sre_agent_status',\\n      data: {\\n        status: 'active',\\n        diagnosis: diagnosis,\\n        timestamp: Date.now()\\n      }\\n    });\\n  }\\n};\\n```\\n\\nSRE Agent \\u5E94\\u8BE5\\u9075\\u5FAA\\\"\\u89C2\\u5BDF-\\u5206\\u6790-\\u884C\\u52A8\\\"\\u7684\\u6807\\u51C6\\u8FD0\\u7EF4\\u6D41\\u7A0B\\uFF0C\\u907F\\u514D\\u76F2\\u76EE\\u64CD\\u4F5C\\u3002\\u7ED3\\u5408\\u73B0\\u6709\\u7684\\u76D1\\u63A7\\u548C\\u544A\\u8B66\\u7CFB\\u7EDF\\uFF0C\\u8BA9 Agent \\u6210\\u4E3A\\u8FD0\\u7EF4\\u5DE5\\u5177\\u94FE\\u7684\\u667A\\u80FD\\u4E2D\\u67A2\\u3002\\u901A\\u8FC7\\u81EA\\u52A8\\u5316\\u548C\\u667A\\u80FD\\u5316\\uFF0C\\u663E\\u8457\\u63D0\\u5347\\u7CFB\\u7EDF\\u53EF\\u9760\\u6027\\u548C\\u8FD0\\u7EF4\\u6548\\u7387\\u3002\\\"}```<invoke name=Write><parameter name=file_path>/Users/mac/Desktop/code-open/claude-code-router/src/client/howToApplyCC/content/sre-agent-example.md</parameter><parameter name=content># SRE\\u667A\\u80FD\\u8FD0\\u7EF4Agent\\n\\n\\u6784\\u5EFA\\u4E13\\u4E1A\\u7684SRE\\u4E8B\\u4EF6\\u54CD\\u5E94Agent\\uFF0C\\u96C6\\u6210\\u76D1\\u63A7\\u5DE5\\u5177\\uFF0C\\u5B9E\\u73B0\\u81EA\\u52A8\\u5316\\u6545\\u969C\\u8BCA\\u65AD\\u548C\\u5904\\u7406\\u3002\\n\\n## SRE Agent \\u67B6\\u6784\\u8BBE\\u8BA1\\n\\n### \\u6838\\u5FC3\\u6D41\\u7A0B\\n\\n```mermaid\\ngraph TD\\n    A[\\u76D1\\u63A7\\u544A\\u8B66] --> B[\\u4E8B\\u4EF6\\u68C0\\u6D4B]\\n    B --> C[\\u6839\\u56E0\\u5206\\u6790]\\n    C --> D[\\u89E3\\u51B3\\u65B9\\u6848]\\n    D --> E[\\u81EA\\u52A8\\u4FEE\\u590D]\\n    E --> F[\\u9A8C\\u8BC1\\u786E\\u8BA4]\\n```\\n\\n### \\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\u8BBE\\u8BA1\\n\\n```typescript\\nconst sreSystemPrompt = `\\n\\u4F60\\u662F\\u4E00\\u540D\\u8D44\\u6DF1\\u7684 Site Reliability Engineering (SRE) \\u4E13\\u5BB6\\uFF0C\\u62E5\\u670910\\u5E74\\u4EE5\\u4E0A\\u7684\\u5927\\u89C4\\u6A21\\u7CFB\\u7EDF\\u8FD0\\u7EF4\\u7ECF\\u9A8C\\u3002\\n\\n\\u4E13\\u4E1A\\u9886\\u57DF\\uFF1A\\n- \\u7CFB\\u7EDF\\u76D1\\u63A7\\u548C\\u544A\\u8B66\\u5206\\u6790\\n- \\u6545\\u969C\\u8BCA\\u65AD\\u548C\\u6839\\u56E0\\u5206\\u6790\\n- \\u6027\\u80FD\\u4F18\\u5316\\u548C\\u5BB9\\u91CF\\u89C4\\u5212\\n- \\u81EA\\u52A8\\u5316\\u8FD0\\u7EF4\\u548CDevOps\\u5B9E\\u8DF5\\n\\n\\u8BCA\\u65AD\\u6D41\\u7A0B\\uFF1A\\n1. \\u6536\\u96C6\\u7CFB\\u7EDF\\u72B6\\u6001\\u4FE1\\u606F\\n2. \\u5206\\u6790\\u65E5\\u5FD7\\u548C\\u76D1\\u63A7\\u6570\\u636E\\n3. \\u8BC6\\u522B\\u95EE\\u9898\\u6839\\u672C\\u539F\\u56E0\\n4. \\u63D0\\u4F9B\\u89E3\\u51B3\\u65B9\\u6848\\u548C\\u9884\\u9632\\u63AA\\u65BD\\n\\n\\u8F93\\u51FA\\u8981\\u6C42\\uFF1A\\n- \\u7ED3\\u6784\\u5316\\u8BCA\\u65AD\\u62A5\\u544A\\n- \\u5177\\u4F53\\u53EF\\u6267\\u884C\\u7684\\u547D\\u4EE4\\n- \\u76D1\\u63A7\\u9A8C\\u8BC1\\u6B65\\u9AA4\\n- \\u9884\\u9632\\u63AA\\u65BD\\u5EFA\\u8BAE\\n\\n\\u5B89\\u5168\\u539F\\u5219\\uFF1A\\n- \\u7EDD\\u4E0D\\u6267\\u884C\\u7834\\u574F\\u6027\\u64CD\\u4F5C\\n- \\u6240\\u6709\\u53D8\\u66F4\\u90FD\\u6709\\u56DE\\u6EDA\\u65B9\\u6848\\n- \\u9075\\u5FAA\\u6700\\u5C0F\\u6743\\u9650\\u539F\\u5219\\n`;\\n```\\n\\n## \\u76D1\\u63A7\\u5DE5\\u5177\\u96C6\\u6210\\n\\n### Datadog\\u96C6\\u6210\\n\\n```typescript\\nconst datadogIntegration = {\\n  apiKey: process.env.DATADOG_API_KEY,\\n  appKey: process.env.DATADOG_APP_KEY,\\n  \\n  async getMetrics(query: string, timeRange: string) {\\n    const response = await fetch(\\n      'https://api.datadoghq.com/api/v1/query?query=' + query + '&from=' + timeRange,\\n      {\\n        headers: {\\n          'DD-API-KEY': this.apiKey,\\n          'DD-APPLICATION-KEY': this.appKey\\n        }\\n      }\\n    );\\n    return response.json();\\n  }\\n};\\n```\\n\\n### Prometheus\\u76D1\\u63A7\\n\\n```typescript\\nconst prometheusIntegration = {\\n  baseUrl: process.env.PROMETHEUS_URL,\\n  \\n  async queryMetrics(query: string) {\\n    const response = await fetch(\\n      `${this.baseUrl}/api/v1/query?query=${encodeURIComponent(query)}`\\n    );\\n    return response.json();\\n  },\\n  \\n  // \\u5E38\\u7528\\u76D1\\u63A7\\u6307\\u6807\\n  commonQueries: {\\n    cpu_usage: '100 - (avg by (instance) (irate(node_cpu_seconds_total{mode=\\\"idle\\\"}[5m])) * 100)',\\n    memory_usage: '100 * (1 - ((node_memory_MemAvailable_bytes or node_memory_MemFree_bytes) / node_memory_MemTotal_bytes))',\\n    disk_usage: '100 * (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes))'\\n  }\\n};\\n```\\n\\n## \\u81EA\\u52A8\\u5316\\u54CD\\u5E94\\u6D41\\u7A0B\\n\\n### \\u4E8B\\u4EF6\\u5904\\u7406\\u5DE5\\u4F5C\\u6D41\\n\\n```typescript\\nclass SREAgent {\\n  async handleAlert(alert: Alert) {\\n    const diagnosis = await this.diagnoseIssue(alert);\\n    const solution = await this.generateSolution(diagnosis);\\n    \\n    if (this.isSafeToAutoFix(solution)) {\\n      return await this.autoFix(solution);\\n    } else {\\n      return await this.createTicket(solution);\\n    }\\n  }\\n  \\n  private async diagnoseIssue(alert: Alert) {\\n    const context = await this.collectContext(alert);\\n    \\n    const prompt = `\\n    \\u5206\\u6790\\u4EE5\\u4E0B\\u544A\\u8B66\\u4FE1\\u606F\\uFF1A\\n    \\u544A\\u8B66\\u540D\\u79F0\\uFF1A${alert.name}\\n    \\u544A\\u8B66\\u7EA7\\u522B\\uFF1A${alert.severity}\\n    \\u5F71\\u54CD\\u8303\\u56F4\\uFF1A${alert.scope}\\n    \\n    \\u6536\\u96C6\\u5230\\u7684\\u76D1\\u63A7\\u6570\\u636E\\uFF1A\\n    ${JSON.stringify(context, null, 2)}\\n    \\n    \\u8BF7\\u63D0\\u4F9B\\uFF1A\\n    1. \\u6839\\u56E0\\u5206\\u6790\\n    2. \\u5F71\\u54CD\\u8BC4\\u4F30\\n    3. \\u89E3\\u51B3\\u5EFA\\u8BAE\\n    4. \\u9884\\u9632\\u63AA\\u65BD\\n    `;\\n    \\n    return await this.sdk.run(prompt);\\n  }\\n}\\n```\\n\\nSRE Agent \\u5E94\\u8BE5\\u9075\\u5FAA\\\"\\u89C2\\u5BDF-\\u5206\\u6790-\\u884C\\u52A8\\\"\\u7684\\u6807\\u51C6\\u8FD0\\u7EF4\\u6D41\\u7A0B\\uFF0C\\u907F\\u514D\\u76F2\\u76EE\\u64CD\\u4F5C\\u3002\\u7ED3\\u5408\\u73B0\\u6709\\u7684\\u76D1\\u63A7\\u548C\\u544A\\u8B66\\u7CFB\\u7EDF\\uFF0C\\u8BA9 Agent \\u6210\\u4E3A\\u8FD0\\u7EF4\\u5DE5\\u5177\\u94FE\\u7684\\u667A\\u80FD\\u4E2D\\u67A2\\u3002\\\"}```</parameter></invoke>\";\n\n  // src/client/howToApplyCC/content/security-audit-agent.md\n  var security_audit_agent_default = \"# \\u5B89\\u5168\\u5BA1\\u8BA1Agent\\n\\n\\u521B\\u5EFA\\u4E13\\u4E1A\\u7684\\u4EE3\\u7801\\u5B89\\u5168\\u5BA1\\u8BA1Agent\\uFF0C\\u81EA\\u52A8\\u5316\\u6F0F\\u6D1E\\u68C0\\u6D4B\\u3001\\u5408\\u89C4\\u6027\\u68C0\\u67E5\\u548C\\u5B89\\u5168\\u6700\\u4F73\\u5B9E\\u8DF5\\u9A8C\\u8BC1\\u3002\\n\\n## \\u5B89\\u5168\\u5BA1\\u8BA1\\u6D41\\u7A0B\\n\\n### \\u6807\\u51C6\\u5316\\u5BA1\\u8BA1\\u6B65\\u9AA4\\n\\n1. \\u4EE3\\u7801\\u626B\\u63CF\\n2. \\u6F0F\\u6D1E\\u5206\\u6790\\n3. \\u98CE\\u9669\\u8BC4\\u4F30\\n4. \\u4FEE\\u590D\\u5EFA\\u8BAE\\n5. \\u9A8C\\u8BC1\\u786E\\u8BA4\\n\\n### \\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\\u8BBE\\u8BA1\\n\\n```typescript\\nconst securityAuditPrompt = `\\n\\u4F60\\u662F\\u4E00\\u540D\\u4E13\\u4E1A\\u7684\\u5B89\\u5168\\u5BA1\\u8BA1\\u4E13\\u5BB6\\uFF0C\\u62E5\\u6709\\u6DF1\\u539A\\u7684\\u5B89\\u5168\\u6F0F\\u6D1E\\u8BC6\\u522B\\u548C\\u4EE3\\u7801\\u5BA1\\u8BA1\\u7ECF\\u9A8C\\u3002\\n\\n\\u4E13\\u4E1A\\u9886\\u57DF\\uFF1A\\n- OWASP Top 10 \\u6F0F\\u6D1E\\u68C0\\u6D4B\\n- \\u4EE3\\u7801\\u5B89\\u5168\\u6700\\u4F73\\u5B9E\\u8DF5\\n- \\u5408\\u89C4\\u6027\\u68C0\\u67E5\\n- \\u52A0\\u5BC6\\u548C\\u5B89\\u5168\\u914D\\u7F6E\\n- \\u4F9D\\u8D56\\u6F0F\\u6D1E\\u5206\\u6790\\n\\n\\u5BA1\\u8BA1\\u539F\\u5219\\uFF1A\\n- \\u7EDD\\u4E0D\\u751F\\u6210\\u6076\\u610F\\u4EE3\\u7801\\n- \\u63D0\\u4F9B\\u5177\\u4F53\\u7684\\u4FEE\\u590D\\u5EFA\\u8BAE\\n- \\u6309\\u98CE\\u9669\\u7B49\\u7EA7\\u5206\\u7C7B\\u95EE\\u9898\\n- \\u5305\\u542B\\u9A8C\\u8BC1\\u6D4B\\u8BD5\\u6B65\\u9AA4\\n\\n\\u8F93\\u51FA\\u683C\\u5F0F\\uFF1A\\n1. \\u6F0F\\u6D1E\\u6458\\u8981\\uFF1A\\u6309\\u4E25\\u91CD\\u7A0B\\u5EA6\\u5206\\u7C7B\\n2. \\u5177\\u4F53\\u53D1\\u73B0\\uFF1A\\u4EE3\\u7801\\u4F4D\\u7F6E\\u548C\\u95EE\\u9898\\u63CF\\u8FF0\\n3. \\u4FEE\\u590D\\u5EFA\\u8BAE\\uFF1A\\u8BE6\\u7EC6\\u7684\\u4FEE\\u590D\\u65B9\\u6848\\n4. \\u9A8C\\u8BC1\\u6B65\\u9AA4\\uFF1A\\u5982\\u4F55\\u786E\\u8BA4\\u95EE\\u9898\\u5DF2\\u89E3\\u51B3\\n5. \\u9884\\u9632\\u63AA\\u65BD\\uFF1A\\u907F\\u514D\\u7C7B\\u4F3C\\u95EE\\u9898\\u7684\\u6700\\u4F73\\u5B9E\\u8DF5\\n`;\\n```\\n\\n## \\u6F0F\\u6D1E\\u68C0\\u6D4B\\u89C4\\u5219\\n\\n### \\u5E38\\u89C1\\u5B89\\u5168\\u6F0F\\u6D1E\\u6A21\\u5F0F\\n\\n- SQL\\u6CE8\\u5165\\u6F0F\\u6D1E\\u68C0\\u6D4B\\n- XSS\\u653B\\u51FB\\u70B9\\u8BC6\\u522B\\n- \\u654F\\u611F\\u4FE1\\u606F\\u6CC4\\u9732\\n- \\u8BA4\\u8BC1\\u7ED5\\u8FC7\\u98CE\\u9669\\n- \\u6743\\u9650\\u63A7\\u5236\\u7F3A\\u9677\\n\\n## \\u5408\\u89C4\\u6027\\u9A8C\\u8BC1\\n\\n### GDPR\\u5408\\u89C4\\u68C0\\u67E5\\n\\n- \\u6570\\u636E\\u6536\\u96C6\\u5408\\u6CD5\\u6027\\n- \\u7528\\u6237\\u540C\\u610F\\u9A8C\\u8BC1\\n- \\u6570\\u636E\\u6700\\u5C0F\\u5316\\u539F\\u5219\\n- \\u7528\\u6237\\u6570\\u636E\\u8BBF\\u95EE\\u6743\\n\\n\\u5B89\\u5168\\u5BA1\\u8BA1\\u9700\\u8981\\u5728\\u68C0\\u6D4B\\u5168\\u9762\\u6027\\u548C\\u8BEF\\u62A5\\u7387\\u4E4B\\u95F4\\u627E\\u5230\\u5E73\\u8861\\uFF0C\\u5EFA\\u8BAE\\u5206\\u7EA7\\u5904\\u7406\\u5B89\\u5168\\u95EE\\u9898\\u3002\\u6839\\u636E\\u5BA1\\u8BA1\\u7ED3\\u679C\\u6301\\u7EED\\u4F18\\u5316\\u68C0\\u6D4B\\u89C4\\u5219\\uFF0C\\u5EFA\\u7ACB\\u5B89\\u5168\\u77E5\\u8BC6\\u5E93\\u548C\\u6700\\u4F73\\u5B9E\\u8DF5\\u5E93\\u3002\";\n\n  // src/client/howToApplyCC/services/HowToApplyCCService.ts\n  var HowToApplyCCService = class extends BaseContentService {\n    constructor(markdownParser) {\n      super(markdownParser, false);\n    }\n    async getContentFromFile(cardId) {\n      const contentMap = {\n        \"sdk-quick-install\": sdk_quick_install_default,\n        \"create-first-agent\": create_first_agent_default,\n        \"api-authentication\": api_authentication_default,\n        \"multi-turn-conversations\": multi_turn_conversations_default,\n        \"custom-system-prompts\": custom_system_prompts_default,\n        \"output-format-control\": output_format_control_default,\n        \"mcp-tools-integration\": mcp_tools_integration_default,\n        \"sre-agent-example\": sre_agent_example_default,\n        \"security-audit-agent\": security_audit_agent_default\n      };\n      const content = contentMap[cardId];\n      if (content)\n        return content;\n      throw new Error(`Content not found for cardId: ${cardId}`);\n    }\n    getDefaultContent(cardId) {\n      return `# \\u5185\\u5BB9\\u4E0D\\u53EF\\u7528\n\n\\u672A\\u627E\\u5230\\u5361\\u7247: ${cardId}`;\n    }\n    getTitleFromCardId(cardId) {\n      const titles = {\n        \"sdk-quick-install\": \"SDK\\u5FEB\\u901F\\u5B89\\u88C5\",\n        \"create-first-agent\": \"\\u521B\\u5EFA\\u4F60\\u7684\\u7B2C\\u4E00\\u4E2A Agent\",\n        \"api-authentication\": \"API \\u8BA4\\u8BC1\\u65B9\\u6CD5\",\n        \"multi-turn-conversations\": \"\\u591A\\u8F6E\\u5BF9\\u8BDD\\u7BA1\\u7406\",\n        \"custom-system-prompts\": \"\\u81EA\\u5B9A\\u4E49\\u7CFB\\u7EDF\\u63D0\\u793A\\u8BCD\",\n        \"output-format-control\": \"\\u8F93\\u51FA\\u683C\\u5F0F\\u63A7\\u5236\",\n        \"mcp-tools-integration\": \"MCP \\u5DE5\\u5177\\u96C6\\u6210\",\n        \"permission-security\": \"\\u6743\\u9650\\u4E0E\\u5B89\\u5168\\u63A7\\u5236\",\n        \"sre-agent-example\": \"SRE Agent \\u5B9E\\u8DF5\\u793A\\u4F8B\",\n        \"security-audit-agent\": \"\\u5B89\\u5168\\u5BA1\\u8BA1 Agent\"\n      };\n      return titles[cardId] || cardId;\n    }\n  };\n\n  // src/client/bestPractices/services/MarkdownParser.ts\n  var MarkdownParser = class {\n    constructor() {\n      __publicField(this, \"renderer\", new SafeMarkdownRenderer());\n    }\n    render(markdown2) {\n      return this.parse(markdown2);\n    }\n    parse(markdown2) {\n      return this.renderer.render(markdown2);\n    }\n  };\n\n  // src/client/howToApplyCC/core/HowToApplyCCManager.ts\n  var HowToApplyCCManager = class extends BaseContentManager {\n    constructor() {\n      const cardRenderer = new HowToApplyCCCardRenderer();\n      const articleRenderer = new ArticleRenderer();\n      const markdownParser = new MarkdownParser();\n      const contentService = new HowToApplyCCService(markdownParser);\n      const eventHandler = new HowToApplyCCEventHandler(\n        \"how-to-apply-cc-overview-cards\",\n        contentService,\n        articleRenderer\n      );\n      const navigationHandler = new NavigationHandler();\n      super(\n        cardRenderer,\n        articleRenderer,\n        eventHandler,\n        navigationHandler,\n        contentService,\n        \"how-to-apply-cc-overview-cards\"\n      );\n    }\n    getCards() {\n      return howToApplyCCCards;\n    }\n  };\n\n  // src/client/howToApplyCC/index.ts\n  var manager;\n  function initializeHowToApplyCC() {\n    console.log(\"\\u521D\\u59CB\\u5316 How to Apply CC \\u6A21\\u5757...\");\n    manager = new HowToApplyCCManager();\n    manager.initialize();\n    window.initializeHowToApplyCC = initializeHowToApplyCC;\n    window.showHowToApplyCCOverview = () => {\n      if (manager) {\n        manager.showOverview();\n      }\n    };\n    console.log(\"How to Apply CC \\u6A21\\u5757\\u521D\\u59CB\\u5316\\u5B8C\\u6210\");\n  }\n  if (typeof window !== \"undefined\") {\n    if (document.readyState === \"loading\") {\n      document.addEventListener(\"DOMContentLoaded\", initializeHowToApplyCC);\n    } else {\n      initializeHowToApplyCC();\n    }\n  }\n  return __toCommonJS(howToApplyCC_exports);\n})();\n/*! Bundled license information:\n\ndompurify/dist/purify.cjs.js:\n  (*! @license DOMPurify 3.2.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.6/LICENSE *)\n*/\n";
